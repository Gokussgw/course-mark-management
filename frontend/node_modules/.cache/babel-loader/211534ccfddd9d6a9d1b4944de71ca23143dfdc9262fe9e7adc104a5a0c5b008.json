{"ast":null,"code":"import _regenerator from \"C:/Users/ansmu/Desktop/Web/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _asyncToGenerator from \"C:/Users/ansmu/Desktop/Web/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"C:/Users/ansmu/Desktop/Web/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url.to-json.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { mapGetters } from 'vuex';\nimport * as bootstrap from 'bootstrap';\nexport default {\n  name: 'AdminEnrollmentManagement',\n  data: function data() {\n    return {\n      selectedCourseId: '',\n      searchQuery: '',\n      currentCourseEnrollments: [],\n      allStudents: [],\n      bulkEnrollForm: {\n        studentIds: [],\n        academicYear: '2025-2026',\n        semester: 'Fall'\n      },\n      enrollmentToRemove: null\n    };\n  },\n  computed: _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, mapGetters('auth', ['getUser'])), mapGetters('courses', ['getCourses'])), mapGetters('enrollments', ['getAvailableStudents', 'isLoading'])), mapGetters('users', ['getUsers'])), {}, {\n    userInfo: function userInfo() {\n      return this.getUser || {\n        name: 'Admin'\n      };\n    },\n    courses: function courses() {\n      return this.getCourses;\n    },\n    availableStudents: function availableStudents() {\n      return this.getAvailableStudents;\n    },\n    selectedCourse: function selectedCourse() {\n      var _this = this;\n      return this.courses.find(function (c) {\n        return c.id == _this.selectedCourseId;\n      });\n    },\n    filteredCourseEnrollments: function filteredCourseEnrollments() {\n      if (!this.searchQuery) return this.currentCourseEnrollments;\n      var query = this.searchQuery.toLowerCase();\n      return this.currentCourseEnrollments.filter(function (enrollment) {\n        return enrollment.student_name.toLowerCase().includes(query) || enrollment.student_email.toLowerCase().includes(query) || enrollment.matric_number && enrollment.matric_number.toLowerCase().includes(query);\n      });\n    },\n    totalStudents: function totalStudents() {\n      return this.allStudents.length;\n    },\n    totalCourses: function totalCourses() {\n      return this.courses.length;\n    },\n    totalEnrollments: function totalEnrollments() {\n      return this.allStudents.reduce(function (total, student) {\n        return total + (student.enrollment_count || 0);\n      }, 0);\n    }\n  }),\n  created: function created() {\n    var _this2 = this;\n    return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n      return _regenerator().w(function (_context) {\n        while (1) switch (_context.n) {\n          case 0:\n            _context.n = 1;\n            return _this2.loadInitialData();\n          case 1:\n            return _context.a(2);\n        }\n      }, _callee);\n    }))();\n  },\n  methods: {\n    loadInitialData: function loadInitialData() {\n      var _this3 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n        var _t;\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              _context2.p = 0;\n              _context2.n = 1;\n              return Promise.all([_this3.$store.dispatch('courses/fetchCourses'), _this3.loadAllStudents()]);\n            case 1:\n              _context2.n = 3;\n              break;\n            case 2:\n              _context2.p = 2;\n              _t = _context2.v;\n              console.error('Error loading initial data:', _t);\n              _this3.$store.dispatch('showToast', {\n                message: 'Error loading data',\n                type: 'error'\n              });\n            case 3:\n              return _context2.a(2);\n          }\n        }, _callee2, null, [[0, 2]]);\n      }))();\n    },\n    loadAllStudents: function loadAllStudents() {\n      var _this4 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {\n        var response, _t2;\n        return _regenerator().w(function (_context3) {\n          while (1) switch (_context3.n) {\n            case 0:\n              _context3.p = 0;\n              _context3.n = 1;\n              return _this4.$store.dispatch('users/fetchUsers');\n            case 1:\n              response = _context3.v;\n              _this4.allStudents = response.filter(function (user) {\n                return user.role === 'student';\n              });\n              _context3.n = 3;\n              break;\n            case 2:\n              _context3.p = 2;\n              _t2 = _context3.v;\n              console.error('Error loading students:', _t2);\n            case 3:\n              return _context3.a(2);\n          }\n        }, _callee3, null, [[0, 2]]);\n      }))();\n    },\n    loadCourseEnrollments: function loadCourseEnrollments() {\n      var _this5 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4() {\n        var _t3;\n        return _regenerator().w(function (_context4) {\n          while (1) switch (_context4.n) {\n            case 0:\n              if (_this5.selectedCourseId) {\n                _context4.n = 1;\n                break;\n              }\n              _this5.currentCourseEnrollments = [];\n              return _context4.a(2);\n            case 1:\n              _context4.p = 1;\n              _context4.n = 2;\n              return Promise.all([_this5.$store.dispatch('enrollments/fetchCourseEnrollments', _this5.selectedCourseId), _this5.$store.dispatch('enrollments/fetchAvailableStudents', _this5.selectedCourseId)]);\n            case 2:\n              _this5.currentCourseEnrollments = _this5.$store.getters['enrollments/getEnrollments'];\n              _context4.n = 4;\n              break;\n            case 3:\n              _context4.p = 3;\n              _t3 = _context4.v;\n              console.error('Error loading course enrollments:', _t3);\n              _this5.$store.dispatch('showToast', {\n                message: 'Error loading course enrollments',\n                type: 'error'\n              });\n            case 4:\n              return _context4.a(2);\n          }\n        }, _callee4, null, [[1, 3]]);\n      }))();\n    },\n    getLecturerName: function getLecturerName(lecturerId) {\n      var lecturer = this.getUsers.find(function (u) {\n        return u.id === lecturerId && u.role === 'lecturer';\n      });\n      return lecturer ? lecturer.name : 'Unknown Lecturer';\n    },\n    getStudentInitials: function getStudentInitials(name) {\n      return name.split(' ').map(function (n) {\n        return n[0];\n      }).join('').toUpperCase();\n    },\n    formatDate: function formatDate(dateString) {\n      if (!dateString) return 'N/A';\n      return new Date(dateString).toLocaleDateString('en-GB', {\n        day: 'numeric',\n        month: 'short',\n        year: 'numeric'\n      });\n    },\n    openBulkEnrollModal: function openBulkEnrollModal() {\n      var _this$selectedCourse;\n      this.bulkEnrollForm = {\n        studentIds: [],\n        academicYear: ((_this$selectedCourse = this.selectedCourse) === null || _this$selectedCourse === void 0 ? void 0 : _this$selectedCourse.academic_year) || '2025-2026',\n        semester: 'Fall'\n      };\n      var modal = new bootstrap.Modal(document.getElementById('bulkEnrollModal'));\n      modal.show();\n    },\n    toggleSelectAllStudents: function toggleSelectAllStudents(event) {\n      if (event.target.checked) {\n        this.bulkEnrollForm.studentIds = this.availableStudents.map(function (s) {\n          return s.id;\n        });\n      } else {\n        this.bulkEnrollForm.studentIds = [];\n      }\n    },\n    bulkEnrollStudents: function bulkEnrollStudents() {\n      var _this6 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee5() {\n        var result, modalElement, modal, _t4;\n        return _regenerator().w(function (_context5) {\n          while (1) switch (_context5.n) {\n            case 0:\n              _context5.p = 0;\n              _context5.n = 1;\n              return _this6.$store.dispatch('enrollments/bulkEnrollStudents', {\n                courseId: _this6.selectedCourseId,\n                studentIds: _this6.bulkEnrollForm.studentIds,\n                academicYear: _this6.bulkEnrollForm.academicYear,\n                semester: _this6.bulkEnrollForm.semester\n              });\n            case 1:\n              result = _context5.v;\n              // Close modal\n              modalElement = document.getElementById('bulkEnrollModal');\n              modal = bootstrap.Modal.getInstance(modalElement);\n              modal.hide();\n\n              // Refresh enrollments\n              _context5.n = 2;\n              return _this6.loadCourseEnrollments();\n            case 2:\n              _this6.$store.dispatch('showToast', {\n                message: result.message,\n                type: 'success'\n              });\n              _context5.n = 4;\n              break;\n            case 3:\n              _context5.p = 3;\n              _t4 = _context5.v;\n              console.error('Error bulk enrolling students:', _t4);\n              _this6.$store.dispatch('showToast', {\n                message: _t4.message || 'Error enrolling students',\n                type: 'error'\n              });\n            case 4:\n              return _context5.a(2);\n          }\n        }, _callee5, null, [[0, 3]]);\n      }))();\n    },\n    confirmRemoveEnrollment: function confirmRemoveEnrollment(enrollment) {\n      this.enrollmentToRemove = enrollment;\n      var modal = new bootstrap.Modal(document.getElementById('removeEnrollmentModal'));\n      modal.show();\n    },\n    removeEnrollment: function removeEnrollment() {\n      var _this7 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee6() {\n        var modalElement, modal, _t5;\n        return _regenerator().w(function (_context6) {\n          while (1) switch (_context6.n) {\n            case 0:\n              _context6.p = 0;\n              _context6.n = 1;\n              return _this7.$store.dispatch('enrollments/removeEnrollment', {\n                enrollmentId: _this7.enrollmentToRemove.enrollment_id,\n                courseId: _this7.selectedCourseId\n              });\n            case 1:\n              // Close modal\n              modalElement = document.getElementById('removeEnrollmentModal');\n              modal = bootstrap.Modal.getInstance(modalElement);\n              modal.hide();\n\n              // Refresh enrollments\n              _context6.n = 2;\n              return _this7.loadCourseEnrollments();\n            case 2:\n              _this7.$store.dispatch('showToast', {\n                message: 'Student removed from course successfully!',\n                type: 'success'\n              });\n              _this7.enrollmentToRemove = null;\n              _context6.n = 4;\n              break;\n            case 3:\n              _context6.p = 3;\n              _t5 = _context6.v;\n              console.error('Error removing enrollment:', _t5);\n              _this7.$store.dispatch('showToast', {\n                message: _t5.message || 'Error removing student',\n                type: 'error'\n              });\n            case 4:\n              return _context6.a(2);\n          }\n        }, _callee6, null, [[0, 3]]);\n      }))();\n    },\n    viewStudentDetails: function viewStudentDetails(studentId) {\n      // Navigate to student details page\n      this.$router.push(\"/admin/student/\".concat(studentId));\n    },\n    openStudentEnrollmentHistoryModal: function openStudentEnrollmentHistoryModal() {\n      // This could open a modal to search and view student enrollment history\n      this.$store.dispatch('showToast', {\n        message: 'Student enrollment history feature coming soon',\n        type: 'info'\n      });\n    },\n    openTransferStudentModal: function openTransferStudentModal() {\n      // This could open a modal to transfer students between courses\n      this.$store.dispatch('showToast', {\n        message: 'Student transfer feature coming soon',\n        type: 'info'\n      });\n    },\n    exportAllEnrollments: function exportAllEnrollments() {\n      var _this8 = this,\n        _this$selectedCourse2;\n      if (!this.currentCourseEnrollments.length) {\n        this.$store.dispatch('showToast', {\n          message: 'No enrollments to export',\n          type: 'warning'\n        });\n        return;\n      }\n\n      // Create CSV content\n      var headers = ['Course Code', 'Course Name', 'Student Name', 'Matric Number', 'Email', 'Academic Year', 'Semester', 'Enrolled Date'];\n      var csvContent = headers.join(',') + '\\n';\n      this.currentCourseEnrollments.forEach(function (enrollment) {\n        var _this8$selectedCourse, _this8$selectedCourse2;\n        var row = [((_this8$selectedCourse = _this8.selectedCourse) === null || _this8$selectedCourse === void 0 ? void 0 : _this8$selectedCourse.code) || 'N/A', \"\\\"\".concat(((_this8$selectedCourse2 = _this8.selectedCourse) === null || _this8$selectedCourse2 === void 0 ? void 0 : _this8$selectedCourse2.name) || 'N/A', \"\\\"\"), \"\\\"\".concat(enrollment.student_name, \"\\\"\"), enrollment.matric_number || 'N/A', enrollment.student_email, enrollment.academic_year, enrollment.semester, _this8.formatDate(enrollment.enrolled_at)];\n        csvContent += row.join(',') + '\\n';\n      });\n\n      // Download CSV\n      var blob = new Blob([csvContent], {\n        type: 'text/csv;charset=utf-8;'\n      });\n      var url = URL.createObjectURL(blob);\n      var link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', \"\".concat(((_this$selectedCourse2 = this.selectedCourse) === null || _this$selectedCourse2 === void 0 ? void 0 : _this$selectedCourse2.code) || 'course', \"_enrollments.csv\"));\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    },\n    logout: function logout() {\n      var _this9 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee7() {\n        return _regenerator().w(function (_context7) {\n          while (1) switch (_context7.n) {\n            case 0:\n              if (!confirm('Are you sure you want to logout?')) {\n                _context7.n = 2;\n                break;\n              }\n              _context7.n = 1;\n              return _this9.$store.dispatch('auth/logout');\n            case 1:\n              _this9.$router.push('/login');\n            case 2:\n              return _context7.a(2);\n          }\n        }, _callee7);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","bootstrap","name","data","selectedCourseId","searchQuery","currentCourseEnrollments","allStudents","bulkEnrollForm","studentIds","academicYear","semester","enrollmentToRemove","computed","_objectSpread","userInfo","getUser","courses","getCourses","availableStudents","getAvailableStudents","selectedCourse","_this","find","c","id","filteredCourseEnrollments","query","toLowerCase","filter","enrollment","student_name","includes","student_email","matric_number","totalStudents","length","totalCourses","totalEnrollments","reduce","total","student","enrollment_count","created","_this2","_asyncToGenerator","_regenerator","m","_callee","w","_context","n","loadInitialData","a","methods","_this3","_callee2","_t","_context2","p","Promise","all","$store","dispatch","loadAllStudents","v","console","error","message","type","_this4","_callee3","response","_t2","_context3","user","role","loadCourseEnrollments","_this5","_callee4","_t3","_context4","getters","getLecturerName","lecturerId","lecturer","getUsers","u","getStudentInitials","split","map","join","toUpperCase","formatDate","dateString","Date","toLocaleDateString","day","month","year","openBulkEnrollModal","_this$selectedCourse","academic_year","modal","Modal","document","getElementById","show","toggleSelectAllStudents","event","target","checked","s","bulkEnrollStudents","_this6","_callee5","result","modalElement","_t4","_context5","courseId","getInstance","hide","confirmRemoveEnrollment","removeEnrollment","_this7","_callee6","_t5","_context6","enrollmentId","enrollment_id","viewStudentDetails","studentId","$router","push","concat","openStudentEnrollmentHistoryModal","openTransferStudentModal","exportAllEnrollments","_this8","_this$selectedCourse2","headers","csvContent","forEach","_this8$selectedCourse","_this8$selectedCourse2","row","code","enrolled_at","blob","Blob","url","URL","createObjectURL","link","createElement","href","setAttribute","body","appendChild","click","removeChild","logout","_this9","_callee7","_context7","confirm"],"sources":["C:\\Users\\ansmu\\Desktop\\Web\\course-mark-management\\frontend\\src\\views\\admin\\EnrollmentManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"admin-enrollment-management\">\r\n    <!-- Dashboard Header -->\r\n    <div class=\"dashboard-header d-flex justify-content-between align-items-center mb-4\">\r\n      <h1 class=\"mb-0\">Student Enrollment Management</h1>\r\n      <div class=\"user-info d-flex align-items-center\">\r\n        <span class=\"me-3\">Welcome, {{ userInfo.name }}</span>\r\n        <button class=\"btn btn-outline-danger btn-sm\" @click=\"logout\">\r\n          <i class=\"fas fa-sign-out-alt me-1\"></i>\r\n          Logout\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Stats Overview -->\r\n    <div class=\"row mb-4\">\r\n      <div class=\"col-md-3\">\r\n        <div class=\"card bg-primary text-white\">\r\n          <div class=\"card-body\">\r\n            <div class=\"d-flex justify-content-between\">\r\n              <div>\r\n                <h5 class=\"card-title\">Total Students</h5>\r\n                <h2 class=\"mb-0\">{{ totalStudents }}</h2>\r\n              </div>\r\n              <div class=\"align-self-center\">\r\n                <i class=\"fas fa-user-graduate fa-2x\"></i>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n        <div class=\"card bg-success text-white\">\r\n          <div class=\"card-body\">\r\n            <div class=\"d-flex justify-content-between\">\r\n              <div>\r\n                <h5 class=\"card-title\">Total Courses</h5>\r\n                <h2 class=\"mb-0\">{{ totalCourses }}</h2>\r\n              </div>\r\n              <div class=\"align-self-center\">\r\n                <i class=\"fas fa-book fa-2x\"></i>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n        <div class=\"card bg-info text-white\">\r\n          <div class=\"card-body\">\r\n            <div class=\"d-flex justify-content-between\">\r\n              <div>\r\n                <h5 class=\"card-title\">Total Enrollments</h5>\r\n                <h2 class=\"mb-0\">{{ totalEnrollments }}</h2>\r\n              </div>\r\n              <div class=\"align-self-center\">\r\n                <i class=\"fas fa-users fa-2x\"></i>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n        <div class=\"card bg-warning text-white\">\r\n          <div class=\"card-body\">\r\n            <div class=\"d-flex justify-content-between\">\r\n              <div>\r\n                <h5 class=\"card-title\">Current Semester</h5>\r\n                <h2 class=\"mb-0\">Fall 2025</h2>\r\n              </div>\r\n              <div class=\"align-self-center\">\r\n                <i class=\"fas fa-calendar fa-2x\"></i>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Course Selection and Management -->\r\n    <div class=\"row\">\r\n      <div class=\"col-md-8\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header\">\r\n            <div class=\"d-flex justify-content-between align-items-center\">\r\n              <h5 class=\"mb-0\">Course Enrollments</h5>\r\n              <div class=\"d-flex gap-2\">\r\n                <select class=\"form-select form-select-sm\" v-model=\"selectedCourseId\" @change=\"loadCourseEnrollments\" style=\"width: 250px;\">\r\n                  <option value=\"\">Select a course...</option>\r\n                  <option v-for=\"course in courses\" :key=\"course.id\" :value=\"course.id\">\r\n                    {{ course.code }} - {{ course.name }}\r\n                  </option>\r\n                </select>\r\n                <button class=\"btn btn-success btn-sm\" @click=\"openBulkEnrollModal\" :disabled=\"!selectedCourseId\">\r\n                  <i class=\"fas fa-users me-1\"></i>Bulk Enroll\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div v-if=\"!selectedCourseId\" class=\"text-center py-4\">\r\n              <i class=\"fas fa-book-open fa-3x text-muted mb-3\"></i>\r\n              <h6 class=\"text-muted\">Select a course to manage enrollments</h6>\r\n              <p class=\"text-muted\">Choose a course from the dropdown above to view and manage student enrollments.</p>\r\n            </div>\r\n\r\n            <div v-else-if=\"isLoading\" class=\"text-center py-4\">\r\n              <div class=\"spinner-border text-primary\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>\r\n\r\n            <div v-else-if=\"currentCourseEnrollments.length === 0\" class=\"text-center py-4\">\r\n              <i class=\"fas fa-users fa-3x text-muted mb-3\"></i>\r\n              <h6 class=\"text-muted\">No students enrolled</h6>\r\n              <p class=\"text-muted\">This course has no enrolled students yet.</p>\r\n              <button class=\"btn btn-primary\" @click=\"openBulkEnrollModal\">\r\n                <i class=\"fas fa-user-plus me-2\"></i>Enroll Students\r\n              </button>\r\n            </div>\r\n\r\n            <div v-else>\r\n              <div class=\"d-flex justify-content-between align-items-center mb-3\">\r\n                <div>\r\n                  <span class=\"badge bg-primary me-2\">{{ currentCourseEnrollments.length }} enrolled</span>\r\n                  <span class=\"text-muted\">{{ selectedCourse?.code }} - {{ selectedCourse?.name }}</span>\r\n                </div>\r\n                <input \r\n                  type=\"text\" \r\n                  class=\"form-control form-control-sm\" \r\n                  placeholder=\"Search students...\"\r\n                  v-model=\"searchQuery\"\r\n                  style=\"width: 200px;\"\r\n                >\r\n              </div>\r\n\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table table-hover align-middle\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Student</th>\r\n                      <th>Matric Number</th>\r\n                      <th>Email</th>\r\n                      <th>Academic Year</th>\r\n                      <th>Semester</th>\r\n                      <th>Enrolled Date</th>\r\n                      <th>Actions</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr v-for=\"enrollment in filteredCourseEnrollments\" :key=\"enrollment.enrollment_id\">\r\n                      <td>\r\n                        <div class=\"d-flex align-items-center\">\r\n                          <div class=\"avatar avatar-sm me-3\">\r\n                            {{ getStudentInitials(enrollment.student_name) }}\r\n                          </div>\r\n                          <strong>{{ enrollment.student_name }}</strong>\r\n                        </div>\r\n                      </td>\r\n                      <td>{{ enrollment.matric_number || 'N/A' }}</td>\r\n                      <td>{{ enrollment.student_email }}</td>\r\n                      <td>{{ enrollment.academic_year }}</td>\r\n                      <td>{{ enrollment.semester }}</td>\r\n                      <td>{{ formatDate(enrollment.enrolled_at) }}</td>\r\n                      <td>\r\n                        <div class=\"btn-group btn-group-sm\">\r\n                          <button \r\n                            class=\"btn btn-outline-info\"\r\n                            @click=\"viewStudentDetails(enrollment.student_id)\"\r\n                            title=\"View Student Details\"\r\n                          >\r\n                            <i class=\"fas fa-eye\"></i>\r\n                          </button>\r\n                          <button \r\n                            class=\"btn btn-outline-danger\" \r\n                            @click=\"confirmRemoveEnrollment(enrollment)\"\r\n                            title=\"Remove from Course\"\r\n                          >\r\n                            <i class=\"fas fa-user-minus\"></i>\r\n                          </button>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-md-4\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header\">\r\n            <h5 class=\"mb-0\">Quick Actions</h5>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div class=\"d-grid gap-2\">\r\n              <button class=\"btn btn-primary\" @click=\"openStudentEnrollmentHistoryModal\">\r\n                <i class=\"fas fa-history me-2\"></i>View Student History\r\n              </button>\r\n              <button class=\"btn btn-info\" @click=\"exportAllEnrollments\">\r\n                <i class=\"fas fa-file-export me-2\"></i>Export All Enrollments\r\n              </button>\r\n              <button class=\"btn btn-warning\" @click=\"openTransferStudentModal\">\r\n                <i class=\"fas fa-exchange-alt me-2\"></i>Transfer Student\r\n              </button>\r\n              <router-link to=\"/admin/dashboard\" class=\"btn btn-outline-secondary\">\r\n                <i class=\"fas fa-arrow-left me-2\"></i>Back to Dashboard\r\n              </router-link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"card mt-3\">\r\n          <div class=\"card-header\">\r\n            <h5 class=\"mb-0\">Course Statistics</h5>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div v-if=\"selectedCourse\">\r\n              <div class=\"stat-item\">\r\n                <strong>Course Code:</strong> {{ selectedCourse.code }}\r\n              </div>\r\n              <div class=\"stat-item\">\r\n                <strong>Course Name:</strong> {{ selectedCourse.name }}\r\n              </div>\r\n              <div class=\"stat-item\">\r\n                <strong>Lecturer:</strong> {{ getLecturerName(selectedCourse.lecturer_id) }}\r\n              </div>\r\n              <div class=\"stat-item\">\r\n                <strong>Academic Year:</strong> {{ selectedCourse.academic_year || 'N/A' }}\r\n              </div>\r\n              <div class=\"stat-item\">\r\n                <strong>Semester:</strong> {{ selectedCourse.semester || 'N/A' }}\r\n              </div>\r\n              <div class=\"stat-item\">\r\n                <strong>Enrolled Students:</strong> {{ currentCourseEnrollments.length }}\r\n              </div>\r\n            </div>\r\n            <div v-else class=\"text-muted text-center\">\r\n              Select a course to view statistics\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Bulk Enrollment Modal -->\r\n    <div class=\"modal fade\" id=\"bulkEnrollModal\" tabindex=\"-1\" aria-labelledby=\"bulkEnrollModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"bulkEnrollModalLabel\">Bulk Enroll Students</h5>\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div v-if=\"selectedCourse\" class=\"alert alert-info\">\r\n              <strong>Course:</strong> {{ selectedCourse.code }} - {{ selectedCourse.name }}\r\n            </div>\r\n            \r\n            <form @submit.prevent=\"bulkEnrollStudents\">\r\n              <div class=\"row mb-3\">\r\n                <div class=\"col-md-6\">\r\n                  <label for=\"bulkAcademicYear\" class=\"form-label\">Academic Year</label>\r\n                  <input \r\n                    type=\"text\" \r\n                    class=\"form-control\" \r\n                    id=\"bulkAcademicYear\" \r\n                    v-model=\"bulkEnrollForm.academicYear\"\r\n                    placeholder=\"e.g., 2025-2026\"\r\n                    required\r\n                  >\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <label for=\"bulkSemester\" class=\"form-label\">Semester</label>\r\n                  <select class=\"form-select\" id=\"bulkSemester\" v-model=\"bulkEnrollForm.semester\" required>\r\n                    <option value=\"\">Select Semester</option>\r\n                    <option value=\"Fall\">Fall</option>\r\n                    <option value=\"Spring\">Spring</option>\r\n                    <option value=\"Summer\">Summer</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              \r\n              <div class=\"mb-3\">\r\n                <label class=\"form-label\">Select Students to Enroll</label>\r\n                <div class=\"d-flex justify-content-between align-items-center mb-2\">\r\n                  <div class=\"form-check\">\r\n                    <input \r\n                      class=\"form-check-input\" \r\n                      type=\"checkbox\" \r\n                      id=\"selectAllStudents\"\r\n                      @change=\"toggleSelectAllStudents\"\r\n                      :checked=\"bulkEnrollForm.studentIds.length === availableStudents.length && availableStudents.length > 0\"\r\n                    >\r\n                    <label class=\"form-check-label\" for=\"selectAllStudents\">\r\n                      Select All ({{ availableStudents.length }} available)\r\n                    </label>\r\n                  </div>\r\n                  <span class=\"badge bg-primary\">{{ bulkEnrollForm.studentIds.length }} selected</span>\r\n                </div>\r\n                \r\n                <div class=\"student-list\" style=\"max-height: 300px; overflow-y: auto;\">\r\n                  <div v-for=\"student in availableStudents\" :key=\"student.id\" class=\"form-check\">\r\n                    <input \r\n                      class=\"form-check-input\" \r\n                      type=\"checkbox\" \r\n                      :id=\"`bulk-student-${student.id}`\"\r\n                      :value=\"student.id\"\r\n                      v-model=\"bulkEnrollForm.studentIds\"\r\n                    >\r\n                    <label class=\"form-check-label\" :for=\"`bulk-student-${student.id}`\">\r\n                      <strong>{{ student.name }}</strong> - {{ student.email }}\r\n                      <small class=\"text-muted d-block\">{{ student.matric_number || 'No matric number' }}</small>\r\n                      <small class=\"text-muted\">{{ student.enrollment_count }} current enrollments</small>\r\n                    </label>\r\n                  </div>\r\n                  \r\n                  <div v-if=\"availableStudents.length === 0\" class=\"text-center py-3 text-muted\">\r\n                    <div v-if=\"isLoading\">Loading available students...</div>\r\n                    <div v-else>No students available for enrollment</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div class=\"d-flex justify-content-end gap-2\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\r\n                <button \r\n                  type=\"submit\" \r\n                  class=\"btn btn-primary\" \r\n                  :disabled=\"isLoading || bulkEnrollForm.studentIds.length === 0\"\r\n                >\r\n                  <span v-if=\"isLoading\" class=\"spinner-border spinner-border-sm me-2\"></span>\r\n                  Enroll {{ bulkEnrollForm.studentIds.length }} Students\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Remove Enrollment Confirmation Modal -->\r\n    <div class=\"modal fade\" id=\"removeEnrollmentModal\" tabindex=\"-1\" aria-labelledby=\"removeEnrollmentModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"removeEnrollmentModalLabel\">Remove Student Enrollment</h5>\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div v-if=\"enrollmentToRemove\">\r\n              <div class=\"alert alert-warning\">\r\n                <i class=\"fas fa-exclamation-triangle me-2\"></i>\r\n                <strong>Warning:</strong> This action will remove the student from the course and delete all their marks.\r\n              </div>\r\n              <p>Are you sure you want to remove <strong>{{ enrollmentToRemove.student_name }}</strong> from <strong>{{ selectedCourse?.code }}</strong>?</p>\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\r\n            <button \r\n              type=\"button\" \r\n              class=\"btn btn-danger\" \r\n              @click=\"removeEnrollment\"\r\n              :disabled=\"isLoading\"\r\n            >\r\n              <span v-if=\"isLoading\" class=\"spinner-border spinner-border-sm me-2\"></span>\r\n              Remove Student\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex';\r\nimport * as bootstrap from 'bootstrap';\r\n\r\nexport default {\r\n  name: 'AdminEnrollmentManagement',\r\n  data() {\r\n    return {\r\n      selectedCourseId: '',\r\n      searchQuery: '',\r\n      currentCourseEnrollments: [],\r\n      allStudents: [],\r\n      bulkEnrollForm: {\r\n        studentIds: [],\r\n        academicYear: '2025-2026',\r\n        semester: 'Fall'\r\n      },\r\n      enrollmentToRemove: null\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters('auth', ['getUser']),\r\n    ...mapGetters('courses', ['getCourses']),\r\n    ...mapGetters('enrollments', ['getAvailableStudents', 'isLoading']),\r\n    ...mapGetters('users', ['getUsers']),\r\n    \r\n    userInfo() {\r\n      return this.getUser || { name: 'Admin' };\r\n    },\r\n    \r\n    courses() {\r\n      return this.getCourses;\r\n    },\r\n    \r\n    availableStudents() {\r\n      return this.getAvailableStudents;\r\n    },\r\n    \r\n    selectedCourse() {\r\n      return this.courses.find(c => c.id == this.selectedCourseId);\r\n    },\r\n    \r\n    filteredCourseEnrollments() {\r\n      if (!this.searchQuery) return this.currentCourseEnrollments;\r\n      \r\n      const query = this.searchQuery.toLowerCase();\r\n      return this.currentCourseEnrollments.filter(enrollment => \r\n        enrollment.student_name.toLowerCase().includes(query) ||\r\n        enrollment.student_email.toLowerCase().includes(query) ||\r\n        (enrollment.matric_number && enrollment.matric_number.toLowerCase().includes(query))\r\n      );\r\n    },\r\n    \r\n    totalStudents() {\r\n      return this.allStudents.length;\r\n    },\r\n    \r\n    totalCourses() {\r\n      return this.courses.length;\r\n    },\r\n    \r\n    totalEnrollments() {\r\n      return this.allStudents.reduce((total, student) => total + (student.enrollment_count || 0), 0);\r\n    }\r\n  },\r\n  async created() {\r\n    await this.loadInitialData();\r\n  },\r\n  methods: {\r\n    async loadInitialData() {\r\n      try {\r\n        // Load courses and all students\r\n        await Promise.all([\r\n          this.$store.dispatch('courses/fetchCourses'),\r\n          this.loadAllStudents()\r\n        ]);\r\n      } catch (error) {\r\n        console.error('Error loading initial data:', error);\r\n        this.$store.dispatch('showToast', {\r\n          message: 'Error loading data',\r\n          type: 'error'\r\n        });\r\n      }\r\n    },\r\n    \r\n    async loadAllStudents() {\r\n      try {\r\n        const response = await this.$store.dispatch('users/fetchUsers');\r\n        this.allStudents = response.filter(user => user.role === 'student');\r\n      } catch (error) {\r\n        console.error('Error loading students:', error);\r\n      }\r\n    },\r\n    \r\n    async loadCourseEnrollments() {\r\n      if (!this.selectedCourseId) {\r\n        this.currentCourseEnrollments = [];\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        await Promise.all([\r\n          this.$store.dispatch('enrollments/fetchCourseEnrollments', this.selectedCourseId),\r\n          this.$store.dispatch('enrollments/fetchAvailableStudents', this.selectedCourseId)\r\n        ]);\r\n        \r\n        this.currentCourseEnrollments = this.$store.getters['enrollments/getEnrollments'];\r\n      } catch (error) {\r\n        console.error('Error loading course enrollments:', error);\r\n        this.$store.dispatch('showToast', {\r\n          message: 'Error loading course enrollments',\r\n          type: 'error'\r\n        });\r\n      }\r\n    },\r\n    \r\n    getLecturerName(lecturerId) {\r\n      const lecturer = this.getUsers.find(u => u.id === lecturerId && u.role === 'lecturer');\r\n      return lecturer ? lecturer.name : 'Unknown Lecturer';\r\n    },\r\n    \r\n    getStudentInitials(name) {\r\n      return name\r\n        .split(' ')\r\n        .map(n => n[0])\r\n        .join('')\r\n        .toUpperCase();\r\n    },\r\n    \r\n    formatDate(dateString) {\r\n      if (!dateString) return 'N/A';\r\n      return new Date(dateString).toLocaleDateString('en-GB', {\r\n        day: 'numeric',\r\n        month: 'short',\r\n        year: 'numeric'\r\n      });\r\n    },\r\n    \r\n    openBulkEnrollModal() {\r\n      this.bulkEnrollForm = {\r\n        studentIds: [],\r\n        academicYear: this.selectedCourse?.academic_year || '2025-2026',\r\n        semester: 'Fall'\r\n      };\r\n      \r\n      const modal = new bootstrap.Modal(document.getElementById('bulkEnrollModal'));\r\n      modal.show();\r\n    },\r\n    \r\n    toggleSelectAllStudents(event) {\r\n      if (event.target.checked) {\r\n        this.bulkEnrollForm.studentIds = this.availableStudents.map(s => s.id);\r\n      } else {\r\n        this.bulkEnrollForm.studentIds = [];\r\n      }\r\n    },\r\n    \r\n    async bulkEnrollStudents() {\r\n      try {\r\n        const result = await this.$store.dispatch('enrollments/bulkEnrollStudents', {\r\n          courseId: this.selectedCourseId,\r\n          studentIds: this.bulkEnrollForm.studentIds,\r\n          academicYear: this.bulkEnrollForm.academicYear,\r\n          semester: this.bulkEnrollForm.semester\r\n        });\r\n        \r\n        // Close modal\r\n        const modalElement = document.getElementById('bulkEnrollModal');\r\n        const modal = bootstrap.Modal.getInstance(modalElement);\r\n        modal.hide();\r\n        \r\n        // Refresh enrollments\r\n        await this.loadCourseEnrollments();\r\n        \r\n        this.$store.dispatch('showToast', {\r\n          message: result.message,\r\n          type: 'success'\r\n        });\r\n      } catch (error) {\r\n        console.error('Error bulk enrolling students:', error);\r\n        this.$store.dispatch('showToast', {\r\n          message: error.message || 'Error enrolling students',\r\n          type: 'error'\r\n        });\r\n      }\r\n    },\r\n    \r\n    confirmRemoveEnrollment(enrollment) {\r\n      this.enrollmentToRemove = enrollment;\r\n      \r\n      const modal = new bootstrap.Modal(document.getElementById('removeEnrollmentModal'));\r\n      modal.show();\r\n    },\r\n    \r\n    async removeEnrollment() {\r\n      try {\r\n        await this.$store.dispatch('enrollments/removeEnrollment', {\r\n          enrollmentId: this.enrollmentToRemove.enrollment_id,\r\n          courseId: this.selectedCourseId\r\n        });\r\n        \r\n        // Close modal\r\n        const modalElement = document.getElementById('removeEnrollmentModal');\r\n        const modal = bootstrap.Modal.getInstance(modalElement);\r\n        modal.hide();\r\n        \r\n        // Refresh enrollments\r\n        await this.loadCourseEnrollments();\r\n        \r\n        this.$store.dispatch('showToast', {\r\n          message: 'Student removed from course successfully!',\r\n          type: 'success'\r\n        });\r\n        \r\n        this.enrollmentToRemove = null;\r\n      } catch (error) {\r\n        console.error('Error removing enrollment:', error);\r\n        this.$store.dispatch('showToast', {\r\n          message: error.message || 'Error removing student',\r\n          type: 'error'\r\n        });\r\n      }\r\n    },\r\n    \r\n    viewStudentDetails(studentId) {\r\n      // Navigate to student details page\r\n      this.$router.push(`/admin/student/${studentId}`);\r\n    },\r\n    \r\n    openStudentEnrollmentHistoryModal() {\r\n      // This could open a modal to search and view student enrollment history\r\n      this.$store.dispatch('showToast', {\r\n        message: 'Student enrollment history feature coming soon',\r\n        type: 'info'\r\n      });\r\n    },\r\n    \r\n    openTransferStudentModal() {\r\n      // This could open a modal to transfer students between courses\r\n      this.$store.dispatch('showToast', {\r\n        message: 'Student transfer feature coming soon',\r\n        type: 'info'\r\n      });\r\n    },\r\n    \r\n    exportAllEnrollments() {\r\n      if (!this.currentCourseEnrollments.length) {\r\n        this.$store.dispatch('showToast', {\r\n          message: 'No enrollments to export',\r\n          type: 'warning'\r\n        });\r\n        return;\r\n      }\r\n      \r\n      // Create CSV content\r\n      const headers = ['Course Code', 'Course Name', 'Student Name', 'Matric Number', 'Email', 'Academic Year', 'Semester', 'Enrolled Date'];\r\n      let csvContent = headers.join(',') + '\\n';\r\n      \r\n      this.currentCourseEnrollments.forEach(enrollment => {\r\n        const row = [\r\n          this.selectedCourse?.code || 'N/A',\r\n          `\"${this.selectedCourse?.name || 'N/A'}\"`,\r\n          `\"${enrollment.student_name}\"`,\r\n          enrollment.matric_number || 'N/A',\r\n          enrollment.student_email,\r\n          enrollment.academic_year,\r\n          enrollment.semester,\r\n          this.formatDate(enrollment.enrolled_at)\r\n        ];\r\n        csvContent += row.join(',') + '\\n';\r\n      });\r\n      \r\n      // Download CSV\r\n      const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n      const url = URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', `${this.selectedCourse?.code || 'course'}_enrollments.csv`);\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    },\r\n\r\n    async logout() {\r\n      if (confirm('Are you sure you want to logout?')) {\r\n        await this.$store.dispatch('auth/logout');\r\n        this.$router.push('/login');\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.admin-enrollment-management h1 {\r\n  color: #2c3e50;\r\n  font-weight: 700;\r\n}\r\n\r\n.card {\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  border: none;\r\n  border-radius: 10px;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.avatar {\r\n  width: 40px;\r\n  height: 40px;\r\n  background: linear-gradient(45deg, #007bff, #0056b3);\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: white;\r\n  font-weight: 600;\r\n  font-size: 14px;\r\n}\r\n\r\n.avatar.avatar-sm {\r\n  width: 32px;\r\n  height: 32px;\r\n  font-size: 12px;\r\n}\r\n\r\n.student-list {\r\n  border: 1px solid #dee2e6;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n}\r\n\r\n.form-check {\r\n  padding: 8px;\r\n  border-bottom: 1px solid #f8f9fa;\r\n}\r\n\r\n.form-check:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.form-check:hover {\r\n  background-color: #f8f9fa;\r\n}\r\n\r\n.stat-item {\r\n  margin-bottom: 10px;\r\n  padding-bottom: 10px;\r\n  border-bottom: 1px solid #f8f9fa;\r\n}\r\n\r\n.stat-item:last-child {\r\n  border-bottom: none;\r\n  margin-bottom: 0;\r\n}\r\n\r\n.table th {\r\n  font-weight: 600;\r\n  color: #2c3e50;\r\n  border-top: none;\r\n}\r\n\r\n.btn-group .btn {\r\n  margin-right: 0;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}