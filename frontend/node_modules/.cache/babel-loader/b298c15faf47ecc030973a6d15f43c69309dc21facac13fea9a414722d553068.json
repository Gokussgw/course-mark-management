{"ast":null,"code":"import { mapActions } from 'vuex';\nexport default {\n  name: 'AdviseeDetail',\n  data() {\n    return {\n      student: null,\n      loading: true,\n      error: null,\n      newNote: '',\n      gpaChart: null\n    };\n  },\n  computed: {\n    studentId() {\n      return this.$route.params.id;\n    },\n    totalCurrentCredits() {\n      return this.student?.currentCourses.reduce((total, course) => total + course.credits, 0) || 0;\n    },\n    atRiskCourses() {\n      return this.student?.currentCourses.filter(course => course.currentMark < 50) || [];\n    },\n    projectedGpa() {\n      if (!this.student || !this.student.currentCourses.length) return 0;\n      const totalCredits = this.totalCurrentCredits;\n      const weightedSum = this.student.currentCourses.reduce((sum, course) => {\n        return sum + this.markToGpaPoints(course.currentMark) * course.credits;\n      }, 0);\n      return totalCredits > 0 ? weightedSum / totalCredits : 0;\n    }\n  },\n  methods: {\n    ...mapActions('users', ['fetchAdviseeById', 'updateAdviseeNotes']),\n    async loadStudentData() {\n      try {\n        this.loading = true;\n        this.student = await this.fetchAdviseeById(this.studentId);\n\n        // Initialize the student object with sample data if it doesn't have all properties\n        // This is just for demonstration purposes until the API is fully implemented\n        if (!this.student.advisorNotes) this.student.advisorNotes = [];\n        if (!this.student.status) {\n          this.student.status = this.student.gpa >= 3.0 ? 'Good Standing' : this.student.gpa >= 2.0 ? 'Academic Warning' : 'Academic Probation';\n        }\n        if (!this.student.totalCreditsRequired) this.student.totalCreditsRequired = 120;\n        this.$nextTick(() => {\n          this.initGpaChart();\n        });\n      } catch (err) {\n        this.error = 'Failed to load student data. Please try again.';\n        console.error('Error loading student data:', err);\n      } finally {\n        this.loading = false;\n      }\n    },\n    getCourseStatus(course) {\n      if (course.currentMark >= 70) return 'Good';\n      if (course.currentMark >= 50) return 'Concern';\n      return 'At Risk';\n    },\n    getGradeLetter(mark) {\n      if (mark >= 90) return 'A+';\n      if (mark >= 85) return 'A';\n      if (mark >= 80) return 'A-';\n      if (mark >= 75) return 'B+';\n      if (mark >= 70) return 'B';\n      if (mark >= 65) return 'C+';\n      if (mark >= 60) return 'C';\n      if (mark >= 50) return 'D';\n      return 'F';\n    },\n    markToGpaPoints(mark) {\n      if (mark >= 90) return 4.0;\n      if (mark >= 85) return 4.0;\n      if (mark >= 80) return 3.7;\n      if (mark >= 75) return 3.3;\n      if (mark >= 70) return 3.0;\n      if (mark >= 65) return 2.3;\n      if (mark >= 60) return 2.0;\n      if (mark >= 50) return 1.0;\n      return 0.0;\n    },\n    viewCourseDetails(course) {\n      // Implement course details view\n      alert(`Course details for ${course.name} will be shown here`);\n    },\n    async addNote() {\n      if (!this.newNote.trim()) return;\n      const today = new Date();\n      const formattedDate = today.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n      const newNoteObj = {\n        content: this.newNote,\n        date: formattedDate\n      };\n\n      // Add to local state\n      this.student.advisorNotes.unshift(newNoteObj);\n\n      // Clear the input\n      this.newNote = '';\n      try {\n        // Update in the store/backend\n        await this.updateAdviseeNotes({\n          studentId: this.studentId,\n          notes: this.student.advisorNotes\n        });\n      } catch (err) {\n        // Revert if there's an error\n        this.student.advisorNotes.shift();\n        this.$toast.error('Failed to save note. Please try again.');\n        console.error('Error saving note:', err);\n      }\n    },\n    async deleteNote(index) {\n      if (!confirm('Are you sure you want to delete this note?')) return;\n      const deletedNote = this.student.advisorNotes.splice(index, 1)[0];\n      try {\n        // Update in the store/backend\n        await this.updateAdviseeNotes({\n          studentId: this.studentId,\n          notes: this.student.advisorNotes\n        });\n      } catch (err) {\n        // Revert if there's an error\n        this.student.advisorNotes.splice(index, 0, deletedNote);\n        this.$toast.error('Failed to delete note. Please try again.');\n        console.error('Error deleting note:', err);\n      }\n    },\n    initGpaChart() {\n      // Sample GPA data by semester - replace with actual data when available\n      const labels = ['Fall 2021', 'Spring 2022', 'Fall 2022', 'Spring 2023'];\n      const data = [3.1, 3.3, 3.0, this.student.gpa];\n      const ctx = document.getElementById('gpaChart');\n      if (!ctx) return;\n\n      // Check if Chart.js is loaded\n      if (typeof Chart === 'undefined') {\n        console.error('Chart.js is not loaded');\n        return;\n      }\n      this.gpaChart = new Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: labels,\n          datasets: [{\n            label: 'GPA by Semester',\n            data: data,\n            borderColor: '#0d6efd',\n            backgroundColor: 'rgba(13, 110, 253, 0.1)',\n            tension: 0.2,\n            fill: true\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            y: {\n              beginAtZero: false,\n              min: Math.max(0, Math.min(...data) - 0.5),\n              max: Math.min(4.0, Math.max(...data) + 0.5),\n              ticks: {\n                stepSize: 0.5\n              }\n            }\n          },\n          plugins: {\n            tooltip: {\n              callbacks: {\n                label: function (context) {\n                  return `GPA: ${context.parsed.y.toFixed(2)}`;\n                }\n              }\n            }\n          }\n        }\n      });\n    }\n  },\n  created() {\n    this.loadStudentData();\n  },\n  beforeUnmount() {\n    if (this.gpaChart) {\n      this.gpaChart.destroy();\n    }\n  }\n};","map":{"version":3,"names":["mapActions","name","data","student","loading","error","newNote","gpaChart","computed","studentId","$route","params","id","totalCurrentCredits","currentCourses","reduce","total","course","credits","atRiskCourses","filter","currentMark","projectedGpa","length","totalCredits","weightedSum","sum","markToGpaPoints","methods","loadStudentData","fetchAdviseeById","advisorNotes","status","gpa","totalCreditsRequired","$nextTick","initGpaChart","err","console","getCourseStatus","getGradeLetter","mark","viewCourseDetails","alert","addNote","trim","today","Date","formattedDate","toLocaleDateString","year","month","day","hour","minute","newNoteObj","content","date","unshift","updateAdviseeNotes","notes","shift","$toast","deleteNote","index","confirm","deletedNote","splice","labels","ctx","document","getElementById","Chart","type","datasets","label","borderColor","backgroundColor","tension","fill","options","responsive","maintainAspectRatio","scales","y","beginAtZero","min","Math","max","ticks","stepSize","plugins","tooltip","callbacks","context","parsed","toFixed","created","beforeUnmount","destroy"],"sources":["C:\\Users\\ansmu\\Desktop\\Web\\course-mark-management\\frontend\\src\\views\\advisor\\AdviseeDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"advisee-detail-container\">\r\n    <!-- Loading state -->\r\n    <div v-if=\"loading\" class=\"text-center my-5\">\r\n      <div class=\"spinner-border text-primary\" role=\"status\">\r\n        <span class=\"visually-hidden\">Loading...</span>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Error state -->\r\n    <div v-else-if=\"error\" class=\"alert alert-danger\">\r\n      {{ error }}\r\n    </div>\r\n\r\n    <!-- Content -->\r\n    <div v-else>\r\n      <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n        <div>\r\n          <router-link to=\"/advisor/advisees\" class=\"btn btn-outline-secondary mb-3\">\r\n            <i class=\"fas fa-arrow-left\"></i> Back to Advisees\r\n          </router-link>\r\n          <h1>{{ student.fullName }}</h1>\r\n          <p class=\"text-muted\">{{ student.studentId }} | {{ student.program }}</p>\r\n        </div>\r\n        <div class=\"student-contact\">\r\n          <div class=\"mb-2\">\r\n            <i class=\"fas fa-envelope\"></i> {{ student.email }}\r\n          </div>\r\n          <div v-if=\"student.phone\">\r\n            <i class=\"fas fa-phone\"></i> {{ student.phone }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Student Overview -->\r\n      <div class=\"row mb-5\">\r\n        <div class=\"col-md-6 mb-4\">\r\n          <div class=\"card h-100\">\r\n            <div class=\"card-header bg-primary text-white\">\r\n              <h5 class=\"mb-0\">Academic Overview</h5>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <div class=\"d-flex justify-content-between mb-3\">\r\n                <strong>Current GPA:</strong>\r\n                <span :class=\"{'text-success': student.gpa >= 3.0, 'text-warning': student.gpa < 3.0 && student.gpa >= 2.0, 'text-danger': student.gpa < 2.0}\">\r\n                  {{ student.gpa.toFixed(2) }}\r\n                </span>\r\n              </div>\r\n              <div class=\"d-flex justify-content-between mb-3\">\r\n                <strong>Completed Credits:</strong>\r\n                <span>{{ student.completedCredits }}</span>\r\n              </div>\r\n              <div class=\"d-flex justify-content-between mb-3\">\r\n                <strong>Current Status:</strong>\r\n                <span :class=\"{'text-success': student.status === 'Good Standing', 'text-warning': student.status === 'Academic Warning', 'text-danger': student.status === 'Academic Probation'}\">\r\n                  {{ student.status }}\r\n                </span>\r\n              </div>\r\n              <div class=\"d-flex justify-content-between\">\r\n                <strong>Program Progress:</strong>\r\n                <span>{{ (student.completedCredits / student.totalCreditsRequired * 100).toFixed(1) }}%</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"col-md-6 mb-4\">\r\n          <div class=\"card h-100\">\r\n            <div class=\"card-header bg-primary text-white\">\r\n              <h5 class=\"mb-0\">Current Semester Summary</h5>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <div class=\"d-flex justify-content-between mb-3\">\r\n                <strong>Enrolled Courses:</strong>\r\n                <span>{{ student.currentCourses.length }}</span>\r\n              </div>\r\n              <div class=\"d-flex justify-content-between mb-3\">\r\n                <strong>Total Credits:</strong>\r\n                <span>{{ totalCurrentCredits }}</span>\r\n              </div>\r\n              <div class=\"d-flex justify-content-between mb-3\">\r\n                <strong>At-Risk Courses:</strong>\r\n                <span class=\"text-danger\">{{ atRiskCourses.length }}</span>\r\n              </div>\r\n              <div class=\"d-flex justify-content-between\">\r\n                <strong>Projected GPA:</strong>\r\n                <span :class=\"{'text-success': projectedGpa >= 3.0, 'text-warning': projectedGpa < 3.0 && projectedGpa >= 2.0, 'text-danger': projectedGpa < 2.0}\">\r\n                  {{ projectedGpa.toFixed(2) }}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Current Courses -->\r\n      <h2 class=\"mb-4\">Current Courses</h2>\r\n      <div class=\"table-responsive mb-5\">\r\n        <table class=\"table table-hover\">\r\n          <thead class=\"table-light\">\r\n            <tr>\r\n              <th>Course</th>\r\n              <th>Code</th>\r\n              <th>Credits</th>\r\n              <th>Current Mark</th>\r\n              <th>Status</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"course in student.currentCourses\" :key=\"course.id\">\r\n              <td>{{ course.name }}</td>\r\n              <td>{{ course.code }}</td>\r\n              <td>{{ course.credits }}</td>\r\n              <td>\r\n                <span :class=\"{'text-success': course.currentMark >= 70, 'text-warning': course.currentMark < 70 && course.currentMark >= 50, 'text-danger': course.currentMark < 50}\">\r\n                  {{ course.currentMark }}%\r\n                </span>\r\n              </td>\r\n              <td>\r\n                <span class=\"badge\" :class=\"{'bg-success': course.currentMark >= 70, 'bg-warning': course.currentMark < 70 && course.currentMark >= 50, 'bg-danger': course.currentMark < 50}\">\r\n                  {{ getCourseStatus(course) }}\r\n                </span>\r\n              </td>\r\n              <td>\r\n                <button class=\"btn btn-sm btn-primary\" @click=\"viewCourseDetails(course)\">\r\n                  View Details\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <!-- Previous Courses -->\r\n      <h2 class=\"mb-4\">Academic History</h2>\r\n      <div class=\"card\">\r\n        <div class=\"card-header bg-light\">\r\n          <ul class=\"nav nav-pills\" role=\"tablist\">\r\n            <li class=\"nav-item\" role=\"presentation\">\r\n              <button class=\"nav-link active\" id=\"courses-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#courses\" type=\"button\" role=\"tab\" aria-controls=\"courses\" aria-selected=\"true\">\r\n                Previous Courses\r\n              </button>\r\n            </li>\r\n            <li class=\"nav-item\" role=\"presentation\">\r\n              <button class=\"nav-link\" id=\"gpa-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#gpa\" type=\"button\" role=\"tab\" aria-controls=\"gpa\" aria-selected=\"false\">\r\n                GPA Trend\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div class=\"tab-content\">\r\n            <!-- Previous Courses Tab -->\r\n            <div class=\"tab-pane fade show active\" id=\"courses\" role=\"tabpanel\" aria-labelledby=\"courses-tab\">\r\n              <div v-if=\"student.previousCourses.length === 0\" class=\"alert alert-info\">\r\n                No previous course records found.\r\n              </div>\r\n              <div v-else class=\"table-responsive\">\r\n                <table class=\"table table-striped\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Course</th>\r\n                      <th>Code</th>\r\n                      <th>Semester</th>\r\n                      <th>Credits</th>\r\n                      <th>Final Mark</th>\r\n                      <th>Grade</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr v-for=\"course in student.previousCourses\" :key=\"course.id\">\r\n                      <td>{{ course.name }}</td>\r\n                      <td>{{ course.code }}</td>\r\n                      <td>{{ course.semester }}</td>\r\n                      <td>{{ course.credits }}</td>\r\n                      <td>{{ course.finalMark }}%</td>\r\n                      <td>{{ getGradeLetter(course.finalMark) }}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n            \r\n            <!-- GPA Trend Tab -->\r\n            <div class=\"tab-pane fade\" id=\"gpa\" role=\"tabpanel\" aria-labelledby=\"gpa-tab\">\r\n              <div class=\"chart-container\">\r\n                <canvas id=\"gpaChart\" height=\"300\"></canvas>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Notes & Comments -->\r\n      <div class=\"card mt-5\">\r\n        <div class=\"card-header bg-primary text-white\">\r\n          <h5 class=\"mb-0\">Advisor Notes</h5>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div v-if=\"student.advisorNotes.length === 0\" class=\"text-muted mb-4\">\r\n            No notes added yet.\r\n          </div>\r\n          <div v-else class=\"notes-list mb-4\">\r\n            <div v-for=\"(note, index) in student.advisorNotes\" :key=\"index\" class=\"note-item mb-3\">\r\n              <div class=\"note-header d-flex justify-content-between\">\r\n                <strong>{{ note.date }}</strong>\r\n                <div>\r\n                  <button class=\"btn btn-sm btn-link text-danger\" @click=\"deleteNote(index)\">Delete</button>\r\n                </div>\r\n              </div>\r\n              <p class=\"note-content mb-0\">{{ note.content }}</p>\r\n            </div>\r\n          </div>\r\n          \r\n          <form @submit.prevent=\"addNote\">\r\n            <div class=\"form-group\">\r\n              <label for=\"newNote\" class=\"form-label\">Add New Note</label>\r\n              <textarea \r\n                id=\"newNote\" \r\n                v-model=\"newNote\" \r\n                class=\"form-control\" \r\n                rows=\"3\"\r\n                placeholder=\"Add a note about this student...\"\r\n              ></textarea>\r\n            </div>\r\n            <div class=\"mt-3\">\r\n              <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"!newNote.trim()\">\r\n                Add Note\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from 'vuex'\r\n\r\nexport default {\r\n  name: 'AdviseeDetail',\r\n  data() {\r\n    return {\r\n      student: null,\r\n      loading: true,\r\n      error: null,\r\n      newNote: '',\r\n      gpaChart: null\r\n    }\r\n  },\r\n  computed: {\r\n    studentId() {\r\n      return this.$route.params.id;\r\n    },\r\n    totalCurrentCredits() {\r\n      return this.student?.currentCourses.reduce((total, course) => total + course.credits, 0) || 0;\r\n    },\r\n    atRiskCourses() {\r\n      return this.student?.currentCourses.filter(course => course.currentMark < 50) || [];\r\n    },\r\n    projectedGpa() {\r\n      if (!this.student || !this.student.currentCourses.length) return 0;\r\n      \r\n      const totalCredits = this.totalCurrentCredits;\r\n      const weightedSum = this.student.currentCourses.reduce((sum, course) => {\r\n        return sum + (this.markToGpaPoints(course.currentMark) * course.credits);\r\n      }, 0);\r\n      \r\n      return totalCredits > 0 ? weightedSum / totalCredits : 0;\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions('users', ['fetchAdviseeById', 'updateAdviseeNotes']),\r\n    \r\n    async loadStudentData() {\r\n      try {\r\n        this.loading = true;\r\n        this.student = await this.fetchAdviseeById(this.studentId);\r\n        \r\n        // Initialize the student object with sample data if it doesn't have all properties\r\n        // This is just for demonstration purposes until the API is fully implemented\r\n        if (!this.student.advisorNotes) this.student.advisorNotes = [];\r\n        if (!this.student.status) {\r\n          this.student.status = this.student.gpa >= 3.0 ? 'Good Standing' : \r\n                               (this.student.gpa >= 2.0 ? 'Academic Warning' : 'Academic Probation');\r\n        }\r\n        if (!this.student.totalCreditsRequired) this.student.totalCreditsRequired = 120;\r\n        \r\n        this.$nextTick(() => {\r\n          this.initGpaChart();\r\n        });\r\n      } catch (err) {\r\n        this.error = 'Failed to load student data. Please try again.';\r\n        console.error('Error loading student data:', err);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    \r\n    getCourseStatus(course) {\r\n      if (course.currentMark >= 70) return 'Good';\r\n      if (course.currentMark >= 50) return 'Concern';\r\n      return 'At Risk';\r\n    },\r\n    \r\n    getGradeLetter(mark) {\r\n      if (mark >= 90) return 'A+';\r\n      if (mark >= 85) return 'A';\r\n      if (mark >= 80) return 'A-';\r\n      if (mark >= 75) return 'B+';\r\n      if (mark >= 70) return 'B';\r\n      if (mark >= 65) return 'C+';\r\n      if (mark >= 60) return 'C';\r\n      if (mark >= 50) return 'D';\r\n      return 'F';\r\n    },\r\n    \r\n    markToGpaPoints(mark) {\r\n      if (mark >= 90) return 4.0;\r\n      if (mark >= 85) return 4.0;\r\n      if (mark >= 80) return 3.7;\r\n      if (mark >= 75) return 3.3;\r\n      if (mark >= 70) return 3.0;\r\n      if (mark >= 65) return 2.3;\r\n      if (mark >= 60) return 2.0;\r\n      if (mark >= 50) return 1.0;\r\n      return 0.0;\r\n    },\r\n    \r\n    viewCourseDetails(course) {\r\n      // Implement course details view\r\n      alert(`Course details for ${course.name} will be shown here`);\r\n    },\r\n    \r\n    async addNote() {\r\n      if (!this.newNote.trim()) return;\r\n      \r\n      const today = new Date();\r\n      const formattedDate = today.toLocaleDateString('en-US', { \r\n        year: 'numeric', \r\n        month: 'short', \r\n        day: 'numeric',\r\n        hour: '2-digit',\r\n        minute: '2-digit'\r\n      });\r\n      \r\n      const newNoteObj = {\r\n        content: this.newNote,\r\n        date: formattedDate\r\n      };\r\n      \r\n      // Add to local state\r\n      this.student.advisorNotes.unshift(newNoteObj);\r\n      \r\n      // Clear the input\r\n      this.newNote = '';\r\n      \r\n      try {\r\n        // Update in the store/backend\r\n        await this.updateAdviseeNotes({\r\n          studentId: this.studentId,\r\n          notes: this.student.advisorNotes\r\n        });\r\n      } catch (err) {\r\n        // Revert if there's an error\r\n        this.student.advisorNotes.shift();\r\n        this.$toast.error('Failed to save note. Please try again.');\r\n        console.error('Error saving note:', err);\r\n      }\r\n    },\r\n    \r\n    async deleteNote(index) {\r\n      if (!confirm('Are you sure you want to delete this note?')) return;\r\n      \r\n      const deletedNote = this.student.advisorNotes.splice(index, 1)[0];\r\n      \r\n      try {\r\n        // Update in the store/backend\r\n        await this.updateAdviseeNotes({\r\n          studentId: this.studentId,\r\n          notes: this.student.advisorNotes\r\n        });\r\n      } catch (err) {\r\n        // Revert if there's an error\r\n        this.student.advisorNotes.splice(index, 0, deletedNote);\r\n        this.$toast.error('Failed to delete note. Please try again.');\r\n        console.error('Error deleting note:', err);\r\n      }\r\n    },\r\n    \r\n    initGpaChart() {\r\n      // Sample GPA data by semester - replace with actual data when available\r\n      const labels = ['Fall 2021', 'Spring 2022', 'Fall 2022', 'Spring 2023'];\r\n      const data = [3.1, 3.3, 3.0, this.student.gpa];\r\n      \r\n      const ctx = document.getElementById('gpaChart');\r\n      if (!ctx) return;\r\n      \r\n      // Check if Chart.js is loaded\r\n      if (typeof Chart === 'undefined') {\r\n        console.error('Chart.js is not loaded');\r\n        return;\r\n      }\r\n      \r\n      this.gpaChart = new Chart(ctx, {\r\n        type: 'line',\r\n        data: {\r\n          labels: labels,\r\n          datasets: [{\r\n            label: 'GPA by Semester',\r\n            data: data,\r\n            borderColor: '#0d6efd',\r\n            backgroundColor: 'rgba(13, 110, 253, 0.1)',\r\n            tension: 0.2,\r\n            fill: true\r\n          }]\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          scales: {\r\n            y: {\r\n              beginAtZero: false,\r\n              min: Math.max(0, Math.min(...data) - 0.5),\r\n              max: Math.min(4.0, Math.max(...data) + 0.5),\r\n              ticks: {\r\n                stepSize: 0.5\r\n              }\r\n            }\r\n          },\r\n          plugins: {\r\n            tooltip: {\r\n              callbacks: {\r\n                label: function(context) {\r\n                  return `GPA: ${context.parsed.y.toFixed(2)}`;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  },\r\n  created() {\r\n    this.loadStudentData();\r\n  },\r\n  beforeUnmount() {\r\n    if (this.gpaChart) {\r\n      this.gpaChart.destroy();\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.advisee-detail-container {\r\n  padding: 2rem 0;\r\n}\r\n\r\n.student-contact {\r\n  text-align: right;\r\n}\r\n\r\n.notes-list {\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.note-item {\r\n  padding: 10px;\r\n  background-color: #f8f9fa;\r\n  border-radius: 5px;\r\n}\r\n\r\n.note-header {\r\n  margin-bottom: 5px;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.note-content {\r\n  white-space: pre-line;\r\n}\r\n\r\n.chart-container {\r\n  height: 300px;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .student-contact {\r\n    text-align: left;\r\n    margin-top: 1rem;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}