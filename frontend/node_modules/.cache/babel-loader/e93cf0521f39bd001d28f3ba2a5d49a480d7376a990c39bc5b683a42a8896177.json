{"ast":null,"code":"import _regenerator from \"C:/Users/ansmu/Desktop/Web/NEW/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _asyncToGenerator from \"C:/Users/ansmu/Desktop/Web/NEW/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toConsumableArray from \"C:/Users/ansmu/Desktop/Web/NEW/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.date.to-iso-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url.to-json.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { Modal } from 'bootstrap';\nimport axios from 'axios';\nexport default {\n  name: 'SystemLogs',\n  data: function data() {\n    return {\n      logs: [],\n      totalLogs: 0,\n      currentPage: 1,\n      pageSize: 15,\n      loading: true,\n      searchQuery: '',\n      actionFilter: '',\n      dateFrom: '',\n      dateTo: '',\n      selectedLog: null,\n      logDetailModal: null\n    };\n  },\n  computed: {\n    filteredLogs: function filteredLogs() {\n      var _this = this;\n      var filtered = _toConsumableArray(this.logs);\n\n      // Apply search filter\n      if (this.searchQuery) {\n        var query = this.searchQuery.toLowerCase();\n        filtered = filtered.filter(function (log) {\n          return log.description && log.description.toLowerCase().includes(query) || log.user_name && log.user_name.toLowerCase().includes(query) || log.user_email && log.user_email.toLowerCase().includes(query) || log.action && log.action.toLowerCase().includes(query);\n        });\n      }\n\n      // Apply action filter\n      if (this.actionFilter) {\n        filtered = filtered.filter(function (log) {\n          return log.action && log.action.toLowerCase() === _this.actionFilter.toLowerCase();\n        });\n      }\n\n      // Apply date filters\n      if (this.dateFrom) {\n        var fromDate = new Date(this.dateFrom);\n        filtered = filtered.filter(function (log) {\n          var logDate = new Date(log.created_at);\n          return logDate >= fromDate;\n        });\n      }\n      if (this.dateTo) {\n        var toDate = new Date(this.dateTo);\n        toDate.setHours(23, 59, 59, 999); // End of the day\n        filtered = filtered.filter(function (log) {\n          var logDate = new Date(log.created_at);\n          return logDate <= toDate;\n        });\n      }\n      return filtered;\n    },\n    totalPages: function totalPages() {\n      return Math.ceil(this.totalLogs / this.pageSize);\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n    this.fetchLogs();\n    this.$nextTick(function () {\n      _this2.logDetailModal = new Modal(_this2.$refs.logDetailModal);\n    });\n  },\n  methods: {\n    fetchLogs: function fetchLogs() {\n      var _this3 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n        var response, _t;\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.n) {\n            case 0:\n              _this3.loading = true;\n              _context.p = 1;\n              _context.n = 2;\n              return axios.get(\"\".concat(process.env.VUE_APP_API_URL, \"/api/admin/logs\"), {\n                params: {\n                  limit: _this3.pageSize,\n                  offset: (_this3.currentPage - 1) * _this3.pageSize\n                },\n                headers: {\n                  Authorization: \"Bearer \".concat(_this3.$store.getters['auth/token'])\n                }\n              });\n            case 2:\n              response = _context.v;\n              _this3.logs = response.data.logs;\n              _this3.totalLogs = response.data.total;\n              _context.n = 4;\n              break;\n            case 3:\n              _context.p = 3;\n              _t = _context.v;\n              console.error('Failed to fetch logs:', _t);\n              _this3.$store.dispatch('notification/add', {\n                type: 'danger',\n                message: 'Failed to load system logs'\n              });\n            case 4:\n              _context.p = 4;\n              _this3.loading = false;\n              return _context.f(4);\n            case 5:\n              return _context.a(2);\n          }\n        }, _callee, null, [[1, 3, 4, 5]]);\n      }))();\n    },\n    refreshLogs: function refreshLogs() {\n      this.fetchLogs();\n    },\n    getActionBadgeClass: function getActionBadgeClass(action) {\n      if (!action) return 'bg-secondary';\n      switch (action.toLowerCase()) {\n        case 'login':\n          return 'bg-success';\n        case 'logout':\n          return 'bg-info';\n        case 'create':\n          return 'bg-primary';\n        case 'update':\n          return 'bg-warning';\n        case 'delete':\n          return 'bg-danger';\n        case 'import':\n          return 'bg-dark';\n        case 'export':\n          return 'bg-secondary';\n        default:\n          return 'bg-secondary';\n      }\n    },\n    formatDate: function formatDate(dateString) {\n      var includeTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (!dateString) return '';\n      var date = new Date(dateString);\n      if (includeTime) {\n        return new Intl.DateTimeFormat('en-GB', {\n          year: 'numeric',\n          month: 'short',\n          day: 'numeric',\n          hour: '2-digit',\n          minute: '2-digit',\n          second: '2-digit'\n        }).format(date);\n      }\n      return new Intl.DateTimeFormat('en-GB', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      }).format(date);\n    },\n    prevPage: function prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n        this.fetchLogs();\n      }\n    },\n    nextPage: function nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n        this.fetchLogs();\n      }\n    },\n    showLogDetail: function showLogDetail(log) {\n      this.selectedLog = log;\n      this.logDetailModal.show();\n    },\n    exportLogsCSV: function exportLogsCSV() {\n      var _this4 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n        var header, csvRows, allLogs, csvContent, blob, url, link;\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              try {\n                // Set up the CSV header\n                header = ['ID', 'Time', 'User', 'Email', 'Action', 'Description'];\n                csvRows = [header]; // Get all logs (this is a simplified approach; for large datasets you might want to use the API)\n                allLogs = _this4.filteredLogs; // Add each log to the CSV data\n                allLogs.forEach(function (log) {\n                  var row = [log.id, _this4.formatDate(log.created_at, true), log.user_name || 'System', log.user_email || 'N/A', log.action, log.description];\n                  csvRows.push(row);\n                });\n\n                // Convert to CSV string\n                csvContent = csvRows.map(function (row) {\n                  return row.map(function (cell) {\n                    return \"\\\"\".concat(String(cell).replace(/\"/g, '\"\"'), \"\\\"\");\n                  }).join(',');\n                }).join('\\n'); // Create and download the CSV file\n                blob = new Blob([csvContent], {\n                  type: 'text/csv;charset=utf-8;'\n                });\n                url = URL.createObjectURL(blob);\n                link = document.createElement('a');\n                link.setAttribute('href', url);\n                link.setAttribute('download', \"system_logs_\".concat(new Date().toISOString().slice(0, 10), \".csv\"));\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n                _this4.$store.dispatch('notification/add', {\n                  type: 'success',\n                  message: 'Logs exported successfully'\n                });\n              } catch (error) {\n                console.error('Failed to export logs:', error);\n                _this4.$store.dispatch('notification/add', {\n                  type: 'danger',\n                  message: 'Failed to export logs'\n                });\n              }\n            case 1:\n              return _context2.a(2);\n          }\n        }, _callee2);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["Modal","axios","name","data","logs","totalLogs","currentPage","pageSize","loading","searchQuery","actionFilter","dateFrom","dateTo","selectedLog","logDetailModal","computed","filteredLogs","_this","filtered","_toConsumableArray","query","toLowerCase","filter","log","description","includes","user_name","user_email","action","fromDate","Date","logDate","created_at","toDate","setHours","totalPages","Math","ceil","mounted","_this2","fetchLogs","$nextTick","$refs","methods","_this3","_asyncToGenerator","_regenerator","m","_callee","response","_t","w","_context","n","p","get","concat","process","env","VUE_APP_API_URL","params","limit","offset","headers","Authorization","$store","getters","v","total","console","error","dispatch","type","message","f","a","refreshLogs","getActionBadgeClass","formatDate","dateString","includeTime","arguments","length","undefined","date","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","prevPage","nextPage","showLogDetail","show","exportLogsCSV","_this4","_callee2","header","csvRows","allLogs","csvContent","blob","url","link","_context2","forEach","row","id","push","map","cell","String","replace","join","Blob","URL","createObjectURL","document","createElement","setAttribute","toISOString","slice","body","appendChild","click","removeChild"],"sources":["C:\\Users\\ansmu\\Desktop\\Web\\NEW\\course-mark-management\\frontend\\src\\views\\admin\\SystemLogs.vue"],"sourcesContent":["<template>\r\n  <div class=\"system-logs\">\r\n    <h1>System Logs</h1>\r\n    <div class=\"card mb-4\">\r\n      <div class=\"card-header d-flex justify-content-between align-items-center\">\r\n        <h5 class=\"mb-0\">Activity Logs</h5>\r\n        <div>\r\n          <button class=\"btn btn-outline-secondary me-2\" @click=\"refreshLogs\">\r\n            <i class=\"bi bi-arrow-clockwise\"></i> Refresh\r\n          </button>\r\n          <button class=\"btn btn-success\" @click=\"exportLogsCSV\">\r\n            <i class=\"bi bi-download\"></i> Export CSV\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <div class=\"mb-3 d-flex flex-wrap justify-content-between align-items-center\">\r\n          <!-- Search and filter controls -->\r\n          <div class=\"d-flex mb-2 mb-md-0\">\r\n            <div class=\"input-group me-2\" style=\"max-width: 300px;\">\r\n              <span class=\"input-group-text\">\r\n                <i class=\"bi bi-search\"></i>\r\n              </span>\r\n              <input \r\n                type=\"text\" \r\n                class=\"form-control\" \r\n                v-model=\"searchQuery\" \r\n                placeholder=\"Search logs...\" \r\n              />\r\n            </div>\r\n            <select class=\"form-select me-2\" v-model=\"actionFilter\" style=\"max-width: 200px;\">\r\n              <option value=\"\">All Actions</option>\r\n              <option value=\"login\">Login</option>\r\n              <option value=\"logout\">Logout</option>\r\n              <option value=\"create\">Create</option>\r\n              <option value=\"update\">Update</option>\r\n              <option value=\"delete\">Delete</option>\r\n              <option value=\"import\">Import</option>\r\n              <option value=\"export\">Export</option>\r\n            </select>\r\n          </div>\r\n          \r\n          <div class=\"d-flex\">\r\n            <div class=\"input-group me-2\" style=\"max-width: 200px;\">\r\n              <span class=\"input-group-text\">From</span>\r\n              <input type=\"date\" class=\"form-control\" v-model=\"dateFrom\">\r\n            </div>\r\n            <div class=\"input-group\" style=\"max-width: 200px;\">\r\n              <span class=\"input-group-text\">To</span>\r\n              <input type=\"date\" class=\"form-control\" v-model=\"dateTo\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div v-if=\"loading\" class=\"d-flex justify-content-center my-5\">\r\n          <div class=\"spinner-border text-primary\" role=\"status\">\r\n            <span class=\"visually-hidden\">Loading...</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div v-else-if=\"logs.length === 0\" class=\"alert alert-info\">\r\n          No logs found matching your criteria.\r\n        </div>\r\n\r\n        <div v-else class=\"table-responsive\">\r\n          <table class=\"table table-striped\">\r\n            <thead>\r\n              <tr>\r\n                <th>Time</th>\r\n                <th>User</th>\r\n                <th>Action</th>\r\n                <th>Description</th>\r\n                <th>Details</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr v-for=\"log in filteredLogs\" :key=\"log.id\">\r\n                <td>{{ formatDate(log.created_at) }}</td>\r\n                <td>\r\n                  <span v-if=\"log.user_name\">\r\n                    {{ log.user_name }}<br>\r\n                    <small class=\"text-muted\">{{ log.user_email }}</small>\r\n                  </span>\r\n                  <span v-else class=\"text-muted\">System</span>\r\n                </td>\r\n                <td>\r\n                  <span class=\"badge\" :class=\"getActionBadgeClass(log.action)\">\r\n                    {{ log.action }}\r\n                  </span>\r\n                </td>\r\n                <td>{{ log.description }}</td>\r\n                <td>\r\n                  <button \r\n                    class=\"btn btn-sm btn-outline-info\"\r\n                    @click=\"showLogDetail(log)\"\r\n                  >\r\n                    <i class=\"bi bi-info-circle\"></i>\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <!-- Pagination -->\r\n        <div class=\"d-flex justify-content-between align-items-center mt-3\">\r\n          <div>\r\n            Showing {{ logs.length ? (currentPage - 1) * pageSize + 1 : 0 }} to \r\n            {{ Math.min(currentPage * pageSize, totalLogs) }} of {{ totalLogs }} logs\r\n          </div>\r\n          <div>\r\n            <button \r\n              class=\"btn btn-sm btn-outline-primary me-2\" \r\n              @click=\"prevPage\" \r\n              :disabled=\"currentPage <= 1\"\r\n            >\r\n              <i class=\"bi bi-chevron-left\"></i> Previous\r\n            </button>\r\n            <span class=\"mx-2\">\r\n              Page {{ currentPage }} of {{ totalPages }}\r\n            </span>\r\n            <button \r\n              class=\"btn btn-sm btn-outline-primary\" \r\n              @click=\"nextPage\" \r\n              :disabled=\"currentPage >= totalPages\"\r\n            >\r\n              Next <i class=\"bi bi-chevron-right\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Log Detail Modal -->\r\n    <div class=\"modal fade\" id=\"logDetailModal\" tabindex=\"-1\" ref=\"logDetailModal\">\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\">Log Details</h5>\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div v-if=\"selectedLog\">\r\n              <p><strong>ID:</strong> {{ selectedLog.id }}</p>\r\n              <p><strong>Time:</strong> {{ formatDate(selectedLog.created_at, true) }}</p>\r\n              <p><strong>User:</strong> {{ selectedLog.user_name || 'System' }}</p>\r\n              <p><strong>Action:</strong> {{ selectedLog.action }}</p>\r\n              <p><strong>Description:</strong> {{ selectedLog.description }}</p>\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Modal } from 'bootstrap';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'SystemLogs',\r\n  data() {\r\n    return {\r\n      logs: [],\r\n      totalLogs: 0,\r\n      currentPage: 1,\r\n      pageSize: 15,\r\n      loading: true,\r\n      searchQuery: '',\r\n      actionFilter: '',\r\n      dateFrom: '',\r\n      dateTo: '',\r\n      selectedLog: null,\r\n      logDetailModal: null\r\n    };\r\n  },\r\n  computed: {\r\n    filteredLogs() {\r\n      let filtered = [...this.logs];\r\n      \r\n      // Apply search filter\r\n      if (this.searchQuery) {\r\n        const query = this.searchQuery.toLowerCase();\r\n        filtered = filtered.filter(log => \r\n          (log.description && log.description.toLowerCase().includes(query)) ||\r\n          (log.user_name && log.user_name.toLowerCase().includes(query)) ||\r\n          (log.user_email && log.user_email.toLowerCase().includes(query)) ||\r\n          (log.action && log.action.toLowerCase().includes(query))\r\n        );\r\n      }\r\n      \r\n      // Apply action filter\r\n      if (this.actionFilter) {\r\n        filtered = filtered.filter(log => \r\n          log.action && log.action.toLowerCase() === this.actionFilter.toLowerCase()\r\n        );\r\n      }\r\n      \r\n      // Apply date filters\r\n      if (this.dateFrom) {\r\n        const fromDate = new Date(this.dateFrom);\r\n        filtered = filtered.filter(log => {\r\n          const logDate = new Date(log.created_at);\r\n          return logDate >= fromDate;\r\n        });\r\n      }\r\n      \r\n      if (this.dateTo) {\r\n        const toDate = new Date(this.dateTo);\r\n        toDate.setHours(23, 59, 59, 999);  // End of the day\r\n        filtered = filtered.filter(log => {\r\n          const logDate = new Date(log.created_at);\r\n          return logDate <= toDate;\r\n        });\r\n      }\r\n      \r\n      return filtered;\r\n    },\r\n    totalPages() {\r\n      return Math.ceil(this.totalLogs / this.pageSize);\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchLogs();\r\n    this.$nextTick(() => {\r\n      this.logDetailModal = new Modal(this.$refs.logDetailModal);\r\n    });\r\n  },\r\n  methods: {\r\n    async fetchLogs() {\r\n      this.loading = true;\r\n      try {\r\n        const response = await axios.get(`${process.env.VUE_APP_API_URL}/api/admin/logs`, {\r\n          params: {\r\n            limit: this.pageSize,\r\n            offset: (this.currentPage - 1) * this.pageSize\r\n          },\r\n          headers: {\r\n            Authorization: `Bearer ${this.$store.getters['auth/token']}`\r\n          }\r\n        });\r\n        \r\n        this.logs = response.data.logs;\r\n        this.totalLogs = response.data.total;\r\n      } catch (error) {\r\n        console.error('Failed to fetch logs:', error);\r\n        this.$store.dispatch('notification/add', {\r\n          type: 'danger',\r\n          message: 'Failed to load system logs'\r\n        });\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    refreshLogs() {\r\n      this.fetchLogs();\r\n    },\r\n    getActionBadgeClass(action) {\r\n      if (!action) return 'bg-secondary';\r\n      \r\n      switch(action.toLowerCase()) {\r\n        case 'login':\r\n          return 'bg-success';\r\n        case 'logout':\r\n          return 'bg-info';\r\n        case 'create':\r\n          return 'bg-primary';\r\n        case 'update':\r\n          return 'bg-warning';\r\n        case 'delete':\r\n          return 'bg-danger';\r\n        case 'import':\r\n          return 'bg-dark';\r\n        case 'export':\r\n          return 'bg-secondary';\r\n        default:\r\n          return 'bg-secondary';\r\n      }\r\n    },\r\n    formatDate(dateString, includeTime = false) {\r\n      if (!dateString) return '';\r\n      \r\n      const date = new Date(dateString);\r\n      if (includeTime) {\r\n        return new Intl.DateTimeFormat('en-GB', {\r\n          year: 'numeric',\r\n          month: 'short',\r\n          day: 'numeric',\r\n          hour: '2-digit',\r\n          minute: '2-digit',\r\n          second: '2-digit'\r\n        }).format(date);\r\n      }\r\n      \r\n      return new Intl.DateTimeFormat('en-GB', {\r\n        year: 'numeric',\r\n        month: 'short',\r\n        day: 'numeric',\r\n        hour: '2-digit',\r\n        minute: '2-digit'\r\n      }).format(date);\r\n    },\r\n    prevPage() {\r\n      if (this.currentPage > 1) {\r\n        this.currentPage--;\r\n        this.fetchLogs();\r\n      }\r\n    },\r\n    nextPage() {\r\n      if (this.currentPage < this.totalPages) {\r\n        this.currentPage++;\r\n        this.fetchLogs();\r\n      }\r\n    },\r\n    showLogDetail(log) {\r\n      this.selectedLog = log;\r\n      this.logDetailModal.show();\r\n    },\r\n    async exportLogsCSV() {\r\n      try {\r\n        // Set up the CSV header\r\n        const header = ['ID', 'Time', 'User', 'Email', 'Action', 'Description'];\r\n        const csvRows = [header];\r\n        \r\n        // Get all logs (this is a simplified approach; for large datasets you might want to use the API)\r\n        let allLogs = this.filteredLogs;\r\n        \r\n        // Add each log to the CSV data\r\n        allLogs.forEach(log => {\r\n          const row = [\r\n            log.id,\r\n            this.formatDate(log.created_at, true),\r\n            log.user_name || 'System',\r\n            log.user_email || 'N/A',\r\n            log.action,\r\n            log.description\r\n          ];\r\n          csvRows.push(row);\r\n        });\r\n        \r\n        // Convert to CSV string\r\n        const csvContent = csvRows.map(row => row.map(cell => `\"${String(cell).replace(/\"/g, '\"\"')}\"`).join(',')).join('\\n');\r\n        \r\n        // Create and download the CSV file\r\n        const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n        const url = URL.createObjectURL(blob);\r\n        const link = document.createElement('a');\r\n        link.setAttribute('href', url);\r\n        link.setAttribute('download', `system_logs_${new Date().toISOString().slice(0,10)}.csv`);\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n        \r\n        this.$store.dispatch('notification/add', {\r\n          type: 'success',\r\n          message: 'Logs exported successfully'\r\n        });\r\n      } catch (error) {\r\n        console.error('Failed to export logs:', error);\r\n        this.$store.dispatch('notification/add', {\r\n          type: 'danger',\r\n          message: 'Failed to export logs'\r\n        });\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.system-logs {\r\n  padding: 20px;\r\n}\r\n\r\n.card {\r\n  border-radius: 0.5rem;\r\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\r\n}\r\n\r\n.card-header {\r\n  background-color: #f8f9fa;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.125);\r\n}\r\n\r\n.badge {\r\n  font-size: 0.8rem;\r\n  padding: 0.35em 0.65em;\r\n}\r\n\r\ntable {\r\n  font-size: 0.9rem;\r\n}\r\n\r\ntable th {\r\n  font-weight: 600;\r\n  background-color: #f8f9fa;\r\n}\r\n\r\n.table-responsive {\r\n  max-height: 600px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.modal-body p {\r\n  margin-bottom: 0.5rem;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}