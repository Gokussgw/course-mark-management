{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport Chart from 'chart.js/auto';\nexport default {\n  name: 'ComponentChart',\n  props: {\n    components: {\n      type: Array,\n      \"default\": function _default() {\n        return [];\n      }\n    },\n    height: {\n      type: Number,\n      \"default\": 300\n    }\n  },\n  data: function data() {\n    return {\n      chart: null\n    };\n  },\n  mounted: function mounted() {\n    this.createChart();\n  },\n  watch: {\n    components: {\n      handler: function handler() {\n        this.updateChart();\n      },\n      deep: true\n    }\n  },\n  beforeUnmount: function beforeUnmount() {\n    if (this.chart) {\n      this.chart.destroy();\n    }\n  },\n  methods: {\n    createChart: function createChart() {\n      var ctx = this.$refs.chartCanvas.getContext('2d');\n      var data = {\n        labels: this.components.map(function (comp) {\n          return comp.name;\n        }),\n        datasets: [{\n          label: 'Component Weightage',\n          data: this.components.map(function (comp) {\n            return comp.weightage;\n          }),\n          backgroundColor: ['#28a745',\n          // Assignment - Green\n          '#17a2b8',\n          // Quiz - Cyan\n          '#ffc107',\n          // Test - Yellow\n          '#dc3545' // Final Exam - Red\n          ],\n          borderColor: ['#1e7e34', '#138496', '#e0a800', '#c82333'],\n          borderWidth: 2\n        }]\n      };\n      var options = {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          title: {\n            display: true,\n            text: 'Standard Component Distribution',\n            font: {\n              size: 16,\n              weight: 'bold'\n            }\n          },\n          legend: {\n            display: false\n          },\n          tooltip: {\n            callbacks: {\n              label: function label(context) {\n                return \"\".concat(context.label, \": \").concat(context.parsed, \"%\");\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: true,\n            max: 35,\n            ticks: {\n              callback: function callback(value) {\n                return value + '%';\n              }\n            },\n            title: {\n              display: true,\n              text: 'Weightage (%)'\n            }\n          },\n          x: {\n            title: {\n              display: true,\n              text: 'Component Types'\n            }\n          }\n        }\n      };\n      this.chart = new Chart(ctx, {\n        type: 'bar',\n        data: data,\n        options: options\n      });\n    },\n    updateChart: function updateChart() {\n      if (this.chart) {\n        this.chart.data.labels = this.components.map(function (comp) {\n          return comp.name;\n        });\n        this.chart.data.datasets[0].data = this.components.map(function (comp) {\n          return comp.weightage;\n        });\n        this.chart.update();\n      }\n    }\n  }\n};","map":{"version":3,"names":["Chart","name","props","components","type","Array","default","height","Number","data","chart","mounted","createChart","watch","handler","updateChart","deep","beforeUnmount","destroy","methods","ctx","$refs","chartCanvas","getContext","labels","map","comp","datasets","label","weightage","backgroundColor","borderColor","borderWidth","options","responsive","maintainAspectRatio","plugins","title","display","text","font","size","weight","legend","tooltip","callbacks","context","concat","parsed","scales","y","beginAtZero","max","ticks","callback","value","x","update"],"sources":["C:\\Users\\ansmu\\Desktop\\Web\\NEW\\course-mark-management\\frontend\\src\\components\\charts\\ComponentChart.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <canvas ref=\"chartCanvas\" :height=\"height\"></canvas>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Chart from 'chart.js/auto'\r\n\r\nexport default {\r\n  name: 'ComponentChart',\r\n  props: {\r\n    components: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    height: {\r\n      type: Number,\r\n      default: 300\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      chart: null\r\n    }\r\n  },\r\n  mounted() {\r\n    this.createChart()\r\n  },\r\n  watch: {\r\n    components: {\r\n      handler() {\r\n        this.updateChart()\r\n      },\r\n      deep: true\r\n    }\r\n  },\r\n  beforeUnmount() {\r\n    if (this.chart) {\r\n      this.chart.destroy()\r\n    }\r\n  },\r\n  methods: {\r\n    createChart() {\r\n      const ctx = this.$refs.chartCanvas.getContext('2d')\r\n      \r\n      const data = {\r\n        labels: this.components.map(comp => comp.name),\r\n        datasets: [{\r\n          label: 'Component Weightage',\r\n          data: this.components.map(comp => comp.weightage),\r\n          backgroundColor: [\r\n            '#28a745', // Assignment - Green\r\n            '#17a2b8', // Quiz - Cyan\r\n            '#ffc107', // Test - Yellow\r\n            '#dc3545'  // Final Exam - Red\r\n          ],\r\n          borderColor: [\r\n            '#1e7e34',\r\n            '#138496',\r\n            '#e0a800',\r\n            '#c82333'\r\n          ],\r\n          borderWidth: 2\r\n        }]\r\n      }\r\n\r\n      const options = {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        plugins: {\r\n          title: {\r\n            display: true,\r\n            text: 'Standard Component Distribution',\r\n            font: {\r\n              size: 16,\r\n              weight: 'bold'\r\n            }\r\n          },\r\n          legend: {\r\n            display: false\r\n          },\r\n          tooltip: {\r\n            callbacks: {\r\n              label: function(context) {\r\n                return `${context.label}: ${context.parsed}%`\r\n              }\r\n            }\r\n          }\r\n        },\r\n        scales: {\r\n          y: {\r\n            beginAtZero: true,\r\n            max: 35,\r\n            ticks: {\r\n              callback: function(value) {\r\n                return value + '%'\r\n              }\r\n            },\r\n            title: {\r\n              display: true,\r\n              text: 'Weightage (%)'\r\n            }\r\n          },\r\n          x: {\r\n            title: {\r\n              display: true,\r\n              text: 'Component Types'\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      this.chart = new Chart(ctx, {\r\n        type: 'bar',\r\n        data: data,\r\n        options: options\r\n      })\r\n    },\r\n    updateChart() {\r\n      if (this.chart) {\r\n        this.chart.data.labels = this.components.map(comp => comp.name)\r\n        this.chart.data.datasets[0].data = this.components.map(comp => comp.weightage)\r\n        this.chart.update()\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\ncanvas {\r\n  max-height: 100%;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}