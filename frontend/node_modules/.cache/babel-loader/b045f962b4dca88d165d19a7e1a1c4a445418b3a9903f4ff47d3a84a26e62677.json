{"ast":null,"code":"import _toConsumableArray from \"C:/Users/ansmu/Desktop/Web/NEW/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _regenerator from \"C:/Users/ansmu/Desktop/Web/NEW/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _asyncToGenerator from \"C:/Users/ansmu/Desktop/Web/NEW/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"C:/Users/ansmu/Desktop/Web/NEW/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport axios from 'axios';\nimport { mapGetters } from 'vuex';\nimport Chart from 'chart.js/auto';\nexport default {\n  name: 'MarkBreakdown',\n  props: {\n    courseId: {\n      type: [String, Number],\n      \"default\": null\n    },\n    userRole: {\n      type: String,\n      \"default\": ''\n    }\n  },\n  data: function data() {\n    return {\n      courses: [],\n      students: [],\n      selectedCourseId: '',\n      selectedStudentId: '',\n      selectedAssessmentType: '',\n      isLoading: false,\n      viewMode: 'summary',\n      courseStats: null,\n      assessmentBreakdown: [],\n      studentBreakdown: null,\n      uniqueAssessments: [],\n      filteredStudentMarks: [],\n      assessmentChart: null,\n      studentTrendChart: null\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters('auth', ['getUser'])), {}, {\n    currentUserRole: function currentUserRole() {\n      var _this$getUser;\n      return this.userRole || ((_this$getUser = this.getUser) === null || _this$getUser === void 0 ? void 0 : _this$getUser.role) || '';\n    }\n  }),\n  mounted: function mounted() {\n    this.loadCourses();\n  },\n  beforeUnmount: function beforeUnmount() {\n    this.destroyCharts();\n  },\n  methods: {\n    loadCourses: function loadCourses() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n        var _this$getUser2, userId, endpoint, response, _t;\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.n) {\n            case 0:\n              _context.p = 0;\n              userId = ((_this$getUser2 = _this.getUser) === null || _this$getUser2 === void 0 ? void 0 : _this$getUser2.id) || 4; // Use Student One (ID: 4) for testing\n              console.log('Loading courses for user ID:', userId, 'Role:', _this.currentUserRole);\n              endpoint = '';\n              if (_this.currentUserRole === 'lecturer') {\n                endpoint = \"/marks-api.php?action=lecturer_courses&lecturer_id=\".concat(userId);\n              } else if (_this.currentUserRole === 'student') {\n                endpoint = \"/breakdown-api.php?action=student_courses&student_id=\".concat(userId);\n              } else if (_this.currentUserRole === 'advisor') {\n                endpoint = \"/breakdown-api.php?action=advisor_courses&advisor_id=\".concat(userId);\n              } else {\n                // Default to student courses for testing\n                endpoint = \"/breakdown-api.php?action=student_courses&student_id=4\";\n              }\n              console.log('API endpoint:', endpoint);\n              _context.n = 1;\n              return axios.get(endpoint);\n            case 1:\n              response = _context.v;\n              _this.courses = response.data.courses || [];\n              console.log(\"Loaded \".concat(_this.courses.length, \" courses for \").concat(_this.currentUserRole, \":\"), _this.courses);\n\n              // Add sample data if no courses are returned\n              if (_this.courses.length === 0) {\n                console.log('No real courses found, adding sample courses');\n                _this.courses = [{\n                  id: 1,\n                  code: 'CS101',\n                  name: 'Introduction to Computer Science',\n                  semester: 'Fall 2024',\n                  academic_year: '2024/2025'\n                }, {\n                  id: 2,\n                  code: 'MATH201',\n                  name: 'Calculus II',\n                  semester: 'Fall 2024',\n                  academic_year: '2024/2025'\n                }, {\n                  id: 3,\n                  code: 'PHYS101',\n                  name: 'Physics I',\n                  semester: 'Fall 2024',\n                  academic_year: '2024/2025'\n                }];\n              }\n\n              // Auto-select course from route if available\n              if (!_this.$route.params.courseId) {\n                _context.n = 2;\n                break;\n              }\n              _this.selectedCourseId = parseInt(_this.$route.params.courseId);\n              _context.n = 2;\n              return _this.loadCourseData();\n            case 2:\n              _context.n = 4;\n              break;\n            case 3:\n              _context.p = 3;\n              _t = _context.v;\n              console.error('Error loading courses:', _t);\n              // Fallback to sample data\n              _this.courses = [{\n                id: 1,\n                code: 'CS101',\n                name: 'Introduction to Computer Science',\n                semester: 'Fall 2024',\n                academic_year: '2024/2025'\n              }, {\n                id: 2,\n                code: 'MATH201',\n                name: 'Calculus II',\n                semester: 'Fall 2024',\n                academic_year: '2024/2025'\n              }, {\n                id: 3,\n                code: 'PHYS101',\n                name: 'Physics I',\n                semester: 'Fall 2024',\n                academic_year: '2024/2025'\n              }];\n\n              // Auto-select course from route if available\n              if (!(_this.$route.params.courseId || _this.courseId)) {\n                _context.n = 4;\n                break;\n              }\n              _this.selectedCourseId = parseInt(_this.$route.params.courseId || _this.courseId);\n              _context.n = 4;\n              return _this.loadCourseData();\n            case 4:\n              return _context.a(2);\n          }\n        }, _callee, null, [[0, 3]]);\n      }))();\n    },\n    loadCourseData: function loadCourseData() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n        var response, _t2;\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              if (_this2.selectedCourseId) {\n                _context2.n = 1;\n                break;\n              }\n              _this2.clearData();\n              return _context2.a(2);\n            case 1:\n              _this2.isLoading = true;\n              _context2.p = 2;\n              _context2.n = 3;\n              return axios.get(\"/breakdown-api.php?action=course_breakdown&course_id=\".concat(_this2.selectedCourseId));\n            case 3:\n              response = _context2.v;\n              if (!(response.data && response.data.students)) {\n                _context2.n = 5;\n                break;\n              }\n              // Map real data to component format\n              _this2.students = response.data.students || [];\n              _this2.uniqueAssessments = response.data.components || [];\n\n              // Map statistics with correct property names\n              if (response.data.statistics) {\n                _this2.courseStats = {\n                  totalStudents: response.data.statistics.total_students,\n                  totalAssessments: response.data.statistics.total_assessments,\n                  classAverage: response.data.statistics.class_average,\n                  atRiskStudents: response.data.statistics.at_risk_students\n                };\n              }\n              console.log('Real data loaded:', {\n                students: _this2.students.length,\n                assessments: _this2.uniqueAssessments.length,\n                stats: _this2.courseStats\n              });\n\n              // Process the data for breakdown analysis\n              _context2.n = 4;\n              return _this2.processMarkBreakdown();\n            case 4:\n              _context2.n = 6;\n              break;\n            case 5:\n              // No real data, create sample data for demonstration\n              console.log('No real data found, using sample data');\n              _this2.createSampleData();\n            case 6:\n              _this2.filteredStudentMarks = _this2.students;\n\n              // If student role, auto-select current student\n              if (!(_this2.currentUserRole === 'student')) {\n                _context2.n = 7;\n                break;\n              }\n              _this2.selectedStudentId = _this2.getUser.id;\n              _context2.n = 7;\n              return _this2.loadStudentBreakdown();\n            case 7:\n              _this2.$nextTick(function () {\n                _this2.createAssessmentChart();\n              });\n              _context2.n = 9;\n              break;\n            case 8:\n              _context2.p = 8;\n              _t2 = _context2.v;\n              console.error('Error loading course data:', _t2);\n              // Create sample data on error\n              console.log('Error occurred, using sample data fallback');\n              _this2.createSampleData();\n            case 9:\n              _context2.p = 9;\n              _this2.isLoading = false;\n              return _context2.f(9);\n            case 10:\n              return _context2.a(2);\n          }\n        }, _callee2, null, [[2, 8, 9, 10]]);\n      }))();\n    },\n    createSampleData: function createSampleData() {\n      // Create sample course statistics\n      this.courseStats = {\n        totalStudents: 25,\n        totalAssessments: 6,\n        classAverage: 78.5,\n        atRiskStudents: 3\n      };\n\n      // Create sample assessments\n      this.uniqueAssessments = [{\n        id: 1,\n        name: 'Quiz 1',\n        type: 'quiz',\n        max_marks: 20,\n        weightage: 5,\n        date: '2024-09-15'\n      }, {\n        id: 2,\n        name: 'Assignment 1',\n        type: 'assignment',\n        max_marks: 100,\n        weightage: 15,\n        date: '2024-10-01'\n      }, {\n        id: 3,\n        name: 'Midterm Exam',\n        type: 'midterm',\n        max_marks: 100,\n        weightage: 30,\n        date: '2024-10-15'\n      }, {\n        id: 4,\n        name: 'Quiz 2',\n        type: 'quiz',\n        max_marks: 20,\n        weightage: 5,\n        date: '2024-11-01'\n      }, {\n        id: 5,\n        name: 'Assignment 2',\n        type: 'assignment',\n        max_marks: 100,\n        weightage: 15,\n        date: '2024-11-15'\n      }, {\n        id: 6,\n        name: 'Final Exam',\n        type: 'final_exam',\n        max_marks: 100,\n        weightage: 30,\n        date: '2024-12-10'\n      }];\n\n      // Create sample students with marks\n      this.students = [{\n        id: 1,\n        name: 'Alice Johnson',\n        matric_number: 'A123456',\n        email: 'alice@university.edu',\n        finalMark: 85.2,\n        grade: 'A',\n        marks: {\n          quiz: {\n            obtained: 18,\n            max_marks: 20,\n            percentage: 90,\n            weighted: 4.5\n          },\n          assignment: {\n            obtained: 85,\n            max_marks: 100,\n            percentage: 85,\n            weighted: 12.75\n          },\n          midterm: {\n            obtained: 82,\n            max_marks: 100,\n            percentage: 82,\n            weighted: 24.6\n          },\n          final_exam: {\n            obtained: 88,\n            max_marks: 100,\n            percentage: 88,\n            weighted: 26.4\n          }\n        }\n      }, {\n        id: 2,\n        name: 'Bob Smith',\n        matric_number: 'B234567',\n        email: 'bob@university.edu',\n        finalMark: 72.8,\n        grade: 'B',\n        marks: {\n          quiz: {\n            obtained: 15,\n            max_marks: 20,\n            percentage: 75,\n            weighted: 3.75\n          },\n          assignment: {\n            obtained: 78,\n            max_marks: 100,\n            percentage: 78,\n            weighted: 11.7\n          },\n          midterm: {\n            obtained: 70,\n            max_marks: 100,\n            percentage: 70,\n            weighted: 21\n          },\n          final_exam: {\n            obtained: 75,\n            max_marks: 100,\n            percentage: 75,\n            weighted: 22.5\n          }\n        }\n      }, {\n        id: 3,\n        name: 'Carol Davis',\n        matric_number: 'C345678',\n        email: 'carol@university.edu',\n        finalMark: 45.2,\n        grade: 'F',\n        marks: {\n          quiz: {\n            obtained: 10,\n            max_marks: 20,\n            percentage: 50,\n            weighted: 2.5\n          },\n          assignment: {\n            obtained: 45,\n            max_marks: 100,\n            percentage: 45,\n            weighted: 6.75\n          },\n          midterm: {\n            obtained: 40,\n            max_marks: 100,\n            percentage: 40,\n            weighted: 12\n          },\n          final_exam: {\n            obtained: 48,\n            max_marks: 100,\n            percentage: 48,\n            weighted: 14.4\n          }\n        }\n      }];\n\n      // Process the sample data\n      this.processMarkBreakdown();\n    },\n    processMarkBreakdown: function processMarkBreakdown() {\n      var _this3 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {\n        var breakdown;\n        return _regenerator().w(function (_context3) {\n          while (1) switch (_context3.n) {\n            case 0:\n              breakdown = {};\n              _this3.uniqueAssessments.forEach(function (assessment) {\n                if (!breakdown[assessment.type]) {\n                  breakdown[assessment.type] = {\n                    type: assessment.type,\n                    weightage: 0,\n                    total: 0,\n                    submitted: 0,\n                    totalMarks: 0,\n                    obtainedMarks: 0\n                  };\n                }\n                breakdown[assessment.type].weightage += assessment.weightage || 0;\n                breakdown[assessment.type].total += _this3.students.length;\n                _this3.students.forEach(function (student) {\n                  if (student.marks && student.marks[assessment.type]) {\n                    breakdown[assessment.type].submitted++;\n                    breakdown[assessment.type].totalMarks += student.marks[assessment.type].max_marks || 0;\n                    breakdown[assessment.type].obtainedMarks += student.marks[assessment.type].obtained || 0;\n                  }\n                });\n              });\n              _this3.assessmentBreakdown = Object.values(breakdown).map(function (item) {\n                return _objectSpread(_objectSpread({}, item), {}, {\n                  average: item.totalMarks > 0 ? Math.round(item.obtainedMarks / item.totalMarks * 100) : 0\n                });\n              });\n            case 1:\n              return _context3.a(2);\n          }\n        }, _callee3);\n      }))();\n    },\n    calculateCourseStats: function calculateCourseStats() {\n      var _this4 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4() {\n        var totalStudents, totalAssessments, totalMarks, atRiskCount;\n        return _regenerator().w(function (_context4) {\n          while (1) switch (_context4.n) {\n            case 0:\n              totalStudents = _this4.students.length;\n              totalAssessments = _this4.uniqueAssessments.length;\n              totalMarks = 0;\n              atRiskCount = 0;\n              _this4.students.forEach(function (student) {\n                var finalMark = _this4.calculateStudentFinalMark(student);\n                totalMarks += finalMark;\n                if (finalMark < 50) atRiskCount++;\n              });\n              _this4.courseStats = {\n                totalStudents: totalStudents,\n                totalAssessments: totalAssessments,\n                classAverage: totalStudents > 0 ? Math.round(totalMarks / totalStudents) : 0,\n                atRiskStudents: atRiskCount\n              };\n            case 1:\n              return _context4.a(2);\n          }\n        }, _callee4);\n      }))();\n    },\n    loadStudentBreakdown: function loadStudentBreakdown() {\n      var _this5 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee5() {\n        var student, assessments, finalMark, grade, rank, strengths, improvements;\n        return _regenerator().w(function (_context5) {\n          while (1) switch (_context5.n) {\n            case 0:\n              if (_this5.selectedStudentId) {\n                _context5.n = 1;\n                break;\n              }\n              _this5.studentBreakdown = null;\n              return _context5.a(2);\n            case 1:\n              student = _this5.students.find(function (s) {\n                return s.id == _this5.selectedStudentId;\n              });\n              if (student) {\n                _context5.n = 2;\n                break;\n              }\n              return _context5.a(2);\n            case 2:\n              assessments = _this5.uniqueAssessments.map(function (assessment) {\n                var _student$marks;\n                var mark = ((_student$marks = student.marks) === null || _student$marks === void 0 ? void 0 : _student$marks[assessment.type]) || null;\n                var classTotal = _this5.students.reduce(function (sum, s) {\n                  var _s$marks;\n                  return sum + (((_s$marks = s.marks) === null || _s$marks === void 0 || (_s$marks = _s$marks[assessment.type]) === null || _s$marks === void 0 ? void 0 : _s$marks.obtained) || 0);\n                }, 0);\n                var classAverage = _this5.students.length > 0 ? Math.round(classTotal / _this5.students.length) : 0;\n                return {\n                  id: assessment.id,\n                  name: assessment.name,\n                  type: assessment.type,\n                  obtained: (mark === null || mark === void 0 ? void 0 : mark.obtained) || 0,\n                  max_marks: (mark === null || mark === void 0 ? void 0 : mark.max_marks) || assessment.max_marks || 0,\n                  percentage: mark ? Math.round(mark.obtained / mark.max_marks * 100) : 0,\n                  weighted: (mark === null || mark === void 0 ? void 0 : mark.weighted) || 0,\n                  classAverage: classAverage\n                };\n              });\n              finalMark = _this5.calculateStudentFinalMark(student);\n              grade = _this5.calculateGrade(finalMark);\n              rank = _this5.calculateStudentRank(student); // Analyze strengths and improvements\n              strengths = _this5.analyzeStrengths(assessments);\n              improvements = _this5.analyzeImprovements(assessments);\n              _this5.studentBreakdown = {\n                name: student.name,\n                finalMark: finalMark,\n                grade: grade,\n                rank: rank,\n                assessments: assessments,\n                strengths: strengths,\n                improvements: improvements\n              };\n              _this5.$nextTick(function () {\n                _this5.createStudentTrendChart();\n              });\n            case 3:\n              return _context5.a(2);\n          }\n        }, _callee5);\n      }))();\n    },\n    calculateStudentFinalMark: function calculateStudentFinalMark(student) {\n      var totalWeighted = 0;\n      Object.values(student.marks || {}).forEach(function (mark) {\n        totalWeighted += mark.weighted || 0;\n      });\n      return Math.round(totalWeighted);\n    },\n    calculateGrade: function calculateGrade(mark) {\n      if (mark >= 80) return 'A';\n      if (mark >= 70) return 'B';\n      if (mark >= 60) return 'C';\n      if (mark >= 50) return 'D';\n      return 'F';\n    },\n    calculateStudentRank: function calculateStudentRank(targetStudent) {\n      var _this6 = this;\n      var sortedStudents = _toConsumableArray(this.students).sort(function (a, b) {\n        return _this6.calculateStudentFinalMark(b) - _this6.calculateStudentFinalMark(a);\n      });\n      return sortedStudents.findIndex(function (s) {\n        return s.id === targetStudent.id;\n      }) + 1;\n    },\n    analyzeStrengths: function analyzeStrengths(assessments) {\n      var _this7 = this;\n      var strengths = [];\n      assessments.forEach(function (assessment) {\n        if (assessment.percentage >= assessment.classAverage + 10) {\n          strengths.push(\"\".concat(_this7.formatAssessmentType(assessment.type), \" (\").concat(assessment.percentage, \"%)\"));\n        }\n      });\n      return strengths.length > 0 ? strengths : ['Consistent performance across assessments'];\n    },\n    analyzeImprovements: function analyzeImprovements(assessments) {\n      var _this8 = this;\n      var improvements = [];\n      assessments.forEach(function (assessment) {\n        if (assessment.percentage < assessment.classAverage - 10) {\n          improvements.push(\"\".concat(_this8.formatAssessmentType(assessment.type), \" (\").concat(assessment.percentage, \"%)\"));\n        }\n      });\n      return improvements.length > 0 ? improvements : ['Continue current study approach'];\n    },\n    createAssessmentChart: function createAssessmentChart() {\n      var _this9 = this;\n      this.destroyCharts();\n      var ctx = document.getElementById('assessmentChart');\n      if (!ctx) return;\n      this.assessmentChart = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: this.assessmentBreakdown.map(function (item) {\n            return _this9.formatAssessmentType(item.type);\n          }),\n          datasets: [{\n            label: 'Average Score (%)',\n            data: this.assessmentBreakdown.map(function (item) {\n              return item.average;\n            }),\n            backgroundColor: 'rgba(54, 162, 235, 0.8)',\n            borderColor: 'rgba(54, 162, 235, 1)',\n            borderWidth: 1\n          }, {\n            label: 'Weightage (%)',\n            data: this.assessmentBreakdown.map(function (item) {\n              return item.weightage;\n            }),\n            backgroundColor: 'rgba(255, 99, 132, 0.8)',\n            borderColor: 'rgba(255, 99, 132, 1)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            y: {\n              beginAtZero: true,\n              max: 100\n            }\n          }\n        }\n      });\n    },\n    createStudentTrendChart: function createStudentTrendChart() {\n      var ctx = document.getElementById('studentTrendChart');\n      if (!ctx || !this.studentBreakdown) return;\n      this.studentTrendChart = new Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: this.studentBreakdown.assessments.map(function (a) {\n            return a.name;\n          }),\n          datasets: [{\n            label: 'Student Score',\n            data: this.studentBreakdown.assessments.map(function (a) {\n              return a.percentage;\n            }),\n            borderColor: 'rgba(75, 192, 192, 1)',\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            tension: 0.1\n          }, {\n            label: 'Class Average',\n            data: this.studentBreakdown.assessments.map(function (a) {\n              return a.classAverage;\n            }),\n            borderColor: 'rgba(255, 159, 64, 1)',\n            backgroundColor: 'rgba(255, 159, 64, 0.2)',\n            tension: 0.1\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            y: {\n              beginAtZero: true,\n              max: 100\n            }\n          }\n        }\n      });\n    },\n    destroyCharts: function destroyCharts() {\n      if (this.assessmentChart) {\n        this.assessmentChart.destroy();\n        this.assessmentChart = null;\n      }\n      if (this.studentTrendChart) {\n        this.studentTrendChart.destroy();\n        this.studentTrendChart = null;\n      }\n    },\n    filterBreakdown: function filterBreakdown() {\n      // Implementation for filtering by assessment type\n      this.filteredStudentMarks = this.students;\n    },\n    toggleView: function toggleView(mode) {\n      this.viewMode = mode;\n    },\n    exportBreakdown: function exportBreakdown() {\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee6() {\n        return _regenerator().w(function (_context6) {\n          while (1) switch (_context6.n) {\n            case 0:\n              // Implementation for exporting detailed breakdown\n              console.log('Exporting breakdown...');\n            case 1:\n              return _context6.a(2);\n          }\n        }, _callee6);\n      }))();\n    },\n    refreshData: function refreshData() {\n      var _this0 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee7() {\n        return _regenerator().w(function (_context7) {\n          while (1) switch (_context7.n) {\n            case 0:\n              _context7.n = 1;\n              return _this0.loadCourseData();\n            case 1:\n              return _context7.a(2);\n          }\n        }, _callee7);\n      }))();\n    },\n    clearData: function clearData() {\n      this.students = [];\n      this.courseStats = null;\n      this.assessmentBreakdown = [];\n      this.studentBreakdown = null;\n      this.uniqueAssessments = [];\n      this.filteredStudentMarks = [];\n      this.destroyCharts();\n    },\n    // Utility methods\n    getStudentInitials: function getStudentInitials(name) {\n      return name.split(' ').map(function (n) {\n        return n.charAt(0);\n      }).join('').toUpperCase();\n    },\n    formatAssessmentType: function formatAssessmentType(type) {\n      return type.replace(/_/g, ' ').replace(/\\b\\w/g, function (l) {\n        return l.toUpperCase();\n      });\n    },\n    getAssessmentBadgeClass: function getAssessmentBadgeClass(type) {\n      var classes = {\n        'quiz': 'bg-info',\n        'assignment': 'bg-primary',\n        'midterm': 'bg-warning text-dark',\n        'final_exam': 'bg-danger',\n        'project': 'bg-success'\n      };\n      return classes[type] || 'bg-secondary';\n    },\n    getAssessmentProgressClass: function getAssessmentProgressClass(type) {\n      var classes = {\n        'quiz': 'bg-info',\n        'assignment': 'bg-primary',\n        'midterm': 'bg-warning',\n        'final_exam': 'bg-danger',\n        'project': 'bg-success'\n      };\n      return classes[type] || 'bg-secondary';\n    },\n    getScoreClass: function getScoreClass(percentage) {\n      if (percentage >= 80) return 'text-success fw-bold';\n      if (percentage >= 70) return 'text-info fw-bold';\n      if (percentage >= 60) return 'text-warning fw-bold';\n      if (percentage >= 50) return 'text-primary';\n      return 'text-danger fw-bold';\n    },\n    getGradeBadgeClass: function getGradeBadgeClass(grade) {\n      var classes = {\n        'A': 'bg-success',\n        'B': 'bg-info',\n        'C': 'bg-warning text-dark',\n        'D': 'bg-primary',\n        'F': 'bg-danger'\n      };\n      return classes[grade] || 'bg-secondary';\n    },\n    getPerformanceStatus: function getPerformanceStatus(studentScore, classAverage) {\n      if (studentScore >= classAverage + 10) return 'Excellent';\n      if (studentScore >= classAverage) return 'Above Average';\n      if (studentScore >= classAverage - 10) return 'Average';\n      return 'Needs Improvement';\n    },\n    getPerformanceStatusClass: function getPerformanceStatusClass(studentScore, classAverage) {\n      if (studentScore >= classAverage + 10) return 'bg-success';\n      if (studentScore >= classAverage) return 'bg-info';\n      if (studentScore >= classAverage - 10) return 'bg-warning text-dark';\n      return 'bg-danger';\n    }\n  }\n};","map":{"version":3,"names":["axios","mapGetters","Chart","name","props","courseId","type","String","Number","userRole","data","courses","students","selectedCourseId","selectedStudentId","selectedAssessmentType","isLoading","viewMode","courseStats","assessmentBreakdown","studentBreakdown","uniqueAssessments","filteredStudentMarks","assessmentChart","studentTrendChart","computed","_objectSpread","currentUserRole","_this$getUser","getUser","role","mounted","loadCourses","beforeUnmount","destroyCharts","methods","_this","_asyncToGenerator","_regenerator","m","_callee","_this$getUser2","userId","endpoint","response","_t","w","_context","n","p","id","console","log","concat","get","v","length","code","semester","academic_year","$route","params","parseInt","loadCourseData","error","a","_this2","_callee2","_t2","_context2","clearData","components","statistics","totalStudents","total_students","totalAssessments","total_assessments","classAverage","class_average","atRiskStudents","at_risk_students","assessments","stats","processMarkBreakdown","createSampleData","loadStudentBreakdown","$nextTick","createAssessmentChart","f","max_marks","weightage","date","matric_number","email","finalMark","grade","marks","quiz","obtained","percentage","weighted","assignment","midterm","final_exam","_this3","_callee3","breakdown","_context3","forEach","assessment","total","submitted","totalMarks","obtainedMarks","student","Object","values","map","item","average","Math","round","calculateCourseStats","_this4","_callee4","atRiskCount","_context4","calculateStudentFinalMark","_this5","_callee5","rank","strengths","improvements","_context5","find","s","_student$marks","mark","classTotal","reduce","sum","_s$marks","calculateGrade","calculateStudentRank","analyzeStrengths","analyzeImprovements","createStudentTrendChart","totalWeighted","targetStudent","_this6","sortedStudents","_toConsumableArray","sort","b","findIndex","_this7","push","formatAssessmentType","_this8","_this9","ctx","document","getElementById","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","responsive","maintainAspectRatio","scales","y","beginAtZero","max","tension","destroy","filterBreakdown","toggleView","mode","exportBreakdown","_callee6","_context6","refreshData","_this0","_callee7","_context7","getStudentInitials","split","charAt","join","toUpperCase","replace","l","getAssessmentBadgeClass","classes","getAssessmentProgressClass","getScoreClass","getGradeBadgeClass","getPerformanceStatus","studentScore","getPerformanceStatusClass"],"sources":["C:\\Users\\ansmu\\Desktop\\Web\\NEW\\course-mark-management\\frontend\\src\\views\\shared\\MarkBreakdown.vue"],"sourcesContent":["<template>\r\n  <div class=\"mark-breakdown\">\r\n    <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n      <h1><i class=\"fas fa-chart-line me-2\"></i>Mark Breakdown Analysis</h1>\r\n      <div class=\"d-flex gap-2\">\r\n        <button class=\"btn btn-success\" @click=\"exportBreakdown\">\r\n          <i class=\"fas fa-file-export me-2\"></i>Export Report\r\n        </button>\r\n        <button class=\"btn         ];\r\n        \r\n        // Auto-select course from route if available\r\n        if (this.$route.params.courseId || this.courseId) {\r\n          this.selectedCourseId = parseInt(this.$route.params.courseId || this.courseId);\r\n          await this.loadCourseData();\r\n        }\r\n      } catch (error) {ine-secondary\" @click=\"refreshData\">\r\n          <i class=\"fas fa-sync me-2\"></i>Refresh\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Filters -->\r\n    <div class=\"card mb-4\">\r\n      <div class=\"card-body\">\r\n        <div class=\"row align-items-center\">\r\n          <div class=\"col-md-4\">\r\n            <label class=\"form-label fw-bold\">Course:</label>\r\n            <select v-model=\"selectedCourseId\" @change=\"loadCourseData\" class=\"form-select\">\r\n              <option value=\"\">-- Select Course --</option>\r\n              <option v-for=\"course in courses\" :key=\"course.id\" :value=\"course.id\">\r\n                {{ course.code }} - {{ course.name }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <div class=\"col-md-4\" v-if=\"currentUserRole === 'lecturer' || currentUserRole === 'advisor'\">\r\n            <label class=\"form-label fw-bold\">Student:</label>\r\n            <select v-model=\"selectedStudentId\" @change=\"loadStudentBreakdown\" class=\"form-select\">\r\n              <option value=\"\">-- All Students --</option>\r\n              <option v-for=\"student in students\" :key=\"student.id\" :value=\"student.id\">\r\n                {{ student.name }} ({{ student.matric_number }})\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <div class=\"col-md-4\">\r\n            <label class=\"form-label fw-bold\">Assessment Type:</label>\r\n            <select v-model=\"selectedAssessmentType\" @change=\"filterBreakdown\" class=\"form-select\">\r\n              <option value=\"\">-- All Types --</option>\r\n              <option value=\"quiz\">Quiz</option>\r\n              <option value=\"assignment\">Assignment</option>\r\n              <option value=\"midterm\">Midterm</option>\r\n              <option value=\"final_exam\">Final Exam</option>\r\n              <option value=\"project\">Project</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Loading State -->\r\n    <div v-if=\"isLoading\" class=\"text-center p-5\">\r\n      <div class=\"spinner-border text-primary\" role=\"status\">\r\n        <span class=\"visually-hidden\">Loading...</span>\r\n      </div>\r\n      <p class=\"mt-3 text-muted\">Loading mark breakdown...</p>\r\n    </div>\r\n\r\n    <!-- Course Overview Stats -->\r\n    <div v-else-if=\"selectedCourseId && courseStats\" class=\"row mb-4\">\r\n      <div class=\"col-md-3\">\r\n        <div class=\"card stat-card bg-primary text-white\">\r\n          <div class=\"card-body text-center\">\r\n            <i class=\"fas fa-users fa-2x mb-2\"></i>\r\n            <h4>{{ courseStats.totalStudents }}</h4>\r\n            <p class=\"mb-0\">Total Students</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n        <div class=\"card stat-card bg-info text-white\">\r\n          <div class=\"card-body text-center\">\r\n            <i class=\"fas fa-tasks fa-2x mb-2\"></i>\r\n            <h4>{{ courseStats.totalAssessments }}</h4>\r\n            <p class=\"mb-0\">Assessments</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n        <div class=\"card stat-card bg-success text-white\">\r\n          <div class=\"card-body text-center\">\r\n            <i class=\"fas fa-percentage fa-2x mb-2\"></i>\r\n            <h4>{{ courseStats.classAverage }}%</h4>\r\n            <p class=\"mb-0\">Class Average</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n        <div class=\"card stat-card bg-warning text-dark\">\r\n          <div class=\"card-body text-center\">\r\n            <i class=\"fas fa-exclamation-triangle fa-2x mb-2\"></i>\r\n            <h4>{{ courseStats.atRiskStudents }}</h4>\r\n            <p class=\"mb-0\">At Risk</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Detailed Breakdown -->\r\n    <div v-if=\"selectedCourseId\">\r\n      <!-- Assessment Breakdown Chart -->\r\n      <div class=\"card mb-4\">\r\n        <div class=\"card-header\">\r\n          <h5 class=\"mb-0\">\r\n            <i class=\"fas fa-chart-bar me-2\"></i>Assessment Performance Overview\r\n          </h5>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-8\">\r\n              <canvas id=\"assessmentChart\" height=\"300\"></canvas>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n              <h6>Assessment Distribution</h6>\r\n              <div v-for=\"assessment in assessmentBreakdown\" :key=\"assessment.type\" class=\"mb-3\">\r\n                <div class=\"d-flex justify-content-between align-items-center mb-1\">\r\n                  <span class=\"badge\" :class=\"getAssessmentBadgeClass(assessment.type)\">\r\n                    {{ formatAssessmentType(assessment.type) }}\r\n                  </span>\r\n                  <strong>{{ assessment.weightage }}%</strong>\r\n                </div>\r\n                <div class=\"progress\" style=\"height: 8px;\">\r\n                  <div class=\"progress-bar\" :class=\"getAssessmentProgressClass(assessment.type)\" \r\n                       :style=\"{ width: assessment.weightage + '%' }\"></div>\r\n                </div>\r\n                <small class=\"text-muted\">\r\n                  Average: {{ assessment.average }}% | Submitted: {{ assessment.submitted }}/{{ assessment.total }}\r\n                </small>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Individual Student Breakdown (if selected) -->\r\n      <div v-if=\"selectedStudentId && studentBreakdown\" class=\"card mb-4\">\r\n        <div class=\"card-header\">\r\n          <h5 class=\"mb-0\">\r\n            <i class=\"fas fa-user-graduate me-2\"></i>\r\n            Individual Student Analysis: {{ studentBreakdown.name }}\r\n          </h5>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <div class=\"student-summary\">\r\n                <div class=\"row text-center mb-4\">\r\n                  <div class=\"col-4\">\r\n                    <div class=\"metric-box\">\r\n                      <h3 class=\"text-primary\">{{ studentBreakdown.finalMark }}%</h3>\r\n                      <p class=\"text-muted mb-0\">Final Mark</p>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-4\">\r\n                    <div class=\"metric-box\">\r\n                      <h3 class=\"text-success\">{{ studentBreakdown.grade }}</h3>\r\n                      <p class=\"text-muted mb-0\">Grade</p>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-4\">\r\n                    <div class=\"metric-box\">\r\n                      <h3 class=\"text-info\">{{ studentBreakdown.rank }}/{{ courseStats.totalStudents }}</h3>\r\n                      <p class=\"text-muted mb-0\">Class Rank</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <h6>Assessment Performance</h6>\r\n                <div class=\"table-responsive\">\r\n                  <table class=\"table table-sm table-hover\">\r\n                    <thead class=\"table-light\">\r\n                      <tr>\r\n                        <th>Assessment</th>\r\n                        <th>Type</th>\r\n                        <th>Score</th>\r\n                        <th>Weighted</th>\r\n                        <th>Class Avg</th>\r\n                        <th>Status</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr v-for=\"assessment in studentBreakdown.assessments\" :key=\"assessment.id\">\r\n                        <td>{{ assessment.name }}</td>\r\n                        <td>\r\n                          <span class=\"badge badge-sm\" :class=\"getAssessmentBadgeClass(assessment.type)\">\r\n                            {{ formatAssessmentType(assessment.type) }}\r\n                          </span>\r\n                        </td>\r\n                        <td>\r\n                          <span :class=\"getScoreClass(assessment.percentage)\">\r\n                            {{ assessment.obtained }}/{{ assessment.max_marks }}\r\n                            ({{ assessment.percentage }}%)\r\n                          </span>\r\n                        </td>\r\n                        <td>\r\n                          <strong class=\"text-primary\">{{ assessment.weighted }}%</strong>\r\n                        </td>\r\n                        <td>{{ assessment.classAverage }}%</td>\r\n                        <td>\r\n                          <span class=\"badge\" :class=\"getPerformanceStatusClass(assessment.percentage, assessment.classAverage)\">\r\n                            {{ getPerformanceStatus(assessment.percentage, assessment.classAverage) }}\r\n                          </span>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <h6>Performance Trends</h6>\r\n              <canvas id=\"studentTrendChart\" height=\"200\"></canvas>\r\n              \r\n              <div class=\"mt-4\">\r\n                <h6>Strengths & Areas for Improvement</h6>\r\n                <div class=\"row\">\r\n                  <div class=\"col-6\">\r\n                    <h6 class=\"text-success\">Strengths</h6>\r\n                    <ul class=\"list-unstyled\">\r\n                      <li v-for=\"strength in studentBreakdown.strengths\" :key=\"strength\" class=\"mb-1\">\r\n                        <i class=\"fas fa-check-circle text-success me-2\"></i>{{ strength }}\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <div class=\"col-6\">\r\n                    <h6 class=\"text-warning\">Improvements</h6>\r\n                    <ul class=\"list-unstyled\">\r\n                      <li v-for=\"improvement in studentBreakdown.improvements\" :key=\"improvement\" class=\"mb-1\">\r\n                        <i class=\"fas fa-exclamation-triangle text-warning me-2\"></i>{{ improvement }}\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Class Performance Table -->\r\n      <div class=\"card\">\r\n        <div class=\"card-header d-flex justify-content-between align-items-center\">\r\n          <h5 class=\"mb-0\">\r\n            <i class=\"fas fa-table me-2\"></i>\r\n            {{ selectedStudentId ? 'Student' : 'Class' }} Performance Breakdown\r\n          </h5>\r\n          <div class=\"btn-group btn-group-sm\">\r\n            <button class=\"btn btn-outline-primary\" @click=\"toggleView('summary')\" \r\n                    :class=\"{ active: viewMode === 'summary' }\">\r\n              Summary\r\n            </button>\r\n            <button class=\"btn btn-outline-primary\" @click=\"toggleView('detailed')\" \r\n                    :class=\"{ active: viewMode === 'detailed' }\">\r\n              Detailed\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-body p-0\">\r\n          <div class=\"table-responsive\">\r\n            <table class=\"table table-hover mb-0\">\r\n              <thead class=\"table-light\">\r\n                <tr>\r\n                  <th v-if=\"!selectedStudentId\">Student</th>\r\n                  <th v-for=\"assessment in uniqueAssessments\" :key=\"assessment.id\" class=\"text-center\">\r\n                    {{ assessment.name }}\r\n                    <br>\r\n                    <small class=\"text-muted\">({{ assessment.weightage }}%)</small>\r\n                  </th>\r\n                  <th class=\"text-center\">Final Mark</th>\r\n                  <th class=\"text-center\">Grade</th>\r\n                  <th v-if=\"!selectedStudentId\" class=\"text-center\">Rank</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr v-for=\"(student, index) in filteredStudentMarks\" :key=\"student.id\">\r\n                  <td v-if=\"!selectedStudentId\">\r\n                    <div class=\"d-flex align-items-center\">\r\n                      <div class=\"avatar me-3\">\r\n                        {{ getStudentInitials(student.name) }}\r\n                      </div>\r\n                      <div>\r\n                        <strong>{{ student.name }}</strong>\r\n                        <br>\r\n                        <small class=\"text-muted\">{{ student.matric_number }}</small>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                  <td v-for=\"assessment in uniqueAssessments\" :key=\"assessment.id\" class=\"text-center\">\r\n                    <div v-if=\"student.marks[assessment.id]\">\r\n                      <strong :class=\"getScoreClass(student.marks[assessment.id].percentage)\">\r\n                        {{ student.marks[assessment.id].percentage }}%\r\n                      </strong>\r\n                      <br>\r\n                      <small class=\"text-muted\">\r\n                        {{ student.marks[assessment.id].obtained }}/{{ student.marks[assessment.id].max_marks }}\r\n                      </small>\r\n                    </div>\r\n                    <div v-else class=\"text-muted\">\r\n                      <i class=\"fas fa-minus\"></i>\r\n                      <br>\r\n                      <small>Not submitted</small>\r\n                    </div>\r\n                  </td>\r\n                  <td class=\"text-center\">\r\n                    <strong :class=\"getScoreClass(student.finalMark)\" class=\"fs-5\">\r\n                      {{ student.finalMark }}%\r\n                    </strong>\r\n                  </td>\r\n                  <td class=\"text-center\">\r\n                    <span class=\"badge badge-lg\" :class=\"getGradeBadgeClass(student.grade)\">\r\n                      {{ student.grade }}\r\n                    </span>\r\n                  </td>\r\n                  <td v-if=\"!selectedStudentId\" class=\"text-center\">\r\n                    <span class=\"badge bg-secondary\">{{ index + 1 }}</span>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- No Course Selected -->\r\n    <div v-else class=\"text-center p-5\">\r\n      <i class=\"fas fa-chart-line fa-4x text-muted mb-3\"></i>\r\n      <h3 class=\"text-muted\">Select a Course</h3>\r\n      <p class=\"text-muted\">Choose a course from the dropdown above to view detailed mark breakdown analysis.</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { mapGetters } from 'vuex';\r\nimport Chart from 'chart.js/auto';\r\n\r\nexport default {\r\n  name: 'MarkBreakdown',\r\n  props: {\r\n    courseId: {\r\n      type: [String, Number],\r\n      default: null\r\n    },\r\n    userRole: {\r\n      type: String,\r\n      default: ''\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      courses: [],\r\n      students: [],\r\n      selectedCourseId: '',\r\n      selectedStudentId: '',\r\n      selectedAssessmentType: '',\r\n      isLoading: false,\r\n      viewMode: 'summary',\r\n      courseStats: null,\r\n      assessmentBreakdown: [],\r\n      studentBreakdown: null,\r\n      uniqueAssessments: [],\r\n      filteredStudentMarks: [],\r\n      assessmentChart: null,\r\n      studentTrendChart: null\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters('auth', ['getUser']),\r\n    currentUserRole() {\r\n      return this.userRole || this.getUser?.role || '';\r\n    }\r\n  },\r\n  mounted() {\r\n    this.loadCourses();\r\n  },\r\n  beforeUnmount() {\r\n    this.destroyCharts();\r\n  },\r\n  methods: {\r\n    async loadCourses() {\r\n      try {\r\n        const userId = this.getUser?.id || 4; // Use Student One (ID: 4) for testing\r\n        console.log('Loading courses for user ID:', userId, 'Role:', this.currentUserRole);\r\n\r\n        let endpoint = '';\r\n        if (this.currentUserRole === 'lecturer') {\r\n          endpoint = `/marks-api.php?action=lecturer_courses&lecturer_id=${userId}`;\r\n        } else if (this.currentUserRole === 'student') {\r\n          endpoint = `/breakdown-api.php?action=student_courses&student_id=${userId}`;\r\n        } else if (this.currentUserRole === 'advisor') {\r\n          endpoint = `/breakdown-api.php?action=advisor_courses&advisor_id=${userId}`;\r\n        } else {\r\n          // Default to student courses for testing\r\n          endpoint = `/breakdown-api.php?action=student_courses&student_id=4`;\r\n        }\r\n\r\n        console.log('API endpoint:', endpoint);\r\n        const response = await axios.get(endpoint);\r\n        this.courses = response.data.courses || [];\r\n        \r\n        console.log(`Loaded ${this.courses.length} courses for ${this.currentUserRole}:`, this.courses);\r\n        \r\n        // Add sample data if no courses are returned\r\n        if (this.courses.length === 0) {\r\n          console.log('No real courses found, adding sample courses');\r\n          this.courses = [\r\n            { id: 1, code: 'CS101', name: 'Introduction to Computer Science', semester: 'Fall 2024', academic_year: '2024/2025' },\r\n            { id: 2, code: 'MATH201', name: 'Calculus II', semester: 'Fall 2024', academic_year: '2024/2025' },\r\n            { id: 3, code: 'PHYS101', name: 'Physics I', semester: 'Fall 2024', academic_year: '2024/2025' }\r\n          ];\r\n        }\r\n        \r\n        // Auto-select course from route if available\r\n        if (this.$route.params.courseId) {\r\n          this.selectedCourseId = parseInt(this.$route.params.courseId);\r\n          await this.loadCourseData();\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading courses:', error);\r\n        // Fallback to sample data\r\n        this.courses = [\r\n          { id: 1, code: 'CS101', name: 'Introduction to Computer Science', semester: 'Fall 2024', academic_year: '2024/2025' },\r\n          { id: 2, code: 'MATH201', name: 'Calculus II', semester: 'Fall 2024', academic_year: '2024/2025' },\r\n          { id: 3, code: 'PHYS101', name: 'Physics I', semester: 'Fall 2024', academic_year: '2024/2025' }\r\n        ];\r\n        \r\n        // Auto-select course from route if available\r\n        if (this.$route.params.courseId || this.courseId) {\r\n          this.selectedCourseId = parseInt(this.$route.params.courseId || this.courseId);\r\n          await this.loadCourseData();\r\n        }\r\n      }\r\n    },\r\n\r\n    async loadCourseData() {\r\n      if (!this.selectedCourseId) {\r\n        this.clearData();\r\n        return;\r\n      }\r\n\r\n      this.isLoading = true;\r\n      try {\r\n        // Load students and marks for the course\r\n        const response = await axios.get(`/breakdown-api.php?action=course_breakdown&course_id=${this.selectedCourseId}`);\r\n        \r\n        if (response.data && response.data.students) {\r\n          // Map real data to component format\r\n          this.students = response.data.students || [];\r\n          this.uniqueAssessments = response.data.components || [];\r\n          \r\n          // Map statistics with correct property names\r\n          if (response.data.statistics) {\r\n            this.courseStats = {\r\n              totalStudents: response.data.statistics.total_students,\r\n              totalAssessments: response.data.statistics.total_assessments,\r\n              classAverage: response.data.statistics.class_average,\r\n              atRiskStudents: response.data.statistics.at_risk_students\r\n            };\r\n          }\r\n          \r\n          console.log('Real data loaded:', {\r\n            students: this.students.length,\r\n            assessments: this.uniqueAssessments.length,\r\n            stats: this.courseStats\r\n          });\r\n          \r\n          // Process the data for breakdown analysis\r\n          await this.processMarkBreakdown();\r\n        } else {\r\n          // No real data, create sample data for demonstration\r\n          console.log('No real data found, using sample data');\r\n          this.createSampleData();\r\n        }\r\n        \r\n        this.filteredStudentMarks = this.students;\r\n        \r\n        // If student role, auto-select current student\r\n        if (this.currentUserRole === 'student') {\r\n          this.selectedStudentId = this.getUser.id;\r\n          await this.loadStudentBreakdown();\r\n        }\r\n        \r\n        this.$nextTick(() => {\r\n          this.createAssessmentChart();\r\n        });\r\n        \r\n      } catch (error) {\r\n        console.error('Error loading course data:', error);\r\n        // Create sample data on error\r\n        console.log('Error occurred, using sample data fallback');\r\n        this.createSampleData();\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n\r\n    createSampleData() {\r\n      // Create sample course statistics\r\n      this.courseStats = {\r\n        totalStudents: 25,\r\n        totalAssessments: 6,\r\n        classAverage: 78.5,\r\n        atRiskStudents: 3\r\n      };\r\n\r\n      // Create sample assessments\r\n      this.uniqueAssessments = [\r\n        { id: 1, name: 'Quiz 1', type: 'quiz', max_marks: 20, weightage: 5, date: '2024-09-15' },\r\n        { id: 2, name: 'Assignment 1', type: 'assignment', max_marks: 100, weightage: 15, date: '2024-10-01' },\r\n        { id: 3, name: 'Midterm Exam', type: 'midterm', max_marks: 100, weightage: 30, date: '2024-10-15' },\r\n        { id: 4, name: 'Quiz 2', type: 'quiz', max_marks: 20, weightage: 5, date: '2024-11-01' },\r\n        { id: 5, name: 'Assignment 2', type: 'assignment', max_marks: 100, weightage: 15, date: '2024-11-15' },\r\n        { id: 6, name: 'Final Exam', type: 'final_exam', max_marks: 100, weightage: 30, date: '2024-12-10' }\r\n      ];\r\n\r\n      // Create sample students with marks\r\n      this.students = [\r\n        {\r\n          id: 1,\r\n          name: 'Alice Johnson',\r\n          matric_number: 'A123456',\r\n          email: 'alice@university.edu',\r\n          finalMark: 85.2,\r\n          grade: 'A',\r\n          marks: {\r\n            quiz: { obtained: 18, max_marks: 20, percentage: 90, weighted: 4.5 },\r\n            assignment: { obtained: 85, max_marks: 100, percentage: 85, weighted: 12.75 },\r\n            midterm: { obtained: 82, max_marks: 100, percentage: 82, weighted: 24.6 },\r\n            final_exam: { obtained: 88, max_marks: 100, percentage: 88, weighted: 26.4 }\r\n          }\r\n        },\r\n        {\r\n          id: 2,\r\n          name: 'Bob Smith',\r\n          matric_number: 'B234567',\r\n          email: 'bob@university.edu',\r\n          finalMark: 72.8,\r\n          grade: 'B',\r\n          marks: {\r\n            quiz: { obtained: 15, max_marks: 20, percentage: 75, weighted: 3.75 },\r\n            assignment: { obtained: 78, max_marks: 100, percentage: 78, weighted: 11.7 },\r\n            midterm: { obtained: 70, max_marks: 100, percentage: 70, weighted: 21 },\r\n            final_exam: { obtained: 75, max_marks: 100, percentage: 75, weighted: 22.5 }\r\n          }\r\n        },\r\n        {\r\n          id: 3,\r\n          name: 'Carol Davis',\r\n          matric_number: 'C345678',\r\n          email: 'carol@university.edu',\r\n          finalMark: 45.2,\r\n          grade: 'F',\r\n          marks: {\r\n            quiz: { obtained: 10, max_marks: 20, percentage: 50, weighted: 2.5 },\r\n            assignment: { obtained: 45, max_marks: 100, percentage: 45, weighted: 6.75 },\r\n            midterm: { obtained: 40, max_marks: 100, percentage: 40, weighted: 12 },\r\n            final_exam: { obtained: 48, max_marks: 100, percentage: 48, weighted: 14.4 }\r\n          }\r\n        }\r\n      ];\r\n\r\n      // Process the sample data\r\n      this.processMarkBreakdown();\r\n    },\r\n\r\n    async processMarkBreakdown() {\r\n      const breakdown = {};\r\n      \r\n      this.uniqueAssessments.forEach(assessment => {\r\n        if (!breakdown[assessment.type]) {\r\n          breakdown[assessment.type] = {\r\n            type: assessment.type,\r\n            weightage: 0,\r\n            total: 0,\r\n            submitted: 0,\r\n            totalMarks: 0,\r\n            obtainedMarks: 0\r\n          };\r\n        }\r\n        \r\n        breakdown[assessment.type].weightage += assessment.weightage || 0;\r\n        breakdown[assessment.type].total += this.students.length;\r\n        \r\n        this.students.forEach(student => {\r\n          if (student.marks && student.marks[assessment.type]) {\r\n            breakdown[assessment.type].submitted++;\r\n            breakdown[assessment.type].totalMarks += student.marks[assessment.type].max_marks || 0;\r\n            breakdown[assessment.type].obtainedMarks += student.marks[assessment.type].obtained || 0;\r\n          }\r\n        });\r\n      });\r\n      \r\n      this.assessmentBreakdown = Object.values(breakdown).map(item => ({\r\n        ...item,\r\n        average: item.totalMarks > 0 ? Math.round((item.obtainedMarks / item.totalMarks) * 100) : 0\r\n      }));\r\n    },\r\n\r\n    async calculateCourseStats() {\r\n      const totalStudents = this.students.length;\r\n      const totalAssessments = this.uniqueAssessments.length;\r\n      \r\n      let totalMarks = 0;\r\n      let atRiskCount = 0;\r\n      \r\n      this.students.forEach(student => {\r\n        const finalMark = this.calculateStudentFinalMark(student);\r\n        totalMarks += finalMark;\r\n        if (finalMark < 50) atRiskCount++;\r\n      });\r\n      \r\n      this.courseStats = {\r\n        totalStudents,\r\n        totalAssessments,\r\n        classAverage: totalStudents > 0 ? Math.round(totalMarks / totalStudents) : 0,\r\n        atRiskStudents: atRiskCount\r\n      };\r\n    },\r\n\r\n    async loadStudentBreakdown() {\r\n      if (!this.selectedStudentId) {\r\n        this.studentBreakdown = null;\r\n        return;\r\n      }\r\n\r\n      const student = this.students.find(s => s.id == this.selectedStudentId);\r\n      if (!student) return;\r\n\r\n      const assessments = this.uniqueAssessments.map(assessment => {\r\n        const mark = student.marks?.[assessment.type] || null;\r\n        const classTotal = this.students.reduce((sum, s) => \r\n          sum + (s.marks?.[assessment.type]?.obtained || 0), 0);\r\n        const classAverage = this.students.length > 0 ? \r\n          Math.round(classTotal / this.students.length) : 0;\r\n\r\n        return {\r\n          id: assessment.id,\r\n          name: assessment.name,\r\n          type: assessment.type,\r\n          obtained: mark?.obtained || 0,\r\n          max_marks: mark?.max_marks || assessment.max_marks || 0,\r\n          percentage: mark ? Math.round((mark.obtained / mark.max_marks) * 100) : 0,\r\n          weighted: mark?.weighted || 0,\r\n          classAverage\r\n        };\r\n      });\r\n\r\n      const finalMark = this.calculateStudentFinalMark(student);\r\n      const grade = this.calculateGrade(finalMark);\r\n      const rank = this.calculateStudentRank(student);\r\n\r\n      // Analyze strengths and improvements\r\n      const strengths = this.analyzeStrengths(assessments);\r\n      const improvements = this.analyzeImprovements(assessments);\r\n\r\n      this.studentBreakdown = {\r\n        name: student.name,\r\n        finalMark,\r\n        grade,\r\n        rank,\r\n        assessments,\r\n        strengths,\r\n        improvements\r\n      };\r\n\r\n      this.$nextTick(() => {\r\n        this.createStudentTrendChart();\r\n      });\r\n    },\r\n\r\n    calculateStudentFinalMark(student) {\r\n      let totalWeighted = 0;\r\n      \r\n      Object.values(student.marks || {}).forEach(mark => {\r\n        totalWeighted += mark.weighted || 0;\r\n      });\r\n      \r\n      return Math.round(totalWeighted);\r\n    },\r\n\r\n    calculateGrade(mark) {\r\n      if (mark >= 80) return 'A';\r\n      if (mark >= 70) return 'B';\r\n      if (mark >= 60) return 'C';\r\n      if (mark >= 50) return 'D';\r\n      return 'F';\r\n    },\r\n\r\n    calculateStudentRank(targetStudent) {\r\n      const sortedStudents = [...this.students].sort((a, b) => \r\n        this.calculateStudentFinalMark(b) - this.calculateStudentFinalMark(a));\r\n      \r\n      return sortedStudents.findIndex(s => s.id === targetStudent.id) + 1;\r\n    },\r\n\r\n    analyzeStrengths(assessments) {\r\n      const strengths = [];\r\n      \r\n      assessments.forEach(assessment => {\r\n        if (assessment.percentage >= assessment.classAverage + 10) {\r\n          strengths.push(`${this.formatAssessmentType(assessment.type)} (${assessment.percentage}%)`);\r\n        }\r\n      });\r\n      \r\n      return strengths.length > 0 ? strengths : ['Consistent performance across assessments'];\r\n    },\r\n\r\n    analyzeImprovements(assessments) {\r\n      const improvements = [];\r\n      \r\n      assessments.forEach(assessment => {\r\n        if (assessment.percentage < assessment.classAverage - 10) {\r\n          improvements.push(`${this.formatAssessmentType(assessment.type)} (${assessment.percentage}%)`);\r\n        }\r\n      });\r\n      \r\n      return improvements.length > 0 ? improvements : ['Continue current study approach'];\r\n    },\r\n\r\n    createAssessmentChart() {\r\n      this.destroyCharts();\r\n      \r\n      const ctx = document.getElementById('assessmentChart');\r\n      if (!ctx) return;\r\n\r\n      this.assessmentChart = new Chart(ctx, {\r\n        type: 'bar',\r\n        data: {\r\n          labels: this.assessmentBreakdown.map(item => this.formatAssessmentType(item.type)),\r\n          datasets: [{\r\n            label: 'Average Score (%)',\r\n            data: this.assessmentBreakdown.map(item => item.average),\r\n            backgroundColor: 'rgba(54, 162, 235, 0.8)',\r\n            borderColor: 'rgba(54, 162, 235, 1)',\r\n            borderWidth: 1\r\n          }, {\r\n            label: 'Weightage (%)',\r\n            data: this.assessmentBreakdown.map(item => item.weightage),\r\n            backgroundColor: 'rgba(255, 99, 132, 0.8)',\r\n            borderColor: 'rgba(255, 99, 132, 1)',\r\n            borderWidth: 1\r\n          }]\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          scales: {\r\n            y: {\r\n              beginAtZero: true,\r\n              max: 100\r\n            }\r\n          }\r\n        }\r\n      });\r\n    },\r\n\r\n    createStudentTrendChart() {\r\n      const ctx = document.getElementById('studentTrendChart');\r\n      if (!ctx || !this.studentBreakdown) return;\r\n\r\n      this.studentTrendChart = new Chart(ctx, {\r\n        type: 'line',\r\n        data: {\r\n          labels: this.studentBreakdown.assessments.map(a => a.name),\r\n          datasets: [{\r\n            label: 'Student Score',\r\n            data: this.studentBreakdown.assessments.map(a => a.percentage),\r\n            borderColor: 'rgba(75, 192, 192, 1)',\r\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n            tension: 0.1\r\n          }, {\r\n            label: 'Class Average',\r\n            data: this.studentBreakdown.assessments.map(a => a.classAverage),\r\n            borderColor: 'rgba(255, 159, 64, 1)',\r\n            backgroundColor: 'rgba(255, 159, 64, 0.2)',\r\n            tension: 0.1\r\n          }]\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          scales: {\r\n            y: {\r\n              beginAtZero: true,\r\n              max: 100\r\n            }\r\n          }\r\n        }\r\n      });\r\n    },\r\n\r\n    destroyCharts() {\r\n      if (this.assessmentChart) {\r\n        this.assessmentChart.destroy();\r\n        this.assessmentChart = null;\r\n      }\r\n      if (this.studentTrendChart) {\r\n        this.studentTrendChart.destroy();\r\n        this.studentTrendChart = null;\r\n      }\r\n    },\r\n\r\n    filterBreakdown() {\r\n      // Implementation for filtering by assessment type\r\n      this.filteredStudentMarks = this.students;\r\n    },\r\n\r\n    toggleView(mode) {\r\n      this.viewMode = mode;\r\n    },\r\n\r\n    async exportBreakdown() {\r\n      // Implementation for exporting detailed breakdown\r\n      console.log('Exporting breakdown...');\r\n    },\r\n\r\n    async refreshData() {\r\n      await this.loadCourseData();\r\n    },\r\n\r\n    clearData() {\r\n      this.students = [];\r\n      this.courseStats = null;\r\n      this.assessmentBreakdown = [];\r\n      this.studentBreakdown = null;\r\n      this.uniqueAssessments = [];\r\n      this.filteredStudentMarks = [];\r\n      this.destroyCharts();\r\n    },\r\n\r\n    // Utility methods\r\n    getStudentInitials(name) {\r\n      return name.split(' ').map(n => n.charAt(0)).join('').toUpperCase();\r\n    },\r\n\r\n    formatAssessmentType(type) {\r\n      return type.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase());\r\n    },\r\n\r\n    getAssessmentBadgeClass(type) {\r\n      const classes = {\r\n        'quiz': 'bg-info',\r\n        'assignment': 'bg-primary',\r\n        'midterm': 'bg-warning text-dark',\r\n        'final_exam': 'bg-danger',\r\n        'project': 'bg-success'\r\n      };\r\n      return classes[type] || 'bg-secondary';\r\n    },\r\n\r\n    getAssessmentProgressClass(type) {\r\n      const classes = {\r\n        'quiz': 'bg-info',\r\n        'assignment': 'bg-primary',\r\n        'midterm': 'bg-warning',\r\n        'final_exam': 'bg-danger',\r\n        'project': 'bg-success'\r\n      };\r\n      return classes[type] || 'bg-secondary';\r\n    },\r\n\r\n    getScoreClass(percentage) {\r\n      if (percentage >= 80) return 'text-success fw-bold';\r\n      if (percentage >= 70) return 'text-info fw-bold';\r\n      if (percentage >= 60) return 'text-warning fw-bold';\r\n      if (percentage >= 50) return 'text-primary';\r\n      return 'text-danger fw-bold';\r\n    },\r\n\r\n    getGradeBadgeClass(grade) {\r\n      const classes = {\r\n        'A': 'bg-success',\r\n        'B': 'bg-info',\r\n        'C': 'bg-warning text-dark',\r\n        'D': 'bg-primary',\r\n        'F': 'bg-danger'\r\n      };\r\n      return classes[grade] || 'bg-secondary';\r\n    },\r\n\r\n    getPerformanceStatus(studentScore, classAverage) {\r\n      if (studentScore >= classAverage + 10) return 'Excellent';\r\n      if (studentScore >= classAverage) return 'Above Average';\r\n      if (studentScore >= classAverage - 10) return 'Average';\r\n      return 'Needs Improvement';\r\n    },\r\n\r\n    getPerformanceStatusClass(studentScore, classAverage) {\r\n      if (studentScore >= classAverage + 10) return 'bg-success';\r\n      if (studentScore >= classAverage) return 'bg-info';\r\n      if (studentScore >= classAverage - 10) return 'bg-warning text-dark';\r\n      return 'bg-danger';\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.mark-breakdown h1 {\r\n  color: #2c3e50;\r\n  font-weight: 700;\r\n}\r\n\r\n.stat-card {\r\n  transition: transform 0.2s ease;\r\n  border-radius: 10px;\r\n}\r\n\r\n.stat-card:hover {\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.avatar {\r\n  width: 40px;\r\n  height: 40px;\r\n  background: linear-gradient(45deg, #007bff, #0056b3);\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: white;\r\n  font-weight: bold;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.metric-box {\r\n  padding: 1rem;\r\n  border-radius: 8px;\r\n  background: linear-gradient(135deg, #f8f9fa, #e9ecef);\r\n}\r\n\r\n.card {\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  border: none;\r\n  border-radius: 10px;\r\n}\r\n\r\n.table th {\r\n  font-weight: 600;\r\n  border-top: none;\r\n}\r\n\r\n.table td {\r\n  vertical-align: middle;\r\n}\r\n\r\n.badge-lg {\r\n  font-size: 1rem;\r\n  padding: 0.5rem 0.75rem;\r\n}\r\n\r\n.badge-sm {\r\n  font-size: 0.7rem;\r\n}\r\n\r\n.btn-group .btn.active {\r\n  background-color: #007bff;\r\n  color: white;\r\n}\r\n\r\ncanvas {\r\n  max-height: 300px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}