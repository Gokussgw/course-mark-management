{"ast":null,"code":"import _slicedToArray from \"C:/Users/ansmu/Desktop/Web/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _toConsumableArray from \"C:/Users/ansmu/Desktop/Web/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"C:/Users/ansmu/Desktop/Web/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _regenerator from \"C:/Users/ansmu/Desktop/Web/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _asyncToGenerator from \"C:/Users/ansmu/Desktop/Web/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"C:/Users/ansmu/Desktop/Web/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.date.to-iso-string.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-float.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url.to-json.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { mapGetters } from 'vuex';\nimport * as bootstrap from 'bootstrap';\nexport default {\n  name: 'MarksManagement',\n  data: function data() {\n    return {\n      courseId: this.$route.params.courseId || '',\n      course: null,\n      students: [],\n      lecturerCourses: [],\n      isLoading: false,\n      unsavedChanges: false\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters('auth', ['getUser', 'userId'])), {}, {\n    currentUser: function currentUser() {\n      return this.getUser;\n    }\n  }),\n  created: function created() {\n    var _this = this;\n    return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n      return _regenerator().w(function (_context) {\n        while (1) switch (_context.n) {\n          case 0:\n            console.log('MarksManagement component created');\n            console.log('Initial auth state:', {\n              user: _this.getUser,\n              userId: _this.userId,\n              isAuthenticated: _this.$store.getters['auth/isAuthenticated']\n            });\n\n            // Wait a bit for auth to be initialized if needed\n            _context.n = 1;\n            return _this.$nextTick();\n          case 1:\n            _context.n = 2;\n            return _this.loadLecturerCourses();\n          case 2:\n            if (!_this.courseId) {\n              _context.n = 3;\n              break;\n            }\n            _context.n = 3;\n            return _this.loadCourseData();\n          case 3:\n            return _context.a(2);\n        }\n      }, _callee);\n    }))();\n  },\n  methods: {\n    loadLecturerCourses: function loadLecturerCourses() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n        var lecturerId, response, data, _t;\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              _context2.p = 0;\n              console.log('Loading lecturer courses...');\n              console.log('User ID:', _this2.userId);\n              console.log('Current user:', _this2.currentUser);\n              if (_this2.userId) {\n                _context2.n = 1;\n                break;\n              }\n              throw new Error('User not authenticated');\n            case 1:\n              lecturerId = _this2.userId;\n              _context2.n = 2;\n              return fetch(\"http://localhost/marks-api.php?action=lecturer_courses&lecturer_id=\".concat(lecturerId), {\n                method: 'GET',\n                credentials: 'include',\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n            case 2:\n              response = _context2.v;\n              console.log('API Response status:', response.status);\n              if (response.ok) {\n                _context2.n = 3;\n                break;\n              }\n              throw new Error(\"HTTP error! status: \".concat(response.status));\n            case 3:\n              _context2.n = 4;\n              return response.json();\n            case 4:\n              data = _context2.v;\n              console.log('API Response data:', data);\n              if (!data.error) {\n                _context2.n = 5;\n                break;\n              }\n              throw new Error(data.error);\n            case 5:\n              _this2.lecturerCourses = data.courses || [];\n              console.log('Loaded lecturer courses:', _this2.lecturerCourses);\n              _context2.n = 7;\n              break;\n            case 6:\n              _context2.p = 6;\n              _t = _context2.v;\n              console.error('Error loading lecturer courses:', _t);\n              _this2.$store.dispatch('showToast', {\n                message: 'Error loading courses: ' + _t.message,\n                type: 'error'\n              });\n              _this2.lecturerCourses = [];\n            case 7:\n              return _context2.a(2);\n          }\n        }, _callee2, null, [[0, 6]]);\n      }))();\n    },\n    loadCourseData: function loadCourseData() {\n      var _this3 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {\n        var _t2;\n        return _regenerator().w(function (_context3) {\n          while (1) switch (_context3.n) {\n            case 0:\n              if (_this3.courseId) {\n                _context3.n = 1;\n                break;\n              }\n              return _context3.a(2);\n            case 1:\n              _this3.isLoading = true;\n              _context3.p = 2;\n              // Find the selected course\n              _this3.course = _this3.lecturerCourses.find(function (c) {\n                return c.id == _this3.courseId;\n              });\n\n              // Load students for this course with their marks\n              _context3.n = 3;\n              return _this3.loadStudentsWithMarks();\n            case 3:\n              _context3.n = 5;\n              break;\n            case 4:\n              _context3.p = 4;\n              _t2 = _context3.v;\n              console.error('Error loading course data:', _t2);\n              _this3.$store.dispatch('showToast', {\n                message: 'Error loading course data',\n                type: 'error'\n              });\n            case 5:\n              _context3.p = 5;\n              _this3.isLoading = false;\n              return _context3.f(5);\n            case 6:\n              return _context3.a(2);\n          }\n        }, _callee3, null, [[2, 4, 5, 6]]);\n      }))();\n    },\n    loadStudentsWithMarks: function loadStudentsWithMarks() {\n      var _this4 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4() {\n        var response, data, _t3;\n        return _regenerator().w(function (_context4) {\n          while (1) switch (_context4.n) {\n            case 0:\n              _context4.p = 0;\n              _context4.n = 1;\n              return fetch(\"http://localhost/marks-api.php?action=course_students_marks&course_id=\".concat(_this4.courseId), {\n                method: 'GET',\n                credentials: 'include',\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n            case 1:\n              response = _context4.v;\n              if (response.ok) {\n                _context4.n = 2;\n                break;\n              }\n              throw new Error(\"HTTP error! status: \".concat(response.status));\n            case 2:\n              _context4.n = 3;\n              return response.json();\n            case 3:\n              data = _context4.v;\n              if (!data.error) {\n                _context4.n = 4;\n                break;\n              }\n              throw new Error(data.error);\n            case 4:\n              // Map the API response to the expected format\n              _this4.students = data.students.map(function (student) {\n                return {\n                  id: student.student_id,\n                  name: student.student_name,\n                  email: student.email || 'N/A',\n                  matric_number: student.matric_number,\n                  marks: {\n                    assignment: student.assignment_mark || 0,\n                    quiz: student.quiz_mark || 0,\n                    test: student.test_mark || 0,\n                    final_exam: student.final_exam_mark || 0,\n                    final_mark: student.final_grade || 0,\n                    grade: student.letter_grade || 'F'\n                  }\n                };\n              });\n\n              // Calculate final marks for all students to ensure they're up to date\n              _this4.students.forEach(function (student) {\n                _this4.calculateFinalMark(student);\n              });\n              console.log('Loaded students with marks:', _this4.students);\n              _context4.n = 6;\n              break;\n            case 5:\n              _context4.p = 5;\n              _t3 = _context4.v;\n              console.error('Error loading students with marks:', _t3);\n              _this4.$store.dispatch('showToast', {\n                message: 'Error loading student marks: ' + _t3.message,\n                type: 'error'\n              });\n\n              // Fallback to empty array\n              _this4.students = [];\n            case 6:\n              return _context4.a(2);\n          }\n        }, _callee4, null, [[0, 5]]);\n      }))();\n    },\n    calculateFinalMark: function calculateFinalMark(student) {\n      var marks = student.marks;\n\n      // Check if all marks are entered\n      var assignment = marks.assignment || 0;\n      var quiz = marks.quiz || 0;\n      var test = marks.test || 0;\n      var finalExam = marks.final_exam || 0;\n\n      // Calculate final mark: Components (70%) + Final Exam (30%)\n      // Components breakdown: Assignment (25%) + Quiz (20%) + Test (25%)\n      var componentMark = assignment * 0.25 + quiz * 0.20 + test * 0.25;\n      var finalMark = componentMark + finalExam * 0.30;\n      marks.final_mark = finalMark;\n      marks.grade = this.calculateGrade(finalMark);\n      this.unsavedChanges = true;\n    },\n    calculateGrade: function calculateGrade(finalMark) {\n      if (finalMark >= 80) return 'A';\n      if (finalMark >= 70) return 'B';\n      if (finalMark >= 60) return 'C';\n      if (finalMark >= 50) return 'D';\n      return 'F';\n    },\n    calculateAllFinalMarks: function calculateAllFinalMarks() {\n      var _this5 = this;\n      this.students.forEach(function (student) {\n        _this5.calculateFinalMark(student);\n      });\n      this.$store.dispatch('showToast', {\n        message: 'Final marks calculated for all students',\n        type: 'success'\n      });\n    },\n    saveStudentMarks: function saveStudentMarks(student) {\n      var _this6 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee5() {\n        var lecturerId, requestData, response, data, _t4;\n        return _regenerator().w(function (_context5) {\n          while (1) switch (_context5.n) {\n            case 0:\n              _context5.p = 0;\n              if (_this6.userId) {\n                _context5.n = 1;\n                break;\n              }\n              throw new Error('User not authenticated');\n            case 1:\n              lecturerId = _this6.userId;\n              requestData = {\n                action: 'save_marks',\n                student_id: student.id,\n                course_id: _this6.courseId,\n                lecturer_id: lecturerId,\n                marks: {\n                  assignment: student.marks.assignment || 0,\n                  quiz: student.marks.quiz || 0,\n                  test: student.marks.test || 0,\n                  final_exam: student.marks.final_exam || 0\n                }\n              };\n              _context5.n = 2;\n              return fetch('http://localhost/marks-api.php', {\n                method: 'POST',\n                credentials: 'include',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(requestData)\n              });\n            case 2:\n              response = _context5.v;\n              if (response.ok) {\n                _context5.n = 3;\n                break;\n              }\n              throw new Error(\"HTTP error! status: \".concat(response.status));\n            case 3:\n              _context5.n = 4;\n              return response.json();\n            case 4:\n              data = _context5.v;\n              if (!data.error) {\n                _context5.n = 5;\n                break;\n              }\n              throw new Error(data.error);\n            case 5:\n              console.log('Marks saved successfully for student:', student.name);\n              _this6.$store.dispatch('showToast', {\n                message: \"Marks saved for \".concat(student.name),\n                type: 'success'\n              });\n              _context5.n = 7;\n              break;\n            case 6:\n              _context5.p = 6;\n              _t4 = _context5.v;\n              console.error('Error saving student marks:', _t4);\n              _this6.$store.dispatch('showToast', {\n                message: \"Error saving marks for \".concat(student.name, \": \").concat(_t4.message),\n                type: 'error'\n              });\n              throw _t4;\n            case 7:\n              return _context5.a(2);\n          }\n        }, _callee5, null, [[0, 6]]);\n      }))();\n    },\n    saveAllMarks: function saveAllMarks() {\n      var _this7 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee6() {\n        var _iterator, _step, student, _t5, _t6;\n        return _regenerator().w(function (_context6) {\n          while (1) switch (_context6.n) {\n            case 0:\n              if (_this7.unsavedChanges) {\n                _context6.n = 1;\n                break;\n              }\n              _this7.$store.dispatch('showToast', {\n                message: 'No changes to save',\n                type: 'info'\n              });\n              return _context6.a(2);\n            case 1:\n              _this7.isLoading = true;\n              _context6.p = 2;\n              // Save all student marks to API\n              _iterator = _createForOfIteratorHelper(_this7.students);\n              _context6.p = 3;\n              _iterator.s();\n            case 4:\n              if ((_step = _iterator.n()).done) {\n                _context6.n = 6;\n                break;\n              }\n              student = _step.value;\n              _context6.n = 5;\n              return _this7.saveStudentMarks(student);\n            case 5:\n              _context6.n = 4;\n              break;\n            case 6:\n              _context6.n = 8;\n              break;\n            case 7:\n              _context6.p = 7;\n              _t5 = _context6.v;\n              _iterator.e(_t5);\n            case 8:\n              _context6.p = 8;\n              _iterator.f();\n              return _context6.f(8);\n            case 9:\n              _this7.unsavedChanges = false;\n              _this7.$store.dispatch('showToast', {\n                message: 'All marks saved successfully',\n                type: 'success'\n              });\n              _context6.n = 11;\n              break;\n            case 10:\n              _context6.p = 10;\n              _t6 = _context6.v;\n              console.error('Error saving all marks:', _t6);\n              _this7.$store.dispatch('showToast', {\n                message: 'Error saving marks',\n                type: 'error'\n              });\n            case 11:\n              _context6.p = 11;\n              _this7.isLoading = false;\n              return _context6.f(11);\n            case 12:\n              return _context6.a(2);\n          }\n        }, _callee6, null, [[3, 7, 8, 9], [2, 10, 11, 12]]);\n      }))();\n    },\n    exportMarksCSV: function exportMarksCSV() {\n      var _this8 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee7() {\n        var _this8$course, _this8$course2, _this8$course3, _this8$course4, _this8$course5, _this8$course6, _this8$$store$state$u, _this8$$store$state$u2, _this8$course7, timestamp, timeString, filename, escapeCSV, csvLines, totalClassPoints, studentsWithMarks, gradeDistribution, componentStats, classAverage, validFinalMarks, highest, lowest, median, csvContent, blob, url, link;\n        return _regenerator().w(function (_context7) {\n          while (1) switch (_context7.n) {\n            case 0:\n              console.log('Starting enhanced CSV export with real database integration...');\n\n              // Enhanced validation checks\n              if (_this8.courseId) {\n                _context7.n = 1;\n                break;\n              }\n              _this8.$store.dispatch('showToast', {\n                message: 'Please select a course first',\n                type: 'warning'\n              });\n              return _context7.a(2);\n            case 1:\n              if (_this8.userId) {\n                _context7.n = 2;\n                break;\n              }\n              _this8.$store.dispatch('showToast', {\n                message: 'User authentication required',\n                type: 'error'\n              });\n              return _context7.a(2);\n            case 2:\n              if (!(!_this8.students || _this8.students.length === 0)) {\n                _context7.n = 3;\n                break;\n              }\n              _this8.$store.dispatch('showToast', {\n                message: 'No student data available to export',\n                type: 'warning'\n              });\n              return _context7.a(2);\n            case 3:\n              _this8.exportingCSV = true;\n              try {\n                console.log('Creating enhanced CSV export with comprehensive data...');\n\n                // Generate filename with enhanced naming\n                timestamp = new Date().toISOString().split('T')[0];\n                timeString = new Date().toISOString().split('T')[1].split('.')[0].replace(/:/g, '-');\n                filename = \"\".concat(((_this8$course = _this8.course) === null || _this8$course === void 0 ? void 0 : _this8$course.code) || 'Course', \"_Complete_Marks_Export_\").concat(timestamp, \"_\").concat(timeString, \".csv\"); // Enhanced helper function to escape CSV values\n                escapeCSV = function escapeCSV(value) {\n                  if (value === null || value === undefined) return '';\n                  var stringValue = String(value);\n                  if (stringValue.includes(',') || stringValue.includes('\"') || stringValue.includes('\\n') || stringValue.includes('\\r')) {\n                    return '\"' + stringValue.replace(/\"/g, '\"\"') + '\"';\n                  }\n                  return stringValue;\n                }; // Build comprehensive CSV content\n                csvLines = []; // Enhanced header section\n                csvLines.push('COURSE MARK MANAGEMENT SYSTEM - COMPREHENSIVE EXPORT');\n                csvLines.push(''); // Empty line\n\n                // Detailed course information\n                csvLines.push('COURSE INFORMATION');\n                csvLines.push(\"Course Code,\".concat(escapeCSV(((_this8$course2 = _this8.course) === null || _this8$course2 === void 0 ? void 0 : _this8$course2.code) || 'N/A')));\n                csvLines.push(\"Course Name,\".concat(escapeCSV(((_this8$course3 = _this8.course) === null || _this8$course3 === void 0 ? void 0 : _this8$course3.name) || 'N/A')));\n                csvLines.push(\"Academic Year,\".concat(escapeCSV(((_this8$course4 = _this8.course) === null || _this8$course4 === void 0 ? void 0 : _this8$course4.academic_year) || new Date().getFullYear())));\n                csvLines.push(\"Semester,\".concat(escapeCSV(((_this8$course5 = _this8.course) === null || _this8$course5 === void 0 ? void 0 : _this8$course5.semester) || 'Current')));\n                csvLines.push(\"Lecturer,\".concat(escapeCSV(((_this8$course6 = _this8.course) === null || _this8$course6 === void 0 ? void 0 : _this8$course6.lecturer_name) || ((_this8$$store$state$u = _this8.$store.state.user) === null || _this8$$store$state$u === void 0 ? void 0 : _this8$$store$state$u.name) || 'Unknown')));\n                csvLines.push(\"Export Date,\".concat(new Date().toLocaleDateString()));\n                csvLines.push(\"Export Time,\".concat(new Date().toLocaleTimeString()));\n                csvLines.push(\"Total Students Enrolled,\".concat(_this8.students.length));\n                csvLines.push(\"Export Generated By,\".concat(escapeCSV(((_this8$$store$state$u2 = _this8.$store.state.user) === null || _this8$$store$state$u2 === void 0 ? void 0 : _this8$$store$state$u2.name) || 'System')));\n                csvLines.push(''); // Empty line\n\n                // Assessment structure and weightings\n                csvLines.push('ASSESSMENT STRUCTURE');\n                csvLines.push('Component,Weight (%), Max Raw Score,Points Contribution');\n                csvLines.push('Assignment,25%,100,25 points');\n                csvLines.push('Quiz,20%,100,20 points');\n                csvLines.push('Test,25%,100,25 points');\n                csvLines.push('Final Exam,30%,100,30 points');\n                csvLines.push('TOTAL,100%,400,100 points');\n                csvLines.push(''); // Empty line\n\n                // Grading scale information\n                csvLines.push('GRADING SCALE');\n                csvLines.push('Letter Grade,Points Range,Description');\n                csvLines.push('A,80.0 - 100.0,Excellent');\n                csvLines.push('B,70.0 - 79.9,Good');\n                csvLines.push('C,60.0 - 69.9,Satisfactory');\n                csvLines.push('D,50.0 - 59.9,Pass');\n                csvLines.push('F,0.0 - 49.9,Fail');\n                csvLines.push(''); // Empty line\n\n                // Detailed student marks table with calculations\n                csvLines.push('DETAILED STUDENT MARKS');\n                csvLines.push('Student Name,Matric Number,Email,Assignment Raw,Assignment Points,Quiz Raw,Quiz Points,Test Raw,Test Points,Final Exam Raw,Final Exam Points,Total Points,Final Mark (%),Letter Grade,Academic Status');\n\n                // Process each student with enhanced calculations and statistics tracking\n                totalClassPoints = 0;\n                studentsWithMarks = 0;\n                gradeDistribution = {\n                  A: 0,\n                  B: 0,\n                  C: 0,\n                  D: 0,\n                  F: 0\n                };\n                componentStats = {\n                  assignment: {\n                    totalRaw: 0,\n                    totalPoints: 0,\n                    count: 0,\n                    highest: 0,\n                    lowest: 100\n                  },\n                  quiz: {\n                    totalRaw: 0,\n                    totalPoints: 0,\n                    count: 0,\n                    highest: 0,\n                    lowest: 100\n                  },\n                  test: {\n                    totalRaw: 0,\n                    totalPoints: 0,\n                    count: 0,\n                    highest: 0,\n                    lowest: 100\n                  },\n                  final_exam: {\n                    totalRaw: 0,\n                    totalPoints: 0,\n                    count: 0,\n                    highest: 0,\n                    lowest: 100\n                  }\n                };\n                _this8.students.forEach(function (student) {\n                  var marks = student.marks || {};\n\n                  // Calculate individual component scores and points\n                  var assignmentRaw = parseFloat(marks.assignment) || 0;\n                  var assignmentPoints = assignmentRaw * 25 / 100; // 25% weighting\n\n                  var quizRaw = parseFloat(marks.quiz) || 0;\n                  var quizPoints = quizRaw * 20 / 100; // 20% weighting\n\n                  var testRaw = parseFloat(marks.test) || 0;\n                  var testPoints = testRaw * 25 / 100; // 25% weighting\n\n                  var finalExamRaw = parseFloat(marks.final_exam) || 0;\n                  var finalExamPoints = finalExamRaw * 30 / 100; // 30% weighting\n\n                  // Calculate total points and final percentage\n                  var totalPoints = assignmentPoints + quizPoints + testPoints + finalExamPoints;\n                  var finalMark = Math.round(totalPoints * 100) / 100; // Round to 2 decimal places\n\n                  // Determine letter grade and academic status\n                  var letterGrade = 'F';\n                  var academicStatus = 'Fail';\n                  if (finalMark >= 80) {\n                    letterGrade = 'A';\n                    academicStatus = 'Excellent';\n                  } else if (finalMark >= 70) {\n                    letterGrade = 'B';\n                    academicStatus = 'Good';\n                  } else if (finalMark >= 60) {\n                    letterGrade = 'C';\n                    academicStatus = 'Satisfactory';\n                  } else if (finalMark >= 50) {\n                    letterGrade = 'D';\n                    academicStatus = 'Pass';\n                  }\n\n                  // Update overall statistics\n                  if (finalMark > 0 || assignmentRaw > 0 || quizRaw > 0 || testRaw > 0 || finalExamRaw > 0) {\n                    totalClassPoints += finalMark;\n                    studentsWithMarks++;\n                  }\n                  gradeDistribution[letterGrade]++;\n\n                  // Update component statistics\n                  var components = [{\n                    name: 'assignment',\n                    raw: assignmentRaw,\n                    points: assignmentPoints\n                  }, {\n                    name: 'quiz',\n                    raw: quizRaw,\n                    points: quizPoints\n                  }, {\n                    name: 'test',\n                    raw: testRaw,\n                    points: testPoints\n                  }, {\n                    name: 'final_exam',\n                    raw: finalExamRaw,\n                    points: finalExamPoints\n                  }];\n                  components.forEach(function (comp) {\n                    if (comp.raw > 0) {\n                      var stats = componentStats[comp.name];\n                      stats.totalRaw += comp.raw;\n                      stats.totalPoints += comp.points;\n                      stats.count++;\n                      stats.highest = Math.max(stats.highest, comp.raw);\n                      stats.lowest = Math.min(stats.lowest, comp.raw);\n                    }\n                  });\n\n                  // Create detailed student row\n                  var row = [escapeCSV(student.name || 'Unknown'), escapeCSV(student.matric_number || 'N/A'), escapeCSV(student.email || 'N/A'), assignmentRaw > 0 ? assignmentRaw.toFixed(1) : '', assignmentPoints.toFixed(2), quizRaw > 0 ? quizRaw.toFixed(1) : '', quizPoints.toFixed(2), testRaw > 0 ? testRaw.toFixed(1) : '', testPoints.toFixed(2), finalExamRaw > 0 ? finalExamRaw.toFixed(1) : '', finalExamPoints.toFixed(2), totalPoints.toFixed(2), finalMark.toFixed(2), letterGrade, academicStatus];\n                  csvLines.push(row.join(','));\n                });\n\n                // Add comprehensive statistics and analysis\n                csvLines.push(''); // Empty line\n                csvLines.push('CLASS PERFORMANCE STATISTICS');\n                if (studentsWithMarks > 0) {\n                  classAverage = totalClassPoints / studentsWithMarks;\n                  validFinalMarks = _this8.students.map(function (s) {\n                    var marks = s.marks || {};\n                    var total = (parseFloat(marks.assignment) || 0) * 0.25 + (parseFloat(marks.quiz) || 0) * 0.20 + (parseFloat(marks.test) || 0) * 0.25 + (parseFloat(marks.final_exam) || 0) * 0.30;\n                    return total;\n                  }).filter(function (mark) {\n                    return mark > 0;\n                  });\n                  if (validFinalMarks.length > 0) {\n                    highest = Math.max.apply(Math, _toConsumableArray(validFinalMarks));\n                    lowest = Math.min.apply(Math, _toConsumableArray(validFinalMarks));\n                    median = validFinalMarks.sort(function (a, b) {\n                      return a - b;\n                    })[Math.floor(validFinalMarks.length / 2)];\n                    csvLines.push(\"Total Students,\".concat(_this8.students.length));\n                    csvLines.push(\"Students with Marks,\".concat(studentsWithMarks));\n                    csvLines.push(\"Class Average,\".concat(classAverage.toFixed(2)));\n                    csvLines.push(\"Highest Mark,\".concat(highest.toFixed(2)));\n                    csvLines.push(\"Lowest Mark,\".concat(lowest.toFixed(2)));\n                    csvLines.push(\"Median Mark,\".concat(median.toFixed(2)));\n                  }\n\n                  // Grade distribution analysis\n                  csvLines.push('');\n                  csvLines.push('GRADE DISTRIBUTION ANALYSIS');\n                  csvLines.push('Letter Grade,Student Count,Percentage of Class,Performance Level');\n                  Object.entries(gradeDistribution).forEach(function (_ref) {\n                    var _ref2 = _slicedToArray(_ref, 2),\n                      grade = _ref2[0],\n                      count = _ref2[1];\n                    var percentage = _this8.students.length > 0 ? (count / _this8.students.length * 100).toFixed(1) : '0.0';\n                    var performanceLevel = '';\n                    switch (grade) {\n                      case 'A':\n                        performanceLevel = 'Excellent Performance';\n                        break;\n                      case 'B':\n                        performanceLevel = 'Good Performance';\n                        break;\n                      case 'C':\n                        performanceLevel = 'Satisfactory Performance';\n                        break;\n                      case 'D':\n                        performanceLevel = 'Minimum Pass';\n                        break;\n                      case 'F':\n                        performanceLevel = 'Needs Improvement';\n                        break;\n                    }\n                    csvLines.push(\"\".concat(grade, \",\").concat(count, \",\").concat(percentage, \"%,\").concat(performanceLevel));\n                  });\n\n                  // Component performance analysis\n                  csvLines.push('');\n                  csvLines.push('COMPONENT PERFORMANCE ANALYSIS');\n                  csvLines.push('Assessment Component,Students Assessed,Raw Score Average,Points Average,Highest Score,Lowest Score,Performance Rating');\n                  Object.entries(componentStats).forEach(function (_ref3) {\n                    var _ref4 = _slicedToArray(_ref3, 2),\n                      component = _ref4[0],\n                      stats = _ref4[1];\n                    if (stats.count > 0) {\n                      var displayName = component.replace('_', ' ').replace(/\\b\\w/g, function (l) {\n                        return l.toUpperCase();\n                      });\n                      var rawAverage = (stats.totalRaw / stats.count).toFixed(2);\n                      var pointsAverage = (stats.totalPoints / stats.count).toFixed(2);\n                      var performanceRating = 'Needs Improvement';\n                      var avgRaw = stats.totalRaw / stats.count;\n                      if (avgRaw >= 80) performanceRating = 'Excellent';else if (avgRaw >= 70) performanceRating = 'Good';else if (avgRaw >= 60) performanceRating = 'Satisfactory';else if (avgRaw >= 50) performanceRating = 'Fair';\n                      csvLines.push(\"\".concat(displayName, \",\").concat(stats.count, \",\").concat(rawAverage, \",\").concat(pointsAverage, \",\").concat(stats.highest.toFixed(1), \",\").concat(stats.lowest.toFixed(1), \",\").concat(performanceRating));\n                    }\n                  });\n                }\n\n                // Add export metadata and technical information\n                csvLines.push('');\n                csvLines.push('EXPORT METADATA');\n                csvLines.push(\"Export Format,CSV (Comma Separated Values)\");\n                csvLines.push(\"Character Encoding,UTF-8\");\n                csvLines.push(\"System Version,Course Mark Management System v1.0\");\n                csvLines.push(\"Database Connection,Real-time MySQL Database\");\n                csvLines.push(\"Export Timestamp,\".concat(new Date().toISOString()));\n                csvLines.push(\"Unique Export ID,\".concat(((_this8$course7 = _this8.course) === null || _this8$course7 === void 0 ? void 0 : _this8$course7.code) || 'COURSE', \"_\").concat(Date.now()));\n                csvLines.push(\"Total Data Rows,\".concat(csvLines.length + 2));\n                csvLines.push(\"File Size (estimated),\".concat((csvLines.join('\\n').length * 1.1).toFixed(0), \" bytes\"));\n\n                // Create final CSV content\n                csvContent = csvLines.join('\\n'); // Enhanced logging\n                console.log('✅ Enhanced CSV content generated successfully');\n                console.log('📊 Export Statistics:');\n                console.log(\"  - Total lines: \".concat(csvLines.length));\n                console.log(\"  - Content size: \".concat(csvContent.length, \" characters\"));\n                console.log(\"  - Students processed: \".concat(_this8.students.length));\n                console.log(\"  - Students with marks: \".concat(studentsWithMarks));\n                console.log(\"  - File name: \".concat(filename));\n\n                // Create blob and download\n                blob = new Blob([csvContent], {\n                  type: 'text/csv;charset=utf-8;'\n                });\n                console.log(\"\\uD83D\\uDCC1 Blob created: \".concat(blob.size, \" bytes\"));\n\n                // Create download link and trigger download\n                url = window.URL.createObjectURL(blob);\n                link = document.createElement('a');\n                link.href = url;\n                link.download = filename;\n                link.style.display = 'none';\n                document.body.appendChild(link);\n                console.log('⬇️ Triggering download...');\n                link.click();\n                document.body.removeChild(link);\n\n                // Clean up URL object\n                setTimeout(function () {\n                  window.URL.revokeObjectURL(url);\n                }, 100);\n                console.log('✅ Enhanced CSV export completed successfully');\n\n                // Show success message\n                _this8.$store.dispatch('showToast', {\n                  message: \"Enhanced marks export completed! Downloaded: \".concat(filename),\n                  type: 'success'\n                });\n              } catch (error) {\n                console.error('❌ Enhanced CSV export error:', error);\n                _this8.$store.dispatch('showToast', {\n                  message: 'Error during enhanced export: ' + error.message,\n                  type: 'error'\n                });\n              } finally {\n                _this8.exportingCSV = false;\n              }\n            case 4:\n              return _context7.a(2);\n          }\n        }, _callee7);\n      }))();\n    },\n    showMarkingGuide: function showMarkingGuide() {\n      var modal = new bootstrap.Modal(document.getElementById('markingGuideModal'));\n      modal.show();\n    },\n    viewStudentDetails: function viewStudentDetails(student) {\n      this.$router.push(\"/lecturer/student/\".concat(student.id));\n    },\n    getStudentInitials: function getStudentInitials(name) {\n      return name.split(' ').map(function (n) {\n        return n.charAt(0);\n      }).join('').toUpperCase();\n    },\n    getGradeBadgeClass: function getGradeBadgeClass(grade) {\n      var gradeClasses = {\n        'A': 'bg-success',\n        'B': 'bg-info',\n        'C': 'bg-warning text-dark',\n        'D': 'bg-secondary',\n        'F': 'bg-danger'\n      };\n      return gradeClasses[grade] || 'bg-light text-dark';\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","bootstrap","name","data","courseId","$route","params","course","students","lecturerCourses","isLoading","unsavedChanges","computed","_objectSpread","currentUser","getUser","created","_this","_asyncToGenerator","_regenerator","m","_callee","w","_context","n","console","log","user","userId","isAuthenticated","$store","getters","$nextTick","loadLecturerCourses","loadCourseData","a","methods","_this2","_callee2","lecturerId","response","_t","_context2","p","Error","fetch","concat","method","credentials","headers","v","status","ok","json","error","courses","dispatch","message","type","_this3","_callee3","_t2","_context3","find","c","id","loadStudentsWithMarks","f","_this4","_callee4","_t3","_context4","map","student","student_id","student_name","email","matric_number","marks","assignment","assignment_mark","quiz","quiz_mark","test","test_mark","final_exam","final_exam_mark","final_mark","final_grade","grade","letter_grade","forEach","calculateFinalMark","finalExam","componentMark","finalMark","calculateGrade","calculateAllFinalMarks","_this5","saveStudentMarks","_this6","_callee5","requestData","_t4","_context5","action","course_id","lecturer_id","body","JSON","stringify","saveAllMarks","_this7","_callee6","_iterator","_step","_t5","_t6","_context6","_createForOfIteratorHelper","s","done","value","e","exportMarksCSV","_this8","_callee7","_this8$course","_this8$course2","_this8$course3","_this8$course4","_this8$course5","_this8$course6","_this8$$store$state$u","_this8$$store$state$u2","_this8$course7","timestamp","timeString","filename","escapeCSV","csvLines","totalClassPoints","studentsWithMarks","gradeDistribution","componentStats","classAverage","validFinalMarks","highest","lowest","median","csvContent","blob","url","link","_context7","length","exportingCSV","Date","toISOString","split","replace","code","undefined","stringValue","String","includes","push","academic_year","getFullYear","semester","lecturer_name","state","toLocaleDateString","toLocaleTimeString","A","B","C","D","F","totalRaw","totalPoints","count","assignmentRaw","parseFloat","assignmentPoints","quizRaw","quizPoints","testRaw","testPoints","finalExamRaw","finalExamPoints","Math","round","letterGrade","academicStatus","components","raw","points","comp","stats","max","min","row","toFixed","join","total","filter","mark","apply","_toConsumableArray","sort","b","floor","Object","entries","_ref","_ref2","_slicedToArray","percentage","performanceLevel","_ref3","_ref4","component","displayName","l","toUpperCase","rawAverage","pointsAverage","performanceRating","avgRaw","now","Blob","size","window","URL","createObjectURL","document","createElement","href","download","style","display","appendChild","click","removeChild","setTimeout","revokeObjectURL","showMarkingGuide","modal","Modal","getElementById","show","viewStudentDetails","$router","getStudentInitials","charAt","getGradeBadgeClass","gradeClasses"],"sources":["C:\\Users\\ansmu\\Desktop\\Web\\course-mark-management\\frontend\\src\\views\\lecturer\\MarksManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"marks-management\">\r\n    <!-- Header -->\r\n    <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n      <div>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol class=\"breadcrumb\">\r\n            <li class=\"breadcrumb-item\">\r\n              <router-link to=\"/lecturer/dashboard\">Dashboard</router-link>\r\n            </li>\r\n            <li class=\"breadcrumb-item\">\r\n              <router-link :to=\"`/lecturer/course/${courseId}`\">{{ course?.code }}</router-link>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\" aria-current=\"page\">Marks Management</li>\r\n          </ol>\r\n        </nav>\r\n        <h1 class=\"mb-2\">Marks Management</h1>\r\n        <p class=\"text-muted\">\r\n          {{ course?.code }} - {{ course?.name }} | {{ course?.semester }}\r\n        </p>\r\n      </div>\r\n      <div class=\"btn-group\">\r\n        <button class=\"btn btn-success\" @click=\"saveAllMarks\" :disabled=\"isLoading\">\r\n          <i class=\"fas fa-save me-2\"></i>Save All Changes\r\n        </button>\r\n        <button class=\"btn btn-outline-primary\" @click=\"exportMarksCSV\" :disabled=\"isLoading || !courseId\">\r\n          <i class=\"fas fa-file-export me-2\"></i>Export Marks CSV\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Course Selection -->\r\n    <div class=\"card mb-4\">\r\n      <div class=\"card-body\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-6\">\r\n            <label for=\"courseSelect\" class=\"form-label\">Select Course:</label>\r\n            <select \r\n              id=\"courseSelect\" \r\n              v-model=\"courseId\" \r\n              @change=\"loadCourseData\"\r\n              class=\"form-select\"\r\n            >\r\n              <option value=\"\">Select a course...</option>\r\n              <option \r\n                v-for=\"course in lecturerCourses\" \r\n                :key=\"course.id\" \r\n                :value=\"course.id\"\r\n              >\r\n                {{ course.code }} - {{ course.name }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <label class=\"form-label\">Assessment Breakdown:</label>\r\n            <div class=\"d-flex gap-3\">\r\n              <div class=\"badge bg-primary p-2\">\r\n                <i class=\"fas fa-tasks me-2\"></i>Components: 70%\r\n              </div>\r\n              <div class=\"badge bg-warning p-2\">\r\n                <i class=\"fas fa-graduation-cap me-2\"></i>Final Exam: 30%\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"isLoading\" class=\"text-center my-5\">\r\n      <div class=\"spinner-border text-primary\" role=\"status\">\r\n        <span class=\"visually-hidden\">Loading...</span>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-else-if=\"!courseId\" class=\"text-center my-5\">\r\n      <i class=\"fas fa-book-open text-muted mb-3\" style=\"font-size: 3rem;\"></i>\r\n      <h5 class=\"text-muted\">Select a Course</h5>\r\n      <p class=\"text-muted\">Choose a course from the dropdown above to manage student marks.</p>\r\n    </div>\r\n\r\n    <div v-else-if=\"students.length === 0\" class=\"text-center my-5\">\r\n      <i class=\"fas fa-users text-muted mb-3\" style=\"font-size: 3rem;\"></i>\r\n      <h5 class=\"text-muted\">No Students Enrolled</h5>\r\n      <p class=\"text-muted\">There are no students enrolled in this course yet.</p>\r\n    </div>\r\n\r\n    <!-- Marks Table -->\r\n    <div v-else class=\"card\">\r\n      <div class=\"card-header bg-light\">\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n          <h5 class=\"mb-0\">Student Marks</h5>\r\n          <div class=\"d-flex gap-2\">\r\n            <button class=\"btn btn-sm btn-outline-success\" @click=\"calculateAllFinalMarks\">\r\n              <i class=\"fas fa-calculator me-2\"></i>Calculate Final Marks\r\n            </button>\r\n            <button class=\"btn btn-sm btn-outline-info\" @click=\"showMarkingGuide\">\r\n              <i class=\"fas fa-info-circle me-2\"></i>Marking Guide\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body p-0\">\r\n        <div class=\"table-responsive\">\r\n          <table class=\"table table-hover mb-0\">\r\n            <thead class=\"table-light\">\r\n              <tr>\r\n                <th rowspan=\"2\" class=\"align-middle\">Student</th>\r\n                <th rowspan=\"2\" class=\"align-middle\">Matric No.</th>\r\n                <th colspan=\"3\" class=\"text-center bg-primary text-white\">Components (70%)</th>\r\n                <th rowspan=\"2\" class=\"align-middle bg-warning text-dark\">Final Exam (30%)</th>\r\n                <th rowspan=\"2\" class=\"align-middle bg-success text-white\">Final Mark</th>\r\n                <th rowspan=\"2\" class=\"align-middle\">Grade</th>\r\n                <th rowspan=\"2\" class=\"align-middle\">Actions</th>\r\n              </tr>\r\n              <tr>\r\n                <th class=\"bg-primary text-white\">Assignment</th>\r\n                <th class=\"bg-primary text-white\">Quiz</th>\r\n                <th class=\"bg-primary text-white\">Test</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr v-for=\"student in students\" :key=\"student.id\">\r\n                <td>\r\n                  <div class=\"d-flex align-items-center\">\r\n                    <div class=\"avatar avatar-sm me-3\">\r\n                      {{ getStudentInitials(student.name) }}\r\n                    </div>\r\n                    <div>\r\n                      <strong>{{ student.name }}</strong>\r\n                      <br>\r\n                      <small class=\"text-muted\">{{ student.email }}</small>\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n                <td>{{ student.matric_number || 'N/A' }}</td>\r\n                \r\n                <!-- Component Marks (70%) -->\r\n                <td>\r\n                  <input \r\n                    type=\"number\" \r\n                    class=\"form-control form-control-sm\"\r\n                    v-model.number=\"student.marks.assignment\"\r\n                    @input=\"calculateFinalMark(student)\"\r\n                    min=\"0\" \r\n                    max=\"100\"\r\n                    placeholder=\"0-100\"\r\n                  >\r\n                </td>\r\n                <td>\r\n                  <input \r\n                    type=\"number\" \r\n                    class=\"form-control form-control-sm\"\r\n                    v-model.number=\"student.marks.quiz\"\r\n                    @input=\"calculateFinalMark(student)\"\r\n                    min=\"0\" \r\n                    max=\"100\"\r\n                    placeholder=\"0-100\"\r\n                  >\r\n                </td>\r\n                <td>\r\n                  <input \r\n                    type=\"number\" \r\n                    class=\"form-control form-control-sm\"\r\n                    v-model.number=\"student.marks.test\"\r\n                    @input=\"calculateFinalMark(student)\"\r\n                    min=\"0\" \r\n                    max=\"100\"\r\n                    placeholder=\"0-100\"\r\n                  >\r\n                </td>\r\n                \r\n                <!-- Final Exam (30%) -->\r\n                <td>\r\n                  <input \r\n                    type=\"number\" \r\n                    class=\"form-control form-control-sm\"\r\n                    v-model.number=\"student.marks.final_exam\"\r\n                    @input=\"calculateFinalMark(student)\"\r\n                    min=\"0\" \r\n                    max=\"100\"\r\n                    placeholder=\"0-100\"\r\n                  >\r\n                </td>\r\n                \r\n                <!-- Final Mark -->\r\n                <td>\r\n                  <span class=\"badge bg-success fs-6\">\r\n                    {{ student.marks.final_mark ? student.marks.final_mark.toFixed(1) : 'N/A' }}\r\n                  </span>\r\n                </td>\r\n                \r\n                <!-- Grade -->\r\n                <td>\r\n                  <span class=\"badge\" :class=\"getGradeBadgeClass(student.marks.grade)\">\r\n                    {{ student.marks.grade || 'N/A' }}\r\n                  </span>\r\n                </td>\r\n                \r\n                <!-- Actions -->\r\n                <td>\r\n                  <div class=\"btn-group btn-group-sm\">\r\n                    <button \r\n                      class=\"btn btn-outline-primary\"\r\n                      @click=\"viewStudentDetails(student)\"\r\n                      title=\"View Details\"\r\n                    >\r\n                      <i class=\"fas fa-eye\"></i>\r\n                    </button>\r\n                    <button \r\n                      class=\"btn btn-outline-success\"\r\n                      @click=\"saveStudentMarks(student)\"\r\n                      title=\"Save Marks\"\r\n                    >\r\n                      <i class=\"fas fa-save\"></i>\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Marking Guide Modal -->\r\n    <div class=\"modal fade\" id=\"markingGuideModal\" tabindex=\"-1\" aria-labelledby=\"markingGuideModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"markingGuideModalLabel\">Marking Guide</h5>\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <h6>Assessment Breakdown</h6>\r\n                <ul class=\"list-group list-group-flush\">\r\n                  <li class=\"list-group-item d-flex justify-content-between\">\r\n                    <span>Assignment</span>\r\n                    <span class=\"badge bg-primary\">25%</span>\r\n                  </li>\r\n                  <li class=\"list-group-item d-flex justify-content-between\">\r\n                    <span>Quiz</span>\r\n                    <span class=\"badge bg-primary\">20%</span>\r\n                  </li>\r\n                  <li class=\"list-group-item d-flex justify-content-between\">\r\n                    <span>Test</span>\r\n                    <span class=\"badge bg-primary\">25%</span>\r\n                  </li>\r\n                  <li class=\"list-group-item d-flex justify-content-between\">\r\n                    <span><strong>Components Total</strong></span>\r\n                    <span class=\"badge bg-primary\"><strong>70%</strong></span>\r\n                  </li>\r\n                  <li class=\"list-group-item d-flex justify-content-between\">\r\n                    <span><strong>Final Exam</strong></span>\r\n                    <span class=\"badge bg-warning text-dark\"><strong>30%</strong></span>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <h6>Grading Scale</h6>\r\n                <ul class=\"list-group list-group-flush\">\r\n                  <li class=\"list-group-item d-flex justify-content-between\">\r\n                    <span>A</span>\r\n                    <span>80-100</span>\r\n                  </li>\r\n                  <li class=\"list-group-item d-flex justify-content-between\">\r\n                    <span>B</span>\r\n                    <span>70-79</span>\r\n                  </li>\r\n                  <li class=\"list-group-item d-flex justify-content-between\">\r\n                    <span>C</span>\r\n                    <span>60-69</span>\r\n                  </li>\r\n                  <li class=\"list-group-item d-flex justify-content-between\">\r\n                    <span>D</span>\r\n                    <span>50-59</span>\r\n                  </li>\r\n                  <li class=\"list-group-item d-flex justify-content-between\">\r\n                    <span>F</span>\r\n                    <span>0-49</span>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div class=\"mt-3\">\r\n              <h6>Calculation Formula</h6>\r\n              <div class=\"alert alert-info\">\r\n                <strong>Final Grade = (Assignment × 25%) + (Quiz × 20%) + (Test × 25%) + (Final Exam × 30%)</strong>\r\n                <br><small class=\"text-muted\">Components (Assignment + Quiz + Test) contribute 70% total, Final Exam contributes 30%</small>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex';\r\nimport * as bootstrap from 'bootstrap';\r\n\r\nexport default {\r\n  name: 'MarksManagement',\r\n  data() {\r\n    return {\r\n      courseId: this.$route.params.courseId || '',\r\n      course: null,\r\n      students: [],\r\n      lecturerCourses: [],\r\n      isLoading: false,\r\n      unsavedChanges: false\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters('auth', ['getUser', 'userId']),\r\n    currentUser() {\r\n      return this.getUser;\r\n    }\r\n  },\r\n  async created() {\r\n    console.log('MarksManagement component created');\r\n    console.log('Initial auth state:', {\r\n      user: this.getUser,\r\n      userId: this.userId,\r\n      isAuthenticated: this.$store.getters['auth/isAuthenticated']\r\n    });\r\n    \r\n    // Wait a bit for auth to be initialized if needed\r\n    await this.$nextTick();\r\n    \r\n    await this.loadLecturerCourses();\r\n    if (this.courseId) {\r\n      await this.loadCourseData();\r\n    }\r\n  },\r\n  methods: {\r\n    async loadLecturerCourses() {\r\n      try {\r\n        console.log('Loading lecturer courses...');\r\n        console.log('User ID:', this.userId);\r\n        console.log('Current user:', this.currentUser);\r\n        \r\n        if (!this.userId) {\r\n          throw new Error('User not authenticated');\r\n        }\r\n        \r\n        const lecturerId = this.userId;\r\n        \r\n        const response = await fetch(`http://localhost/marks-api.php?action=lecturer_courses&lecturer_id=${lecturerId}`, {\r\n          method: 'GET',\r\n          credentials: 'include',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n\r\n        console.log('API Response status:', response.status);\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log('API Response data:', data);\r\n        \r\n        if (data.error) {\r\n          throw new Error(data.error);\r\n        }\r\n\r\n        this.lecturerCourses = data.courses || [];\r\n        console.log('Loaded lecturer courses:', this.lecturerCourses);\r\n\r\n      } catch (error) {\r\n        console.error('Error loading lecturer courses:', error);\r\n        this.$store.dispatch('showToast', {\r\n          message: 'Error loading courses: ' + error.message,\r\n          type: 'error'\r\n        });\r\n        this.lecturerCourses = [];\r\n      }\r\n    },\r\n\r\n    async loadCourseData() {\r\n      if (!this.courseId) return;\r\n      \r\n      this.isLoading = true;\r\n      try {\r\n        // Find the selected course\r\n        this.course = this.lecturerCourses.find(c => c.id == this.courseId);\r\n        \r\n        // Load students for this course with their marks\r\n        await this.loadStudentsWithMarks();\r\n        \r\n      } catch (error) {\r\n        console.error('Error loading course data:', error);\r\n        this.$store.dispatch('showToast', {\r\n          message: 'Error loading course data',\r\n          type: 'error'\r\n        });\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n\r\n    async loadStudentsWithMarks() {\r\n      try {\r\n        // Make API call to get students with marks for this course\r\n        const response = await fetch(`http://localhost/marks-api.php?action=course_students_marks&course_id=${this.courseId}`, {\r\n          method: 'GET',\r\n          credentials: 'include',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        \r\n        if (data.error) {\r\n          throw new Error(data.error);\r\n        }\r\n\r\n        // Map the API response to the expected format\r\n        this.students = data.students.map(student => ({\r\n          id: student.student_id,\r\n          name: student.student_name,\r\n          email: student.email || 'N/A',\r\n          matric_number: student.matric_number,\r\n          marks: {\r\n            assignment: student.assignment_mark || 0,\r\n            quiz: student.quiz_mark || 0,\r\n            test: student.test_mark || 0,\r\n            final_exam: student.final_exam_mark || 0,\r\n            final_mark: student.final_grade || 0,\r\n            grade: student.letter_grade || 'F'\r\n          }\r\n        }));\r\n\r\n        // Calculate final marks for all students to ensure they're up to date\r\n        this.students.forEach(student => {\r\n          this.calculateFinalMark(student);\r\n        });\r\n\r\n        console.log('Loaded students with marks:', this.students);\r\n\r\n      } catch (error) {\r\n        console.error('Error loading students with marks:', error);\r\n        this.$store.dispatch('showToast', {\r\n          message: 'Error loading student marks: ' + error.message,\r\n          type: 'error'\r\n        });\r\n        \r\n        // Fallback to empty array\r\n        this.students = [];\r\n      }\r\n    },\r\n\r\n    calculateFinalMark(student) {\r\n      const marks = student.marks;\r\n      \r\n      // Check if all marks are entered\r\n      const assignment = marks.assignment || 0;\r\n      const quiz = marks.quiz || 0;\r\n      const test = marks.test || 0;\r\n      const finalExam = marks.final_exam || 0;\r\n      \r\n      // Calculate final mark: Components (70%) + Final Exam (30%)\r\n      // Components breakdown: Assignment (25%) + Quiz (20%) + Test (25%)\r\n      const componentMark = (assignment * 0.25) + (quiz * 0.20) + (test * 0.25);\r\n      const finalMark = componentMark + (finalExam * 0.30);\r\n      \r\n      marks.final_mark = finalMark;\r\n      marks.grade = this.calculateGrade(finalMark);\r\n      \r\n      this.unsavedChanges = true;\r\n    },\r\n\r\n    calculateGrade(finalMark) {\r\n      if (finalMark >= 80) return 'A';\r\n      if (finalMark >= 70) return 'B';\r\n      if (finalMark >= 60) return 'C';\r\n      if (finalMark >= 50) return 'D';\r\n      return 'F';\r\n    },\r\n\r\n    calculateAllFinalMarks() {\r\n      this.students.forEach(student => {\r\n        this.calculateFinalMark(student);\r\n      });\r\n      \r\n      this.$store.dispatch('showToast', {\r\n        message: 'Final marks calculated for all students',\r\n        type: 'success'\r\n      });\r\n    },\r\n\r\n    async saveStudentMarks(student) {\r\n      try {\r\n        if (!this.userId) {\r\n          throw new Error('User not authenticated');\r\n        }\r\n        \r\n        const lecturerId = this.userId;\r\n        \r\n        const requestData = {\r\n          action: 'save_marks',\r\n          student_id: student.id,\r\n          course_id: this.courseId,\r\n          lecturer_id: lecturerId,\r\n          marks: {\r\n            assignment: student.marks.assignment || 0,\r\n            quiz: student.marks.quiz || 0,\r\n            test: student.marks.test || 0,\r\n            final_exam: student.marks.final_exam || 0\r\n          }\r\n        };\r\n\r\n        const response = await fetch('http://localhost/marks-api.php', {\r\n          method: 'POST',\r\n          credentials: 'include',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(requestData)\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        \r\n        if (data.error) {\r\n          throw new Error(data.error);\r\n        }\r\n\r\n        console.log('Marks saved successfully for student:', student.name);\r\n        \r\n        this.$store.dispatch('showToast', {\r\n          message: `Marks saved for ${student.name}`,\r\n          type: 'success'\r\n        });\r\n\r\n      } catch (error) {\r\n        console.error('Error saving student marks:', error);\r\n        this.$store.dispatch('showToast', {\r\n          message: `Error saving marks for ${student.name}: ${error.message}`,\r\n          type: 'error'\r\n        });\r\n        throw error; // Re-throw so saveAllMarks can handle it\r\n      }\r\n    },\r\n\r\n    async saveAllMarks() {\r\n      if (!this.unsavedChanges) {\r\n        this.$store.dispatch('showToast', {\r\n          message: 'No changes to save',\r\n          type: 'info'\r\n        });\r\n        return;\r\n      }\r\n\r\n      this.isLoading = true;\r\n      try {\r\n        // Save all student marks to API\r\n        for (const student of this.students) {\r\n          await this.saveStudentMarks(student);\r\n        }\r\n        \r\n        this.unsavedChanges = false;\r\n        this.$store.dispatch('showToast', {\r\n          message: 'All marks saved successfully',\r\n          type: 'success'\r\n        });\r\n      } catch (error) {\r\n        console.error('Error saving all marks:', error);\r\n        this.$store.dispatch('showToast', {\r\n          message: 'Error saving marks',\r\n          type: 'error'\r\n        });\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n\r\n    async exportMarksCSV() {\r\n      console.log('Starting enhanced CSV export with real database integration...');\r\n      \r\n      // Enhanced validation checks\r\n      if (!this.courseId) {\r\n        this.$store.dispatch('showToast', {\r\n          message: 'Please select a course first',\r\n          type: 'warning'\r\n        });\r\n        return;\r\n      }\r\n\r\n      if (!this.userId) {\r\n        this.$store.dispatch('showToast', {\r\n          message: 'User authentication required',\r\n          type: 'error'\r\n        });\r\n        return;\r\n      }\r\n\r\n      if (!this.students || this.students.length === 0) {\r\n        this.$store.dispatch('showToast', {\r\n          message: 'No student data available to export',\r\n          type: 'warning'\r\n        });\r\n        return;\r\n      }\r\n\r\n      this.exportingCSV = true;\r\n\r\n      try {\r\n        console.log('Creating enhanced CSV export with comprehensive data...');\r\n        \r\n        // Generate filename with enhanced naming\r\n        const timestamp = new Date().toISOString().split('T')[0];\r\n        const timeString = new Date().toISOString().split('T')[1].split('.')[0].replace(/:/g, '-');\r\n        const filename = `${this.course?.code || 'Course'}_Complete_Marks_Export_${timestamp}_${timeString}.csv`;\r\n        \r\n        // Enhanced helper function to escape CSV values\r\n        const escapeCSV = (value) => {\r\n          if (value === null || value === undefined) return '';\r\n          const stringValue = String(value);\r\n          if (stringValue.includes(',') || stringValue.includes('\"') || stringValue.includes('\\n') || stringValue.includes('\\r')) {\r\n            return '\"' + stringValue.replace(/\"/g, '\"\"') + '\"';\r\n          }\r\n          return stringValue;\r\n        };\r\n\r\n        // Build comprehensive CSV content\r\n        const csvLines = [];\r\n        \r\n        // Enhanced header section\r\n        csvLines.push('COURSE MARK MANAGEMENT SYSTEM - COMPREHENSIVE EXPORT');\r\n        csvLines.push(''); // Empty line\r\n        \r\n        // Detailed course information\r\n        csvLines.push('COURSE INFORMATION');\r\n        csvLines.push(`Course Code,${escapeCSV(this.course?.code || 'N/A')}`);\r\n        csvLines.push(`Course Name,${escapeCSV(this.course?.name || 'N/A')}`);\r\n        csvLines.push(`Academic Year,${escapeCSV(this.course?.academic_year || new Date().getFullYear())}`);\r\n        csvLines.push(`Semester,${escapeCSV(this.course?.semester || 'Current')}`);\r\n        csvLines.push(`Lecturer,${escapeCSV(this.course?.lecturer_name || this.$store.state.user?.name || 'Unknown')}`);\r\n        csvLines.push(`Export Date,${new Date().toLocaleDateString()}`);\r\n        csvLines.push(`Export Time,${new Date().toLocaleTimeString()}`);\r\n        csvLines.push(`Total Students Enrolled,${this.students.length}`);\r\n        csvLines.push(`Export Generated By,${escapeCSV(this.$store.state.user?.name || 'System')}`);\r\n        csvLines.push(''); // Empty line\r\n        \r\n        // Assessment structure and weightings\r\n        csvLines.push('ASSESSMENT STRUCTURE');\r\n        csvLines.push('Component,Weight (%), Max Raw Score,Points Contribution');\r\n        csvLines.push('Assignment,25%,100,25 points');\r\n        csvLines.push('Quiz,20%,100,20 points');\r\n        csvLines.push('Test,25%,100,25 points');\r\n        csvLines.push('Final Exam,30%,100,30 points');\r\n        csvLines.push('TOTAL,100%,400,100 points');\r\n        csvLines.push(''); // Empty line\r\n        \r\n        // Grading scale information\r\n        csvLines.push('GRADING SCALE');\r\n        csvLines.push('Letter Grade,Points Range,Description');\r\n        csvLines.push('A,80.0 - 100.0,Excellent');\r\n        csvLines.push('B,70.0 - 79.9,Good');\r\n        csvLines.push('C,60.0 - 69.9,Satisfactory');\r\n        csvLines.push('D,50.0 - 59.9,Pass');\r\n        csvLines.push('F,0.0 - 49.9,Fail');\r\n        csvLines.push(''); // Empty line\r\n        \r\n        // Detailed student marks table with calculations\r\n        csvLines.push('DETAILED STUDENT MARKS');\r\n        csvLines.push('Student Name,Matric Number,Email,Assignment Raw,Assignment Points,Quiz Raw,Quiz Points,Test Raw,Test Points,Final Exam Raw,Final Exam Points,Total Points,Final Mark (%),Letter Grade,Academic Status');\r\n        \r\n        // Process each student with enhanced calculations and statistics tracking\r\n        let totalClassPoints = 0;\r\n        let studentsWithMarks = 0;\r\n        const gradeDistribution = { A: 0, B: 0, C: 0, D: 0, F: 0 };\r\n        const componentStats = {\r\n          assignment: { totalRaw: 0, totalPoints: 0, count: 0, highest: 0, lowest: 100 },\r\n          quiz: { totalRaw: 0, totalPoints: 0, count: 0, highest: 0, lowest: 100 },\r\n          test: { totalRaw: 0, totalPoints: 0, count: 0, highest: 0, lowest: 100 },\r\n          final_exam: { totalRaw: 0, totalPoints: 0, count: 0, highest: 0, lowest: 100 }\r\n        };\r\n\r\n        this.students.forEach(student => {\r\n          const marks = student.marks || {};\r\n          \r\n          // Calculate individual component scores and points\r\n          const assignmentRaw = parseFloat(marks.assignment) || 0;\r\n          const assignmentPoints = (assignmentRaw * 25) / 100; // 25% weighting\r\n          \r\n          const quizRaw = parseFloat(marks.quiz) || 0;\r\n          const quizPoints = (quizRaw * 20) / 100; // 20% weighting\r\n          \r\n          const testRaw = parseFloat(marks.test) || 0;\r\n          const testPoints = (testRaw * 25) / 100; // 25% weighting\r\n          \r\n          const finalExamRaw = parseFloat(marks.final_exam) || 0;\r\n          const finalExamPoints = (finalExamRaw * 30) / 100; // 30% weighting\r\n          \r\n          // Calculate total points and final percentage\r\n          const totalPoints = assignmentPoints + quizPoints + testPoints + finalExamPoints;\r\n          const finalMark = Math.round(totalPoints * 100) / 100; // Round to 2 decimal places\r\n          \r\n          // Determine letter grade and academic status\r\n          let letterGrade = 'F';\r\n          let academicStatus = 'Fail';\r\n          \r\n          if (finalMark >= 80) {\r\n            letterGrade = 'A';\r\n            academicStatus = 'Excellent';\r\n          } else if (finalMark >= 70) {\r\n            letterGrade = 'B';\r\n            academicStatus = 'Good';\r\n          } else if (finalMark >= 60) {\r\n            letterGrade = 'C';\r\n            academicStatus = 'Satisfactory';\r\n          } else if (finalMark >= 50) {\r\n            letterGrade = 'D';\r\n            academicStatus = 'Pass';\r\n          }\r\n          \r\n          // Update overall statistics\r\n          if (finalMark > 0 || assignmentRaw > 0 || quizRaw > 0 || testRaw > 0 || finalExamRaw > 0) {\r\n            totalClassPoints += finalMark;\r\n            studentsWithMarks++;\r\n          }\r\n          \r\n          gradeDistribution[letterGrade]++;\r\n          \r\n          // Update component statistics\r\n          const components = [\r\n            { name: 'assignment', raw: assignmentRaw, points: assignmentPoints },\r\n            { name: 'quiz', raw: quizRaw, points: quizPoints },\r\n            { name: 'test', raw: testRaw, points: testPoints },\r\n            { name: 'final_exam', raw: finalExamRaw, points: finalExamPoints }\r\n          ];\r\n          \r\n          components.forEach(comp => {\r\n            if (comp.raw > 0) {\r\n              const stats = componentStats[comp.name];\r\n              stats.totalRaw += comp.raw;\r\n              stats.totalPoints += comp.points;\r\n              stats.count++;\r\n              stats.highest = Math.max(stats.highest, comp.raw);\r\n              stats.lowest = Math.min(stats.lowest, comp.raw);\r\n            }\r\n          });\r\n          \r\n          // Create detailed student row\r\n          const row = [\r\n            escapeCSV(student.name || 'Unknown'),\r\n            escapeCSV(student.matric_number || 'N/A'),\r\n            escapeCSV(student.email || 'N/A'),\r\n            assignmentRaw > 0 ? assignmentRaw.toFixed(1) : '',\r\n            assignmentPoints.toFixed(2),\r\n            quizRaw > 0 ? quizRaw.toFixed(1) : '',\r\n            quizPoints.toFixed(2),\r\n            testRaw > 0 ? testRaw.toFixed(1) : '',\r\n            testPoints.toFixed(2),\r\n            finalExamRaw > 0 ? finalExamRaw.toFixed(1) : '',\r\n            finalExamPoints.toFixed(2),\r\n            totalPoints.toFixed(2),\r\n            finalMark.toFixed(2),\r\n            letterGrade,\r\n            academicStatus\r\n          ];\r\n          \r\n          csvLines.push(row.join(','));\r\n        });\r\n\r\n        // Add comprehensive statistics and analysis\r\n        csvLines.push(''); // Empty line\r\n        csvLines.push('CLASS PERFORMANCE STATISTICS');\r\n        \r\n        if (studentsWithMarks > 0) {\r\n          const classAverage = totalClassPoints / studentsWithMarks;\r\n          const validFinalMarks = this.students\r\n            .map(s => {\r\n              const marks = s.marks || {};\r\n              const total = ((parseFloat(marks.assignment) || 0) * 0.25) + \r\n                           ((parseFloat(marks.quiz) || 0) * 0.20) + \r\n                           ((parseFloat(marks.test) || 0) * 0.25) + \r\n                           ((parseFloat(marks.final_exam) || 0) * 0.30);\r\n              return total;\r\n            })\r\n            .filter(mark => mark > 0);\r\n          \r\n          if (validFinalMarks.length > 0) {\r\n            const highest = Math.max(...validFinalMarks);\r\n            const lowest = Math.min(...validFinalMarks);\r\n            const median = validFinalMarks.sort((a, b) => a - b)[Math.floor(validFinalMarks.length / 2)];\r\n            \r\n            csvLines.push(`Total Students,${this.students.length}`);\r\n            csvLines.push(`Students with Marks,${studentsWithMarks}`);\r\n            csvLines.push(`Class Average,${classAverage.toFixed(2)}`);\r\n            csvLines.push(`Highest Mark,${highest.toFixed(2)}`);\r\n            csvLines.push(`Lowest Mark,${lowest.toFixed(2)}`);\r\n            csvLines.push(`Median Mark,${median.toFixed(2)}`);\r\n          }\r\n          \r\n          // Grade distribution analysis\r\n          csvLines.push(''); \r\n          csvLines.push('GRADE DISTRIBUTION ANALYSIS');\r\n          csvLines.push('Letter Grade,Student Count,Percentage of Class,Performance Level');\r\n          \r\n          Object.entries(gradeDistribution).forEach(([grade, count]) => {\r\n            const percentage = this.students.length > 0 ? (count / this.students.length * 100).toFixed(1) : '0.0';\r\n            let performanceLevel = '';\r\n            \r\n            switch(grade) {\r\n              case 'A': performanceLevel = 'Excellent Performance'; break;\r\n              case 'B': performanceLevel = 'Good Performance'; break;\r\n              case 'C': performanceLevel = 'Satisfactory Performance'; break;\r\n              case 'D': performanceLevel = 'Minimum Pass'; break;\r\n              case 'F': performanceLevel = 'Needs Improvement'; break;\r\n            }\r\n            \r\n            csvLines.push(`${grade},${count},${percentage}%,${performanceLevel}`);\r\n          });\r\n          \r\n          // Component performance analysis\r\n          csvLines.push('');\r\n          csvLines.push('COMPONENT PERFORMANCE ANALYSIS');\r\n          csvLines.push('Assessment Component,Students Assessed,Raw Score Average,Points Average,Highest Score,Lowest Score,Performance Rating');\r\n          \r\n          Object.entries(componentStats).forEach(([component, stats]) => {\r\n            if (stats.count > 0) {\r\n              const displayName = component.replace('_', ' ').replace(/\\b\\w/g, l => l.toUpperCase());\r\n              const rawAverage = (stats.totalRaw / stats.count).toFixed(2);\r\n              const pointsAverage = (stats.totalPoints / stats.count).toFixed(2);\r\n              \r\n              let performanceRating = 'Needs Improvement';\r\n              const avgRaw = stats.totalRaw / stats.count;\r\n              if (avgRaw >= 80) performanceRating = 'Excellent';\r\n              else if (avgRaw >= 70) performanceRating = 'Good';\r\n              else if (avgRaw >= 60) performanceRating = 'Satisfactory';\r\n              else if (avgRaw >= 50) performanceRating = 'Fair';\r\n              \r\n              csvLines.push(`${displayName},${stats.count},${rawAverage},${pointsAverage},${stats.highest.toFixed(1)},${stats.lowest.toFixed(1)},${performanceRating}`);\r\n            }\r\n          });\r\n        }\r\n\r\n        // Add export metadata and technical information\r\n        csvLines.push('');\r\n        csvLines.push('EXPORT METADATA');\r\n        csvLines.push(`Export Format,CSV (Comma Separated Values)`);\r\n        csvLines.push(`Character Encoding,UTF-8`);\r\n        csvLines.push(`System Version,Course Mark Management System v1.0`);\r\n        csvLines.push(`Database Connection,Real-time MySQL Database`);\r\n        csvLines.push(`Export Timestamp,${new Date().toISOString()}`);\r\n        csvLines.push(`Unique Export ID,${this.course?.code || 'COURSE'}_${Date.now()}`);\r\n        csvLines.push(`Total Data Rows,${csvLines.length + 2}`);\r\n        csvLines.push(`File Size (estimated),${(csvLines.join('\\n').length * 1.1).toFixed(0)} bytes`);\r\n\r\n        // Create final CSV content\r\n        const csvContent = csvLines.join('\\n');\r\n        \r\n        // Enhanced logging\r\n        console.log('✅ Enhanced CSV content generated successfully');\r\n        console.log('📊 Export Statistics:');\r\n        console.log(`  - Total lines: ${csvLines.length}`);\r\n        console.log(`  - Content size: ${csvContent.length} characters`);\r\n        console.log(`  - Students processed: ${this.students.length}`);\r\n        console.log(`  - Students with marks: ${studentsWithMarks}`);\r\n        console.log(`  - File name: ${filename}`);\r\n        \r\n        // Create blob and download\r\n        const blob = new Blob([csvContent], { \r\n          type: 'text/csv;charset=utf-8;' \r\n        });\r\n        \r\n        console.log(`📁 Blob created: ${blob.size} bytes`);\r\n        \r\n        // Create download link and trigger download\r\n        const url = window.URL.createObjectURL(blob);\r\n        const link = document.createElement('a');\r\n        link.href = url;\r\n        link.download = filename;\r\n        link.style.display = 'none';\r\n        \r\n        document.body.appendChild(link);\r\n        console.log('⬇️ Triggering download...');\r\n        link.click();\r\n        document.body.removeChild(link);\r\n        \r\n        // Clean up URL object\r\n        setTimeout(() => {\r\n          window.URL.revokeObjectURL(url);\r\n        }, 100);\r\n        \r\n        console.log('✅ Enhanced CSV export completed successfully');\r\n        \r\n        // Show success message\r\n        this.$store.dispatch('showToast', {\r\n          message: `Enhanced marks export completed! Downloaded: ${filename}`,\r\n          type: 'success'\r\n        });\r\n        \r\n      } catch (error) {\r\n        console.error('❌ Enhanced CSV export error:', error);\r\n        this.$store.dispatch('showToast', {\r\n          message: 'Error during enhanced export: ' + error.message,\r\n          type: 'error'\r\n        });\r\n      } finally {\r\n        this.exportingCSV = false;\r\n      }\r\n    },\r\n\r\n    showMarkingGuide() {\r\n      const modal = new bootstrap.Modal(document.getElementById('markingGuideModal'));\r\n      modal.show();\r\n    },\r\n\r\n    viewStudentDetails(student) {\r\n      this.$router.push(`/lecturer/student/${student.id}`);\r\n    },\r\n\r\n    getStudentInitials(name) {\r\n      return name.split(' ').map(n => n.charAt(0)).join('').toUpperCase();\r\n    },\r\n\r\n    getGradeBadgeClass(grade) {\r\n      const gradeClasses = {\r\n        'A': 'bg-success',\r\n        'B': 'bg-info',\r\n        'C': 'bg-warning text-dark',\r\n        'D': 'bg-secondary',\r\n        'F': 'bg-danger'\r\n      };\r\n      return gradeClasses[grade] || 'bg-light text-dark';\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.marks-management h1 {\r\n  color: #2c3e50;\r\n  font-weight: 700;\r\n}\r\n\r\n.avatar {\r\n  width: 40px;\r\n  height: 40px;\r\n  background: linear-gradient(45deg, #007bff, #0056b3);\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: white;\r\n  font-weight: bold;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.table input.form-control-sm {\r\n  width: 80px;\r\n  text-align: center;\r\n}\r\n\r\n.table th {\r\n  font-weight: 600;\r\n  border-top: none;\r\n}\r\n\r\n.table td {\r\n  vertical-align: middle;\r\n}\r\n\r\n.card {\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  border: none;\r\n  border-radius: 10px;\r\n}\r\n\r\n.breadcrumb-item a {\r\n  text-decoration: none;\r\n  color: #007bff;\r\n}\r\n\r\n.breadcrumb-item a:hover {\r\n  color: #0056b3;\r\n}\r\n\r\n.badge.fs-6 {\r\n  font-size: 0.9rem !important;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}