{"ast":null,"code":"import _regenerator from \"C:/Users/ansmu/Desktop/Web/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _asyncToGenerator from \"C:/Users/ansmu/Desktop/Web/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"C:/Users/ansmu/Desktop/Web/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { mapGetters } from 'vuex';\nimport bootstrap from 'bootstrap';\nexport default {\n  name: 'Navbar',\n  data: function data() {\n    return {\n      courses: [],\n      newCourse: {\n        code: '',\n        name: '',\n        semester: '',\n        academic_year: ''\n      }\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters('auth', ['getUser', 'userRole'])), {}, {\n    userName: function userName() {\n      return this.getUser ? this.getUser.name : '';\n    }\n  }),\n  created: function created() {\n    this.loadCourses();\n  },\n  methods: {\n    loadCourses: function loadCourses() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n        var _t;\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.n) {\n            case 0:\n              _context.p = 0;\n              if (!(_this.userRole === 'lecturer')) {\n                _context.n = 2;\n                break;\n              }\n              _context.n = 1;\n              return _this.$store.dispatch('courses/fetchCourses', {\n                lecturerId: _this.getUser.id\n              });\n            case 1:\n              _this.courses = _context.v;\n              _context.n = 4;\n              break;\n            case 2:\n              if (!(_this.userRole === 'student')) {\n                _context.n = 4;\n                break;\n              }\n              _context.n = 3;\n              return _this.$store.dispatch('courses/fetchCourses');\n            case 3:\n              _this.courses = _context.v;\n            case 4:\n              _context.n = 6;\n              break;\n            case 5:\n              _context.p = 5;\n              _t = _context.v;\n              console.error('Error loading courses:', _t);\n            case 6:\n              return _context.a(2);\n          }\n        }, _callee, null, [[0, 5]]);\n      }))();\n    },\n    logout: function logout() {\n      this.$store.dispatch('auth/logout');\n      this.$router.push('/login');\n    },\n    openCourseModal: function openCourseModal() {\n      // Reset the form\n      this.newCourse = {\n        code: '',\n        name: '',\n        semester: '',\n        academic_year: ''\n      };\n\n      // Open the modal using Bootstrap's JavaScript\n      var modal = new bootstrap.Modal(document.getElementById('addCourseModal'));\n      modal.show();\n    },\n    addCourse: function addCourse() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n        var courseData, modalElement, modal, _t2;\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              _context2.p = 0;\n              // Add lecturer_id to the course data\n              courseData = _objectSpread(_objectSpread({}, _this2.newCourse), {}, {\n                lecturer_id: _this2.getUser.id\n              });\n              _context2.n = 1;\n              return _this2.$store.dispatch('courses/createCourse', courseData);\n            case 1:\n              // Close the modal using Bootstrap's JavaScript\n              modalElement = document.getElementById('addCourseModal');\n              modal = bootstrap.Modal.getInstance(modalElement);\n              modal.hide();\n\n              // Reload courses\n              _this2.loadCourses();\n              _context2.n = 3;\n              break;\n            case 2:\n              _context2.p = 2;\n              _t2 = _context2.v;\n              console.error('Error adding course:', _t2);\n            case 3:\n              return _context2.a(2);\n          }\n        }, _callee2, null, [[0, 2]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","bootstrap","name","data","courses","newCourse","code","semester","academic_year","computed","_objectSpread","userName","getUser","created","loadCourses","methods","_this","_asyncToGenerator","_regenerator","m","_callee","_t","w","_context","n","p","userRole","$store","dispatch","lecturerId","id","v","console","error","a","logout","$router","push","openCourseModal","modal","Modal","document","getElementById","show","addCourse","_this2","_callee2","courseData","modalElement","_t2","_context2","lecturer_id","getInstance","hide"],"sources":["C:\\Users\\ansmu\\Desktop\\Web\\course-mark-management\\frontend\\src\\components\\layout\\Navbar.vue"],"sourcesContent":["<template>\r\n  <nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n    <div class=\"container-fluid\">\r\n      <router-link class=\"navbar-brand\" to=\"/\">Course Mark Management</router-link>\r\n      \r\n      <button \r\n        class=\"navbar-toggler\" \r\n        type=\"button\" \r\n        data-bs-toggle=\"collapse\" \r\n        data-bs-target=\"#navbarContent\" \r\n        aria-controls=\"navbarContent\" \r\n        aria-expanded=\"false\" \r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      \r\n      <div class=\"collapse navbar-collapse\" id=\"navbarContent\">\r\n        <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <!-- Lecturer navigation -->\r\n          <template v-if=\"userRole === 'lecturer'\">\r\n            <li class=\"nav-item\">\r\n              <router-link class=\"nav-link\" to=\"/lecturer/dashboard\">Dashboard</router-link>\r\n            </li>\r\n            <li class=\"nav-item dropdown\">\r\n              <a \r\n                class=\"nav-link dropdown-toggle\" \r\n                href=\"#\" \r\n                id=\"coursesDropdown\" \r\n                role=\"button\" \r\n                data-bs-toggle=\"dropdown\" \r\n                aria-expanded=\"false\"\r\n              >\r\n                Courses\r\n              </a>\r\n              <ul class=\"dropdown-menu\" aria-labelledby=\"coursesDropdown\">\r\n                <li v-for=\"course in courses\" :key=\"course.id\">\r\n                  <router-link class=\"dropdown-item\" :to=\"`/lecturer/course/${course.id}`\">\r\n                    {{ course.code }} - {{ course.name }}\r\n                  </router-link>\r\n                </li>\r\n                <li><hr class=\"dropdown-divider\"></li>\r\n                <li>\r\n                  <a class=\"dropdown-item\" href=\"#\" @click.prevent=\"openCourseModal\">\r\n                    <i class=\"fas fa-plus-circle\"></i> Add New Course\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <router-link class=\"nav-link\" to=\"/lecturer/students\">Students</router-link>\r\n            </li>\r\n          </template>\r\n          \r\n          <!-- Student navigation -->\r\n          <template v-else-if=\"userRole === 'student'\">\r\n            <li class=\"nav-item\">\r\n              <router-link class=\"nav-link\" to=\"/student/dashboard\">Dashboard</router-link>\r\n            </li>\r\n            <li class=\"nav-item dropdown\">\r\n              <a \r\n                class=\"nav-link dropdown-toggle\" \r\n                href=\"#\" \r\n                id=\"studentCoursesDropdown\" \r\n                role=\"button\" \r\n                data-bs-toggle=\"dropdown\" \r\n                aria-expanded=\"false\"\r\n              >\r\n                My Courses\r\n              </a>\r\n              <ul class=\"dropdown-menu\" aria-labelledby=\"studentCoursesDropdown\">\r\n                <li v-for=\"course in courses\" :key=\"course.id\">\r\n                  <router-link class=\"dropdown-item\" :to=\"`/student/course/${course.id}`\">\r\n                    {{ course.code }} - {{ course.name }}\r\n                  </router-link>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n          </template>\r\n          \r\n          <!-- Advisor navigation -->\r\n          <template v-else-if=\"userRole === 'advisor'\">\r\n            <li class=\"nav-item\">\r\n              <router-link class=\"nav-link\" to=\"/advisor/dashboard\">Dashboard</router-link>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <router-link class=\"nav-link\" to=\"/advisor/advisees\">My Advisees</router-link>\r\n            </li>\r\n          </template>\r\n        </ul>\r\n        \r\n        <div class=\"d-flex align-items-center\">\r\n          <!-- Notifications Dropdown -->\r\n          <notifications-dropdown />\r\n          \r\n          <!-- User info and logout -->\r\n          <div class=\"dropdown ms-3\">\r\n            <a \r\n              class=\"dropdown-toggle text-decoration-none text-white d-flex align-items-center\" \r\n              href=\"#\" \r\n              id=\"userDropdown\" \r\n              role=\"button\" \r\n              data-bs-toggle=\"dropdown\" \r\n              aria-expanded=\"false\"\r\n            >\r\n              <i class=\"bi bi-person-circle me-2\"></i>\r\n              <span>{{ userName }}</span>\r\n            </a>\r\n            <ul class=\"dropdown-menu dropdown-menu-end\" aria-labelledby=\"userDropdown\">\r\n              <li>\r\n                <router-link class=\"dropdown-item\" to=\"/profile\">\r\n                  <i class=\"bi bi-person me-2\"></i> Profile\r\n                </router-link>\r\n              </li>\r\n              <li>\r\n                <router-link class=\"dropdown-item\" to=\"/settings\">\r\n                  <i class=\"bi bi-gear me-2\"></i> Settings\r\n                </router-link>\r\n              </li>\r\n              <li><hr class=\"dropdown-divider\"></li>\r\n              <li>\r\n                <a class=\"dropdown-item\" href=\"#\" @click.prevent=\"logout\">\r\n                  <i class=\"bi bi-box-arrow-right me-2\"></i> Logout\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Add Course Modal -->\r\n    <div class=\"modal fade\" id=\"addCourseModal\" tabindex=\"-1\" aria-labelledby=\"addCourseModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"addCourseModalLabel\">Add New Course</h5>\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <form @submit.prevent=\"addCourse\">\r\n              <div class=\"mb-3\">\r\n                <label for=\"courseCode\" class=\"form-label\">Course Code</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"courseCode\" v-model=\"newCourse.code\" required>\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label for=\"courseName\" class=\"form-label\">Course Name</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"courseName\" v-model=\"newCourse.name\" required>\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label for=\"semester\" class=\"form-label\">Semester</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"semester\" v-model=\"newCourse.semester\">\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label for=\"academicYear\" class=\"form-label\">Academic Year</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"academicYear\" v-model=\"newCourse.academic_year\">\r\n              </div>\r\n              <button type=\"submit\" class=\"btn btn-primary\">Save Course</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex';\r\nimport bootstrap from 'bootstrap';\r\n\r\nexport default {\r\n  name: 'Navbar',\r\n  data() {\r\n    return {\r\n      courses: [],\r\n      newCourse: {\r\n        code: '',\r\n        name: '',\r\n        semester: '',\r\n        academic_year: ''\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters('auth', ['getUser', 'userRole']),\r\n    userName() {\r\n      return this.getUser ? this.getUser.name : '';\r\n    }\r\n  },\r\n  created() {\r\n    this.loadCourses();\r\n  },\r\n  methods: {\r\n    async loadCourses() {\r\n      try {\r\n        if (this.userRole === 'lecturer') {\r\n          // Load courses that this lecturer teaches\r\n          this.courses = await this.$store.dispatch('courses/fetchCourses', {\r\n            lecturerId: this.getUser.id\r\n          });\r\n        } else if (this.userRole === 'student') {\r\n          // For students, we need to fetch courses they're enrolled in\r\n          // This would require a custom endpoint in the backend\r\n          this.courses = await this.$store.dispatch('courses/fetchCourses');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading courses:', error);\r\n      }\r\n    },\r\n    logout() {\r\n      this.$store.dispatch('auth/logout');\r\n      this.$router.push('/login');\r\n    },\r\n    openCourseModal() {\r\n      // Reset the form\r\n      this.newCourse = {\r\n        code: '',\r\n        name: '',\r\n        semester: '',\r\n        academic_year: ''\r\n      };\r\n      \r\n      // Open the modal using Bootstrap's JavaScript\r\n      const modal = new bootstrap.Modal(document.getElementById('addCourseModal'));\r\n      modal.show();\r\n    },\r\n    async addCourse() {\r\n      try {\r\n        // Add lecturer_id to the course data\r\n        const courseData = {\r\n          ...this.newCourse,\r\n          lecturer_id: this.getUser.id\r\n        };\r\n        \r\n        await this.$store.dispatch('courses/createCourse', courseData);\r\n        \r\n        // Close the modal using Bootstrap's JavaScript\r\n        const modalElement = document.getElementById('addCourseModal');\r\n        const modal = bootstrap.Modal.getInstance(modalElement);\r\n        modal.hide();\r\n        \r\n        // Reload courses\r\n        this.loadCourses();\r\n      } catch (error) {\r\n        console.error('Error adding course:', error);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.navbar {\r\n  margin-bottom: 20px;\r\n  background-color: #2c3e50 !important;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.navbar-brand {\r\n  font-weight: 700;\r\n  font-size: 1.5rem;\r\n}\r\n\r\n.nav-link {\r\n  font-weight: 500;\r\n  transition: color 0.3s ease;\r\n}\r\n\r\n.nav-link:hover {\r\n  color: #3498db !important;\r\n}\r\n\r\n.dropdown-menu {\r\n  border: none;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  border-radius: 0.5rem;\r\n}\r\n\r\n.dropdown-item {\r\n  padding: 8px 16px;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.dropdown-item:hover {\r\n  background-color: #f8f9fa;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}