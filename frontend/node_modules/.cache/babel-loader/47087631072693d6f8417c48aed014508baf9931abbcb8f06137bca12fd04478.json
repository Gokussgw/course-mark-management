{"ast":null,"code":"import _regenerator from \"C:/Users/ansmu/Desktop/Web/NEW/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _asyncToGenerator from \"C:/Users/ansmu/Desktop/Web/NEW/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"C:/Users/ansmu/Desktop/Web/NEW/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { mapState, mapGetters, mapActions } from 'vuex';\nexport default {\n  name: 'CourseDetail',\n  data: function data() {\n    return {\n      courseId: null,\n      studentSearchQuery: '',\n      assessmentToDelete: null,\n      editFormData: {\n        code: '',\n        name: '',\n        semester: '',\n        credits: '',\n        description: ''\n      }\n    };\n  },\n  computed: _objectSpread(_objectSpread(_objectSpread({}, mapState({\n    isLoading: function isLoading(state) {\n      return state.loading;\n    },\n    course: function course(state) {\n      return state.courses.course;\n    }\n  })), mapGetters({\n    getCourseAssessments: 'assessments/getCourseAssessments'\n  })), {}, {\n    courseAssessments: function courseAssessments() {\n      return this.getCourseAssessments(this.courseId) || [];\n    },\n    enrolledStudents: function enrolledStudents() {\n      // This would be populated from a store getter once implemented\n      return this.$store.state.users.courseStudents || [];\n    },\n    filteredStudents: function filteredStudents() {\n      if (!this.studentSearchQuery) {\n        return this.enrolledStudents;\n      }\n      var query = this.studentSearchQuery.toLowerCase();\n      return this.enrolledStudents.filter(function (student) {\n        return student.name.toLowerCase().includes(query) || student.email.toLowerCase().includes(query) || student.student_id && student.student_id.toString().includes(query);\n      });\n    }\n  }),\n  created: function created() {\n    var _this = this;\n    return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n      var _t;\n      return _regenerator().w(function (_context) {\n        while (1) switch (_context.n) {\n          case 0:\n            _this.courseId = _this.$route.params.id;\n            _context.p = 1;\n            _context.n = 2;\n            return _this.fetchCourse(_this.courseId);\n          case 2:\n            _context.n = 3;\n            return _this.fetchAssessments({\n              courseId: _this.courseId\n            });\n          case 3:\n            _context.n = 4;\n            return _this.fetchCourseStudents(_this.courseId);\n          case 4:\n            _context.n = 5;\n            return _this.fetchMarks({\n              courseId: _this.courseId\n            });\n          case 5:\n            // Initialize edit form data\n            _this.initializeEditForm();\n            _context.n = 7;\n            break;\n          case 6:\n            _context.p = 6;\n            _t = _context.v;\n            console.error('Error loading course details:', _t);\n          case 7:\n            return _context.a(2);\n        }\n      }, _callee, null, [[1, 6]]);\n    }))();\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    fetchCourse: 'courses/fetchCourse',\n    fetchAssessments: 'assessments/fetchAssessments',\n    fetchMarks: 'marks/fetchMarks',\n    updateCourse: 'courses/updateCourse',\n    deleteAssessmentAction: 'assessments/deleteAssessment'\n  })), {}, {\n    fetchCourseStudents: function fetchCourseStudents(courseId) {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n        var _t2;\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              _context2.p = 0;\n              _context2.n = 1;\n              return _this2.$store.dispatch('users/fetchCourseStudents', courseId);\n            case 1:\n              _context2.n = 3;\n              break;\n            case 2:\n              _context2.p = 2;\n              _t2 = _context2.v;\n              console.error('Error fetching course students:', _t2);\n            case 3:\n              return _context2.a(2);\n          }\n        }, _callee2, null, [[0, 2]]);\n      }))();\n    },\n    formatDate: function formatDate(dateString) {\n      if (!dateString) return 'Not set';\n      return new Date(dateString).toLocaleDateString();\n    },\n    getAssessmentTypeClass: function getAssessmentTypeClass(type) {\n      var types = {\n        'exam': 'bg-danger',\n        'midterm': 'bg-warning',\n        'quiz': 'bg-info',\n        'assignment': 'bg-success',\n        'project': 'bg-primary',\n        'lab': 'bg-secondary'\n      };\n      return types[type.toLowerCase()] || 'bg-secondary';\n    },\n    getAssessmentTypeBadgeClass: function getAssessmentTypeBadgeClass(type) {\n      var types = {\n        'exam': 'bg-danger',\n        'midterm': 'bg-warning',\n        'quiz': 'bg-info',\n        'assignment': 'bg-success',\n        'project': 'bg-primary',\n        'lab': 'bg-secondary'\n      };\n      return types[type.toLowerCase()] || 'bg-secondary';\n    },\n    getAssessmentStatus: function getAssessmentStatus(assessment) {\n      var today = new Date();\n      var dueDate = new Date(assessment.due_date);\n      if (assessment.marks_entered) {\n        return 'Marked';\n      } else if (dueDate < today) {\n        return 'Overdue';\n      } else if (dueDate.getTime() - today.getTime() < 7 * 24 * 60 * 60 * 1000) {\n        return 'Upcoming';\n      } else {\n        return 'Scheduled';\n      }\n    },\n    getAssessmentStatusBadgeClass: function getAssessmentStatusBadgeClass(assessment) {\n      var status = this.getAssessmentStatus(assessment);\n      var classes = {\n        'Marked': 'bg-success',\n        'Overdue': 'bg-danger',\n        'Upcoming': 'bg-warning',\n        'Scheduled': 'bg-info'\n      };\n      return classes[status] || 'bg-secondary';\n    },\n    getStudentProgress: function getStudentProgress(studentId) {\n      var _this3 = this;\n      // Calculate what percentage of assessments the student has completed\n      var studentMarks = this.$store.state.marks.marks.filter(function (mark) {\n        return mark.student_id === studentId && mark.course_id === parseInt(_this3.courseId);\n      });\n      if (this.courseAssessments.length === 0) return 0;\n      return Math.round(studentMarks.length / this.courseAssessments.length * 100);\n    },\n    getStudentCurrentMark: function getStudentCurrentMark(studentId) {\n      var _this4 = this;\n      // Calculate the current weighted average for this student\n      var studentMarks = this.$store.state.marks.marks.filter(function (mark) {\n        return mark.student_id === studentId && mark.course_id === parseInt(_this4.courseId);\n      });\n      if (studentMarks.length === 0) return 'N/A';\n      var weightedSum = 0;\n      var totalWeight = 0;\n      studentMarks.forEach(function (mark) {\n        var assessment = _this4.courseAssessments.find(function (a) {\n          return a.id === mark.assessment_id;\n        });\n        if (assessment) {\n          weightedSum += mark.mark / assessment.max_mark * assessment.weightage;\n          totalWeight += assessment.weightage;\n        }\n      });\n      if (totalWeight === 0) return 'N/A';\n      var averageMark = Math.round(weightedSum / totalWeight * 100);\n      return \"\".concat(averageMark, \"%\");\n    },\n    getMarkClass: function getMarkClass(markString) {\n      if (markString === 'N/A') return 'text-muted';\n      var mark = parseInt(markString);\n      if (isNaN(mark)) return 'text-muted';\n      if (mark >= 70) return 'text-success fw-bold';\n      if (mark >= 50) return 'text-warning';\n      return 'text-danger';\n    },\n    navigateToCreateAssessment: function navigateToCreateAssessment() {\n      this.$router.push({\n        name: 'CreateAssessment',\n        query: {\n          courseId: this.courseId\n        }\n      });\n    },\n    navigateToEditAssessment: function navigateToEditAssessment(assessment) {\n      this.$router.push({\n        name: 'EditAssessment',\n        params: {\n          id: assessment.id\n        }\n      });\n    },\n    navigateToEnterMarks: function navigateToEnterMarks(assessment) {\n      // This route would need to be added to the router\n      this.$router.push({\n        name: 'EnterMarks',\n        params: {\n          id: assessment.id\n        }\n      });\n    },\n    navigateToStudentDetail: function navigateToStudentDetail(student) {\n      this.$router.push({\n        name: 'StudentDetail',\n        params: {\n          id: student.id\n        },\n        query: {\n          courseId: this.courseId\n        }\n      });\n    },\n    navigateToStudentMarks: function navigateToStudentMarks(student) {\n      // This route would need to be added to the router\n      this.$router.push({\n        name: 'StudentMarks',\n        params: {\n          studentId: student.id,\n          courseId: this.courseId\n        }\n      });\n    },\n    openEditCourseModal: function openEditCourseModal() {\n      this.initializeEditForm();\n      // In a real implementation, we would use Bootstrap's modal methods\n      // $('#editCourseModal').modal('show');\n    },\n    initializeEditForm: function initializeEditForm() {\n      if (this.course) {\n        this.editFormData = {\n          code: this.course.code || '',\n          name: this.course.name || '',\n          semester: this.course.semester || '',\n          credits: this.course.credits || '',\n          description: this.course.description || ''\n        };\n      }\n    },\n    saveCourseChanges: function saveCourseChanges() {\n      var _this5 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {\n        var _t3;\n        return _regenerator().w(function (_context3) {\n          while (1) switch (_context3.n) {\n            case 0:\n              _context3.p = 0;\n              _context3.n = 1;\n              return _this5.updateCourse(_objectSpread({\n                id: _this5.courseId\n              }, _this5.editFormData));\n            case 1:\n              // Close modal\n              // $('#editCourseModal').modal('hide');\n              _this5.$store.dispatch('showToast', {\n                message: 'Course updated successfully',\n                type: 'success'\n              });\n              _context3.n = 3;\n              break;\n            case 2:\n              _context3.p = 2;\n              _t3 = _context3.v;\n              console.error('Error updating course:', _t3);\n            case 3:\n              return _context3.a(2);\n          }\n        }, _callee3, null, [[0, 2]]);\n      }))();\n    },\n    confirmDeleteAssessment: function confirmDeleteAssessment(assessment) {\n      this.assessmentToDelete = assessment;\n      // In a real implementation, we would use Bootstrap's modal methods\n      // $('#deleteAssessmentModal').modal('show');\n    },\n    deleteAssessment: function deleteAssessment() {\n      var _this6 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4() {\n        var _t4;\n        return _regenerator().w(function (_context4) {\n          while (1) switch (_context4.n) {\n            case 0:\n              if (_this6.assessmentToDelete) {\n                _context4.n = 1;\n                break;\n              }\n              return _context4.a(2);\n            case 1:\n              _context4.p = 1;\n              _context4.n = 2;\n              return _this6.deleteAssessmentAction(_this6.assessmentToDelete.id);\n            case 2:\n              // Close modal\n              // $('#deleteAssessmentModal').modal('hide');\n              _this6.$store.dispatch('showToast', {\n                message: 'Assessment deleted successfully',\n                type: 'success'\n              });\n              _this6.assessmentToDelete = null;\n              _context4.n = 4;\n              break;\n            case 3:\n              _context4.p = 3;\n              _t4 = _context4.v;\n              console.error('Error deleting assessment:', _t4);\n            case 4:\n              return _context4.a(2);\n          }\n        }, _callee4, null, [[1, 3]]);\n      }))();\n    },\n    exportCourseData: function exportCourseData() {\n      // This would initiate a download of course data in CSV format\n      // Implementation would need to call an API endpoint\n      this.$store.dispatch('showToast', {\n        message: 'Exporting course data...',\n        type: 'info'\n      });\n    }\n  })\n};","map":{"version":3,"names":["mapState","mapGetters","mapActions","name","data","courseId","studentSearchQuery","assessmentToDelete","editFormData","code","semester","credits","description","computed","_objectSpread","isLoading","state","loading","course","courses","getCourseAssessments","courseAssessments","enrolledStudents","$store","users","courseStudents","filteredStudents","query","toLowerCase","filter","student","includes","email","student_id","toString","created","_this","_asyncToGenerator","_regenerator","m","_callee","_t","w","_context","n","$route","params","id","p","fetchCourse","fetchAssessments","fetchCourseStudents","fetchMarks","initializeEditForm","v","console","error","a","methods","updateCourse","deleteAssessmentAction","_this2","_callee2","_t2","_context2","dispatch","formatDate","dateString","Date","toLocaleDateString","getAssessmentTypeClass","type","types","getAssessmentTypeBadgeClass","getAssessmentStatus","assessment","today","dueDate","due_date","marks_entered","getTime","getAssessmentStatusBadgeClass","status","classes","getStudentProgress","studentId","_this3","studentMarks","marks","mark","course_id","parseInt","length","Math","round","getStudentCurrentMark","_this4","weightedSum","totalWeight","forEach","find","assessment_id","max_mark","weightage","averageMark","concat","getMarkClass","markString","isNaN","navigateToCreateAssessment","$router","push","navigateToEditAssessment","navigateToEnterMarks","navigateToStudentDetail","navigateToStudentMarks","openEditCourseModal","saveCourseChanges","_this5","_callee3","_t3","_context3","message","confirmDeleteAssessment","deleteAssessment","_this6","_callee4","_t4","_context4","exportCourseData"],"sources":["C:\\Users\\ansmu\\Desktop\\Web\\NEW\\course-mark-management\\frontend\\src\\views\\lecturer\\CourseDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"course-detail\">\r\n    <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n      <div>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol class=\"breadcrumb\">\r\n            <li class=\"breadcrumb-item\">\r\n              <router-link to=\"/lecturer/dashboard\">Dashboard</router-link>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\" aria-current=\"page\">\r\n              {{ course?.code }} - {{ course?.name }}\r\n            </li>\r\n          </ol>\r\n        </nav>\r\n        <h1 class=\"mb-2\">{{ course?.name }}</h1>\r\n        <p class=\"text-muted\">\r\n          {{ course?.code }} | {{ course?.semester || 'No semester specified' }}\r\n        </p>\r\n      </div>\r\n      <div>\r\n        <div class=\"btn-group\">\r\n          <router-link \r\n            :to=\"`/lecturer/course/${courseId}/marks`\" \r\n            class=\"btn btn-success\"\r\n          >\r\n            <i class=\"fas fa-graduation-cap me-2\"></i> Manage Marks\r\n          </router-link>\r\n          <button class=\"btn btn-outline-primary\" @click=\"exportCourseData\">\r\n            <i class=\"fas fa-file-export me-2\"></i> Export Data\r\n          </button>\r\n          <button class=\"btn btn-outline-primary\" @click=\"openEditCourseModal\">\r\n            <i class=\"fas fa-edit me-2\"></i> Edit Course\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"isLoading\" class=\"text-center my-5\">\r\n      <div class=\"spinner-border text-primary\" role=\"status\">\r\n        <span class=\"visually-hidden\">Loading...</span>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-else class=\"row\">\r\n      <div class=\"col-md-4 mb-4\">\r\n        <div class=\"card h-100\">\r\n          <div class=\"card-header bg-light d-flex justify-content-between align-items-center\">\r\n            <h5 class=\"mb-0\">Course Information</h5>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <table class=\"table table-sm\">\r\n              <tbody>\r\n                <tr>\r\n                  <th>Code:</th>\r\n                  <td>{{ course?.code }}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Name:</th>\r\n                  <td>{{ course?.name }}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Semester:</th>\r\n                  <td>{{ course?.semester || 'Not specified' }}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Credits:</th>\r\n                  <td>{{ course?.credits || 'Not specified' }}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Students:</th>\r\n                  <td>{{ enrolledStudents.length }}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Students with Marks:</th>\r\n                  <td>{{ studentsWithMarks }}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Class Average:</th>\r\n                  <td>{{ courseBreakdown.class_average || 'N/A' }}%</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            <div v-if=\"course?.description\" class=\"mt-3\">\r\n              <h6>Description</h6>\r\n              <p>{{ course.description }}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-md-8 mb-4\">\r\n        <div class=\"card h-100\">\r\n          <div class=\"card-header bg-light d-flex justify-content-between align-items-center\">\r\n            <h5 class=\"mb-0\">Component Breakdown</h5>\r\n            <router-link :to=\"`/lecturer/breakdown/${courseId}`\" class=\"btn btn-sm btn-primary\">\r\n              <i class=\"fas fa-chart-bar me-2\"></i> View Detailed Analytics\r\n            </router-link>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div v-if=\"isLoadingBreakdown\" class=\"text-center py-4\">\r\n              <div class=\"spinner-border text-primary\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading component data...</span>\r\n              </div>\r\n            </div>\r\n            <div v-else>\r\n              <!-- Component Weightage Progress Bar -->\r\n              <div class=\"mb-4\">\r\n                <div class=\"progress\" style=\"height: 30px;\">\r\n                  <div class=\"progress-bar bg-success\" \r\n                       style=\"width: 25%\"\r\n                       title=\"Assignment (25%)\">\r\n                    Assignment 25%\r\n                  </div>\r\n                  <div class=\"progress-bar bg-info\" \r\n                       style=\"width: 20%\"\r\n                       title=\"Quiz (20%)\">\r\n                    Quiz 20%\r\n                  </div>\r\n                  <div class=\"progress-bar bg-warning\" \r\n                       style=\"width: 25%\"\r\n                       title=\"Test (25%)\">\r\n                    Test 25%\r\n                  </div>\r\n                  <div class=\"progress-bar bg-danger\" \r\n                       style=\"width: 30%\"\r\n                       title=\"Final Exam (30%)\">\r\n                    Final Exam 30%\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <!-- Component Statistics -->\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 mb-3\">\r\n                  <div class=\"card border-light\">\r\n                    <div class=\"card-body p-3\">\r\n                      <h6 class=\"card-title text-success\">\r\n                        <i class=\"fas fa-file-alt me-2\"></i>Assignment (25%)\r\n                      </h6>\r\n                      <div class=\"d-flex justify-content-between\">\r\n                        <span>Class Average:</span>\r\n                        <strong>{{ courseBreakdown.assignment?.average || 'N/A' }}%</strong>\r\n                      </div>\r\n                      <div class=\"d-flex justify-content-between\">\r\n                        <span>Highest Score:</span>\r\n                        <strong>{{ courseBreakdown.assignment?.highest || 'N/A' }}%</strong>\r\n                      </div>\r\n                      <div class=\"d-flex justify-content-between\">\r\n                        <span>Students Completed:</span>\r\n                        <strong>{{ courseBreakdown.assignment?.completed || 0 }}/{{ enrolledStudents.length }}</strong>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div class=\"col-md-6 mb-3\">\r\n                  <div class=\"card border-light\">\r\n                    <div class=\"card-body p-3\">\r\n                      <h6 class=\"card-title text-info\">\r\n                        <i class=\"fas fa-question-circle me-2\"></i>Quiz (20%)\r\n                      </h6>\r\n                      <div class=\"d-flex justify-content-between\">\r\n                        <span>Class Average:</span>\r\n                        <strong>{{ courseBreakdown.quiz?.average || 'N/A' }}%</strong>\r\n                      </div>\r\n                      <div class=\"d-flex justify-content-between\">\r\n                        <span>Highest Score:</span>\r\n                        <strong>{{ courseBreakdown.quiz?.highest || 'N/A' }}%</strong>\r\n                      </div>\r\n                      <div class=\"d-flex justify-content-between\">\r\n                        <span>Students Completed:</span>\r\n                        <strong>{{ courseBreakdown.quiz?.completed || 0 }}/{{ enrolledStudents.length }}</strong>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div class=\"col-md-6 mb-3\">\r\n                  <div class=\"card border-light\">\r\n                    <div class=\"card-body p-3\">\r\n                      <h6 class=\"card-title text-warning\">\r\n                        <i class=\"fas fa-clipboard-check me-2\"></i>Test (25%)\r\n                      </h6>\r\n                      <div class=\"d-flex justify-content-between\">\r\n                        <span>Class Average:</span>\r\n                        <strong>{{ courseBreakdown.test?.average || 'N/A' }}%</strong>\r\n                      </div>\r\n                      <div class=\"d-flex justify-content-between\">\r\n                        <span>Highest Score:</span>\r\n                        <strong>{{ courseBreakdown.test?.highest || 'N/A' }}%</strong>\r\n                      </div>\r\n                      <div class=\"d-flex justify-content-between\">\r\n                        <span>Students Completed:</span>\r\n                        <strong>{{ courseBreakdown.test?.completed || 0 }}/{{ enrolledStudents.length }}</strong>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div class=\"col-md-6 mb-3\">\r\n                  <div class=\"card border-light\">\r\n                    <div class=\"card-body p-3\">\r\n                      <h6 class=\"card-title text-danger\">\r\n                        <i class=\"fas fa-graduation-cap me-2\"></i>Final Exam (30%)\r\n                      </h6>\r\n                      <div class=\"d-flex justify-content-between\">\r\n                        <span>Class Average:</span>\r\n                        <strong>{{ courseBreakdown.final_exam?.average || 'N/A' }}%</strong>\r\n                      </div>\r\n                      <div class=\"d-flex justify-content-between\">\r\n                        <span>Highest Score:</span>\r\n                        <strong>{{ courseBreakdown.final_exam?.highest || 'N/A' }}%</strong>\r\n                      </div>\r\n                      <div class=\"d-flex justify-content-between\">\r\n                        <span>Students Completed:</span>\r\n                        <strong>{{ courseBreakdown.final_exam?.completed || 0 }}/{{ enrolledStudents.length }}</strong>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 mb-4\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header bg-light d-flex justify-content-between align-items-center\">\r\n            <h5 class=\"mb-0\">Enrolled Students</h5>\r\n            <div class=\"input-group w-25\">\r\n              <input \r\n                type=\"text\" \r\n                class=\"form-control\" \r\n                placeholder=\"Search students...\" \r\n                v-model=\"studentSearchQuery\"\r\n              >\r\n              <button class=\"btn btn-outline-secondary\" type=\"button\">\r\n                <i class=\"fas fa-search\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div v-if=\"enrolledStudents.length === 0\" class=\"text-center py-4\">\r\n              <p>No students are enrolled in this course yet.</p>\r\n            </div>\r\n            <div v-else class=\"table-responsive\">\r\n              <table class=\"table table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Student ID</th>\r\n                    <th>Name</th>\r\n                    <th>Email</th>\r\n                    <th>Overall Progress</th>\r\n                    <th>Current Mark</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr v-for=\"student in filteredStudents\" :key=\"student.id\">\r\n                    <td>{{ student.student_id || 'N/A' }}</td>\r\n                    <td>{{ student.name }}</td>\r\n                    <td>{{ student.email }}</td>\r\n                    <td>\r\n                      <div class=\"progress\">\r\n                        <div \r\n                          class=\"progress-bar bg-success\" \r\n                          role=\"progressbar\"\r\n                          :style=\"`width: ${getStudentCompletionProgress(student.id)}%`\"\r\n                          :aria-valuenow=\"getStudentCompletionProgress(student.id)\" \r\n                          aria-valuemin=\"0\" \r\n                          aria-valuemax=\"100\">\r\n                          {{ getStudentCompletionProgress(student.id) }}%\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <span \r\n                        :class=\"getMarkClass(getStudentFinalGrade(student.id))\">\r\n                        {{ getStudentFinalGrade(student.id) }}\r\n                      </span>\r\n                    </td>\r\n                    <td>\r\n                      <div class=\"btn-group btn-group-sm\">\r\n                        <button class=\"btn btn-outline-primary\" @click=\"navigateToStudentDetail(student)\">\r\n                          <i class=\"fas fa-user me-1\"></i> Details\r\n                        </button>\r\n                        <button class=\"btn btn-outline-secondary\" @click=\"navigateToStudentMarks(student)\">\r\n                          <i class=\"fas fa-calculator me-1\"></i> Marks\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Edit Course Modal -->\r\n    <div class=\"modal fade\" id=\"editCourseModal\" tabindex=\"-1\" aria-labelledby=\"editCourseModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"editCourseModalLabel\">Edit Course</h5>\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <!-- Course edit form will go here -->\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\r\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"saveCourseChanges\">Save Changes</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Delete Assessment Confirmation Modal -->\r\n    <div class=\"modal fade\" id=\"deleteAssessmentModal\" tabindex=\"-1\" aria-labelledby=\"deleteAssessmentModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"deleteAssessmentModalLabel\">Confirm Deletion</h5>\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            Are you sure you want to delete the assessment \"{{ assessmentToDelete?.name }}\"? This action cannot be undone.\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\r\n            <button type=\"button\" class=\"btn btn-danger\" @click=\"deleteAssessment\">Delete</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapGetters, mapActions } from 'vuex'\r\n\r\nexport default {\r\n  name: 'CourseDetail',\r\n  data() {\r\n    return {\r\n      courseId: null,\r\n      studentSearchQuery: '',\r\n      assessmentToDelete: null,\r\n      editFormData: {\r\n        code: '',\r\n        name: '',\r\n        semester: '',\r\n        credits: '',\r\n        description: ''\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      isLoading: state => state.loading,\r\n      course: state => state.courses.course,\r\n    }),\r\n    ...mapGetters({\r\n      getCourseAssessments: 'assessments/getCourseAssessments'\r\n    }),\r\n    courseAssessments() {\r\n      return this.getCourseAssessments(this.courseId) || [];\r\n    },\r\n    enrolledStudents() {\r\n      // This would be populated from a store getter once implemented\r\n      return this.$store.state.users.courseStudents || [];\r\n    },\r\n    filteredStudents() {\r\n      if (!this.studentSearchQuery) {\r\n        return this.enrolledStudents;\r\n      }\r\n      \r\n      const query = this.studentSearchQuery.toLowerCase();\r\n      return this.enrolledStudents.filter(student => \r\n        student.name.toLowerCase().includes(query) || \r\n        student.email.toLowerCase().includes(query) ||\r\n        (student.student_id && student.student_id.toString().includes(query))\r\n      );\r\n    }\r\n  },\r\n  async created() {\r\n    this.courseId = this.$route.params.id;\r\n    try {\r\n      // Fetch course details\r\n      await this.fetchCourse(this.courseId);\r\n      \r\n      // Fetch course assessments\r\n      await this.fetchAssessments({ courseId: this.courseId });\r\n      \r\n      // Fetch enrolled students\r\n      await this.fetchCourseStudents(this.courseId);\r\n      \r\n      // Fetch marks for this course\r\n      await this.fetchMarks({ courseId: this.courseId });\r\n      \r\n      // Initialize edit form data\r\n      this.initializeEditForm();\r\n    } catch (error) {\r\n      console.error('Error loading course details:', error);\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      fetchCourse: 'courses/fetchCourse',\r\n      fetchAssessments: 'assessments/fetchAssessments',\r\n      fetchMarks: 'marks/fetchMarks',\r\n      updateCourse: 'courses/updateCourse',\r\n      deleteAssessmentAction: 'assessments/deleteAssessment'\r\n    }),\r\n    async fetchCourseStudents(courseId) {\r\n      try {\r\n        // This action would need to be implemented in the users store module\r\n        await this.$store.dispatch('users/fetchCourseStudents', courseId);\r\n      } catch (error) {\r\n        console.error('Error fetching course students:', error);\r\n      }\r\n    },\r\n    formatDate(dateString) {\r\n      if (!dateString) return 'Not set';\r\n      return new Date(dateString).toLocaleDateString();\r\n    },\r\n    getAssessmentTypeClass(type) {\r\n      const types = {\r\n        'exam': 'bg-danger',\r\n        'midterm': 'bg-warning',\r\n        'quiz': 'bg-info',\r\n        'assignment': 'bg-success',\r\n        'project': 'bg-primary',\r\n        'lab': 'bg-secondary'\r\n      };\r\n      return types[type.toLowerCase()] || 'bg-secondary';\r\n    },\r\n    getAssessmentTypeBadgeClass(type) {\r\n      const types = {\r\n        'exam': 'bg-danger',\r\n        'midterm': 'bg-warning',\r\n        'quiz': 'bg-info',\r\n        'assignment': 'bg-success',\r\n        'project': 'bg-primary',\r\n        'lab': 'bg-secondary'\r\n      };\r\n      return types[type.toLowerCase()] || 'bg-secondary';\r\n    },\r\n    getAssessmentStatus(assessment) {\r\n      const today = new Date();\r\n      const dueDate = new Date(assessment.due_date);\r\n      \r\n      if (assessment.marks_entered) {\r\n        return 'Marked';\r\n      } else if (dueDate < today) {\r\n        return 'Overdue';\r\n      } else if (dueDate.getTime() - today.getTime() < 7 * 24 * 60 * 60 * 1000) {\r\n        return 'Upcoming';\r\n      } else {\r\n        return 'Scheduled';\r\n      }\r\n    },\r\n    getAssessmentStatusBadgeClass(assessment) {\r\n      const status = this.getAssessmentStatus(assessment);\r\n      const classes = {\r\n        'Marked': 'bg-success',\r\n        'Overdue': 'bg-danger',\r\n        'Upcoming': 'bg-warning',\r\n        'Scheduled': 'bg-info'\r\n      };\r\n      return classes[status] || 'bg-secondary';\r\n    },\r\n    getStudentProgress(studentId) {\r\n      // Calculate what percentage of assessments the student has completed\r\n      const studentMarks = this.$store.state.marks.marks.filter(mark => \r\n        mark.student_id === studentId && mark.course_id === parseInt(this.courseId)\r\n      );\r\n      \r\n      if (this.courseAssessments.length === 0) return 0;\r\n      \r\n      return Math.round((studentMarks.length / this.courseAssessments.length) * 100);\r\n    },\r\n    getStudentCurrentMark(studentId) {\r\n      // Calculate the current weighted average for this student\r\n      const studentMarks = this.$store.state.marks.marks.filter(mark => \r\n        mark.student_id === studentId && mark.course_id === parseInt(this.courseId)\r\n      );\r\n      \r\n      if (studentMarks.length === 0) return 'N/A';\r\n      \r\n      let weightedSum = 0;\r\n      let totalWeight = 0;\r\n      \r\n      studentMarks.forEach(mark => {\r\n        const assessment = this.courseAssessments.find(a => a.id === mark.assessment_id);\r\n        if (assessment) {\r\n          weightedSum += (mark.mark / assessment.max_mark) * assessment.weightage;\r\n          totalWeight += assessment.weightage;\r\n        }\r\n      });\r\n      \r\n      if (totalWeight === 0) return 'N/A';\r\n      \r\n      const averageMark = Math.round((weightedSum / totalWeight) * 100);\r\n      return `${averageMark}%`;\r\n    },\r\n    getMarkClass(markString) {\r\n      if (markString === 'N/A') return 'text-muted';\r\n      \r\n      const mark = parseInt(markString);\r\n      if (isNaN(mark)) return 'text-muted';\r\n      \r\n      if (mark >= 70) return 'text-success fw-bold';\r\n      if (mark >= 50) return 'text-warning';\r\n      return 'text-danger';\r\n    },\r\n    navigateToCreateAssessment() {\r\n      this.$router.push({ \r\n        name: 'CreateAssessment',\r\n        query: { courseId: this.courseId }\r\n      });\r\n    },\r\n    navigateToEditAssessment(assessment) {\r\n      this.$router.push({ \r\n        name: 'EditAssessment', \r\n        params: { id: assessment.id }\r\n      });\r\n    },\r\n    navigateToEnterMarks(assessment) {\r\n      // This route would need to be added to the router\r\n      this.$router.push({ \r\n        name: 'EnterMarks', \r\n        params: { id: assessment.id }\r\n      });\r\n    },\r\n    navigateToStudentDetail(student) {\r\n      this.$router.push({ \r\n        name: 'StudentDetail', \r\n        params: { id: student.id },\r\n        query: { courseId: this.courseId }\r\n      });\r\n    },\r\n    navigateToStudentMarks(student) {\r\n      // This route would need to be added to the router\r\n      this.$router.push({ \r\n        name: 'StudentMarks', \r\n        params: { studentId: student.id, courseId: this.courseId }\r\n      });\r\n    },\r\n    openEditCourseModal() {\r\n      this.initializeEditForm();\r\n      // In a real implementation, we would use Bootstrap's modal methods\r\n      // $('#editCourseModal').modal('show');\r\n    },\r\n    initializeEditForm() {\r\n      if (this.course) {\r\n        this.editFormData = {\r\n          code: this.course.code || '',\r\n          name: this.course.name || '',\r\n          semester: this.course.semester || '',\r\n          credits: this.course.credits || '',\r\n          description: this.course.description || ''\r\n        };\r\n      }\r\n    },\r\n    async saveCourseChanges() {\r\n      try {\r\n        await this.updateCourse({\r\n          id: this.courseId,\r\n          ...this.editFormData\r\n        });\r\n        // Close modal\r\n        // $('#editCourseModal').modal('hide');\r\n        this.$store.dispatch('showToast', {\r\n          message: 'Course updated successfully',\r\n          type: 'success'\r\n        });\r\n      } catch (error) {\r\n        console.error('Error updating course:', error);\r\n      }\r\n    },\r\n    confirmDeleteAssessment(assessment) {\r\n      this.assessmentToDelete = assessment;\r\n      // In a real implementation, we would use Bootstrap's modal methods\r\n      // $('#deleteAssessmentModal').modal('show');\r\n    },\r\n    async deleteAssessment() {\r\n      if (!this.assessmentToDelete) return;\r\n      \r\n      try {\r\n        await this.deleteAssessmentAction(this.assessmentToDelete.id);\r\n        // Close modal\r\n        // $('#deleteAssessmentModal').modal('hide');\r\n        this.$store.dispatch('showToast', {\r\n          message: 'Assessment deleted successfully',\r\n          type: 'success'\r\n        });\r\n        this.assessmentToDelete = null;\r\n      } catch (error) {\r\n        console.error('Error deleting assessment:', error);\r\n      }\r\n    },\r\n    exportCourseData() {\r\n      // This would initiate a download of course data in CSV format\r\n      // Implementation would need to call an API endpoint\r\n      this.$store.dispatch('showToast', {\r\n        message: 'Exporting course data...',\r\n        type: 'info'\r\n      });\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.course-detail h1 {\r\n  font-size: 2rem;\r\n  font-weight: 600;\r\n}\r\n\r\n.progress {\r\n  height: 20px;\r\n}\r\n\r\n.card {\r\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\r\n}\r\n\r\n.card-header {\r\n  background-color: rgba(0, 0, 0, 0.03);\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.125);\r\n}\r\n\r\n.table th {\r\n  font-weight: 600;\r\n}\r\n\r\n.badge {\r\n  font-weight: 500;\r\n  padding: 0.35em 0.65em;\r\n}\r\n\r\n/* Timeline styling for recent activities */\r\n.timeline {\r\n  position: relative;\r\n  padding-left: 40px;\r\n}\r\n\r\n.timeline-item {\r\n  position: relative;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.timeline-item:before {\r\n  content: \"\";\r\n  position: absolute;\r\n  left: -30px;\r\n  top: 0;\r\n  height: 100%;\r\n  width: 2px;\r\n  background-color: #e9ecef;\r\n}\r\n\r\n.timeline-item:last-child:before {\r\n  height: 50%;\r\n}\r\n\r\n.timeline-item-icon {\r\n  position: absolute;\r\n  left: -38px;\r\n  top: 0;\r\n  width: 16px;\r\n  height: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #fff;\r\n  border: 2px solid #007bff;\r\n  border-radius: 50%;\r\n}\r\n\r\n.timeline-item-icon i {\r\n  font-size: 8px;\r\n  color: #007bff;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}