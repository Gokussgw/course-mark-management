{"ast":null,"code":"import _toConsumableArray from \"C:/Users/ansmu/Desktop/Web/NEW/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment, withModifiers as _withModifiers, normalizeStyle as _normalizeStyle } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"notification-panel\"\n};\nvar _hoisted_2 = {\n  \"class\": \"d-flex justify-content-between align-items-center mb-3\"\n};\nvar _hoisted_3 = {\n  \"class\": \"mb-0\"\n};\nvar _hoisted_4 = {\n  key: 0,\n  \"class\": \"badge bg-danger ms-2\"\n};\nvar _hoisted_5 = [\"disabled\"];\nvar _hoisted_6 = {\n  key: 0,\n  \"class\": \"text-center py-3\"\n};\nvar _hoisted_7 = {\n  key: 1,\n  \"class\": \"text-center py-4 text-muted\"\n};\nvar _hoisted_8 = {\n  key: 2,\n  \"class\": \"notification-list\"\n};\nvar _hoisted_9 = [\"onClick\"];\nvar _hoisted_10 = {\n  \"class\": \"d-flex align-items-start\"\n};\nvar _hoisted_11 = {\n  \"class\": \"notification-icon me-3\"\n};\nvar _hoisted_12 = {\n  \"class\": \"notification-content flex-grow-1\"\n};\nvar _hoisted_13 = [\"innerHTML\"];\nvar _hoisted_14 = {\n  \"class\": \"notification-meta mt-2\"\n};\nvar _hoisted_15 = {\n  \"class\": \"text-muted\"\n};\nvar _hoisted_16 = {\n  key: 0,\n  \"class\": \"text-muted ms-3\"\n};\nvar _hoisted_17 = {\n  \"class\": \"notification-actions\"\n};\nvar _hoisted_18 = [\"onClick\"];\nvar _hoisted_19 = {\n  key: 3,\n  \"class\": \"text-center pt-2\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h5\", _hoisted_3, [_cache[2] || (_cache[2] = _createElementVNode(\"i\", {\n    \"class\": \"fas fa-bell me-2\"\n  }, null, -1 /* CACHED */)), _cache[3] || (_cache[3] = _createTextVNode(\"Notifications \")), $data.unreadCount > 0 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, _toDisplayString($data.unreadCount), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"button\", {\n    \"class\": \"btn btn-sm btn-outline-primary\",\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $options.refreshNotifications && $options.refreshNotifications.apply($options, arguments);\n    }),\n    disabled: $data.loading\n  }, [_createElementVNode(\"i\", {\n    \"class\": _normalizeClass([\"fas fa-sync-alt\", {\n      'fa-spin': $data.loading\n    }])\n  }, null, 2 /* CLASS */)], 8 /* PROPS */, _hoisted_5)]), $data.loading && $data.notifications.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _cache[4] || (_cache[4] = [_createElementVNode(\"div\", {\n    \"class\": \"spinner-border spinner-border-sm text-primary\",\n    role: \"status\"\n  }, [_createElementVNode(\"span\", {\n    \"class\": \"visually-hidden\"\n  }, \"Loading...\")], -1 /* CACHED */)]))) : $data.notifications.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, _cache[5] || (_cache[5] = [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-bell-slash mb-2\",\n    style: {\n      \"font-size\": \"2rem\"\n    }\n  }, null, -1 /* CACHED */), _createElementVNode(\"p\", {\n    \"class\": \"mb-0\"\n  }, \"No notifications yet\", -1 /* CACHED */)]))) : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.notifications, function (notification) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: notification.id,\n      \"class\": _normalizeClass([\"notification-item mb-3 p-3 rounded\", {\n        'unread': !notification.is_read\n      }]),\n      style: _normalizeStyle($options.getNotificationStyle(notification.type)),\n      onClick: function onClick($event) {\n        return $options.handleNotificationClick(notification);\n      }\n    }, [_createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"i\", {\n      \"class\": _normalizeClass($options.getNotificationIcon(notification.type))\n    }, null, 2 /* CLASS */)]), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", {\n      \"class\": \"notification-text\",\n      innerHTML: $options.formatNotificationContent(notification.content)\n    }, null, 8 /* PROPS */, _hoisted_13), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"small\", _hoisted_15, [_cache[6] || (_cache[6] = _createElementVNode(\"i\", {\n      \"class\": \"fas fa-clock me-1\"\n    }, null, -1 /* CACHED */)), _createTextVNode(\" \" + _toDisplayString($options.formatTime(notification.created_at)), 1 /* TEXT */)]), notification.sender_name ? (_openBlock(), _createElementBlock(\"span\", _hoisted_16, [_cache[7] || (_cache[7] = _createElementVNode(\"i\", {\n      \"class\": \"fas fa-user me-1\"\n    }, null, -1 /* CACHED */)), _createTextVNode(\" \" + _toDisplayString(notification.sender_name), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)])]), _createElementVNode(\"div\", _hoisted_17, [!notification.is_read ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      \"class\": \"btn btn-sm btn-outline-primary\",\n      onClick: _withModifiers(function ($event) {\n        return $options.markAsRead(notification.id);\n      }, [\"stop\"]),\n      title: \"Mark as read\"\n    }, _toConsumableArray(_cache[8] || (_cache[8] = [_createElementVNode(\"i\", {\n      \"class\": \"fas fa-check\"\n    }, null, -1 /* CACHED */)])), 8 /* PROPS */, _hoisted_18)) : _createCommentVNode(\"v-if\", true)])])], 14 /* CLASS, STYLE, PROPS */, _hoisted_9);\n  }), 128 /* KEYED_FRAGMENT */))])), $data.notifications.length >= 10 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [_createElementVNode(\"button\", {\n    \"class\": \"btn btn-sm btn-link text-muted\",\n    onClick: _cache[1] || (_cache[1] = function () {\n      return $options.loadMore && $options.loadMore.apply($options, arguments);\n    })\n  }, \" View older notifications \")])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","$data","unreadCount","_hoisted_4","_toDisplayString","onClick","_cache","$options","refreshNotifications","apply","arguments","disabled","loading","_normalizeClass","notifications","length","_hoisted_6","role","_hoisted_7","style","_hoisted_8","_Fragment","_renderList","notification","key","id","is_read","_normalizeStyle","getNotificationStyle","type","$event","handleNotificationClick","_hoisted_10","_hoisted_11","getNotificationIcon","_hoisted_12","innerHTML","formatNotificationContent","content","_hoisted_14","_hoisted_15","formatTime","created_at","sender_name","_hoisted_16","_hoisted_17","_withModifiers","markAsRead","title","_hoisted_19","loadMore"],"sources":["C:\\Users\\ansmu\\Desktop\\Web\\NEW\\course-mark-management\\frontend\\src\\components\\notifications\\NotificationPanel.vue"],"sourcesContent":["<template>\r\n  <div class=\"notification-panel\">\r\n    <div class=\"d-flex justify-content-between align-items-center mb-3\">\r\n      <h5 class=\"mb-0\">\r\n        <i class=\"fas fa-bell me-2\"></i>Notifications\r\n        <span v-if=\"unreadCount > 0\" class=\"badge bg-danger ms-2\">{{ unreadCount }}</span>\r\n      </h5>\r\n      <button \r\n        class=\"btn btn-sm btn-outline-primary\"\r\n        @click=\"refreshNotifications\"\r\n        :disabled=\"loading\"\r\n      >\r\n        <i class=\"fas fa-sync-alt\" :class=\"{ 'fa-spin': loading }\"></i>\r\n      </button>\r\n    </div>\r\n    \r\n    <div v-if=\"loading && notifications.length === 0\" class=\"text-center py-3\">\r\n      <div class=\"spinner-border spinner-border-sm text-primary\" role=\"status\">\r\n        <span class=\"visually-hidden\">Loading...</span>\r\n      </div>\r\n    </div>\r\n    \r\n    <div v-else-if=\"notifications.length === 0\" class=\"text-center py-4 text-muted\">\r\n      <i class=\"fas fa-bell-slash mb-2\" style=\"font-size: 2rem;\"></i>\r\n      <p class=\"mb-0\">No notifications yet</p>\r\n    </div>\r\n    \r\n    <div v-else class=\"notification-list\">\r\n      <div \r\n        v-for=\"notification in notifications\" \r\n        :key=\"notification.id\"\r\n        class=\"notification-item mb-3 p-3 rounded\"\r\n        :class=\"{ 'unread': !notification.is_read }\"\r\n        :style=\"getNotificationStyle(notification.type)\"\r\n        @click=\"handleNotificationClick(notification)\"\r\n      >\r\n        <div class=\"d-flex align-items-start\">\r\n          <div class=\"notification-icon me-3\">\r\n            <i :class=\"getNotificationIcon(notification.type)\"></i>\r\n          </div>\r\n          <div class=\"notification-content flex-grow-1\">\r\n            <div class=\"notification-text\" v-html=\"formatNotificationContent(notification.content)\"></div>\r\n            <div class=\"notification-meta mt-2\">\r\n              <small class=\"text-muted\">\r\n                <i class=\"fas fa-clock me-1\"></i>\r\n                {{ formatTime(notification.created_at) }}\r\n              </small>\r\n              <span v-if=\"notification.sender_name\" class=\"text-muted ms-3\">\r\n                <i class=\"fas fa-user me-1\"></i>\r\n                {{ notification.sender_name }}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div class=\"notification-actions\">\r\n            <button \r\n              v-if=\"!notification.is_read\"\r\n              class=\"btn btn-sm btn-outline-primary\"\r\n              @click.stop=\"markAsRead(notification.id)\"\r\n              title=\"Mark as read\"\r\n            >\r\n              <i class=\"fas fa-check\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div v-if=\"notifications.length >= 10\" class=\"text-center pt-2\">\r\n      <button class=\"btn btn-sm btn-link text-muted\" @click=\"loadMore\">\r\n        View older notifications\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport NotificationService from '@/services/NotificationService.js';\r\n\r\nexport default {\r\n  name: 'NotificationPanel',\r\n  props: {\r\n    userId: {\r\n      type: [Number, String],\r\n      required: true\r\n    },\r\n    autoRefresh: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    refreshInterval: {\r\n      type: Number,\r\n      default: 30000 // 30 seconds\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      notifications: [],\r\n      unreadCount: 0,\r\n      loading: false,\r\n      refreshTimer: null\r\n    };\r\n  },\r\n  async created() {\r\n    await this.loadNotifications();\r\n    \r\n    if (this.autoRefresh) {\r\n      this.startAutoRefresh();\r\n    }\r\n  },\r\n  beforeUnmount() {\r\n    if (this.refreshTimer) {\r\n      clearInterval(this.refreshTimer);\r\n    }\r\n  },\r\n  methods: {\r\n    async loadNotifications() {\r\n      this.loading = true;\r\n      try {\r\n        const [notifications, unreadCount] = await Promise.all([\r\n          NotificationService.getRecentNotifications(this.userId),\r\n          NotificationService.getUnreadCount(this.userId)\r\n        ]);\r\n        \r\n        this.notifications = notifications;\r\n        this.unreadCount = unreadCount;\r\n      } catch (error) {\r\n        console.error('Error loading notifications:', error);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    \r\n    async refreshNotifications() {\r\n      await this.loadNotifications();\r\n    },\r\n    \r\n    async markAsRead(notificationId) {\r\n      try {\r\n        const success = await NotificationService.markAsRead(notificationId);\r\n        if (success) {\r\n          // Update local state\r\n          const notification = this.notifications.find(n => n.id === notificationId);\r\n          if (notification) {\r\n            notification.is_read = true;\r\n            this.unreadCount = Math.max(0, this.unreadCount - 1);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error marking notification as read:', error);\r\n      }\r\n    },\r\n    \r\n    handleNotificationClick(notification) {\r\n      if (!notification.is_read) {\r\n        this.markAsRead(notification.id);\r\n      }\r\n      \r\n      // Emit event for parent component to handle navigation\r\n      this.$emit('notification-clicked', notification);\r\n    },\r\n    \r\n    startAutoRefresh() {\r\n      this.refreshTimer = setInterval(() => {\r\n        this.loadNotifications();\r\n      }, this.refreshInterval);\r\n    },\r\n    \r\n    loadMore() {\r\n      // Implement pagination if needed\r\n      this.$emit('load-more');\r\n    },\r\n    \r\n    formatNotificationContent(content) {\r\n      // Convert line breaks to HTML breaks and make it safe\r\n      return content.replace(/\\n/g, '<br>');\r\n    },\r\n    \r\n    formatTime(timestamp) {\r\n      return NotificationService.formatNotificationTime(timestamp);\r\n    },\r\n    \r\n    getNotificationIcon(type) {\r\n      return NotificationService.getNotificationIcon(type);\r\n    },\r\n    \r\n    getNotificationStyle(type) {\r\n      return NotificationService.getNotificationStyle(type);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.notification-panel {\r\n  max-height: 500px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.notification-list {\r\n  max-height: 400px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.notification-item {\r\n  background-color: #f8f9fa;\r\n  border: 1px solid #e9ecef;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.notification-item:hover {\r\n  background-color: #e9ecef;\r\n  transform: translateX(2px);\r\n}\r\n\r\n.notification-item.unread {\r\n  background-color: #fff3cd;\r\n  border-color: #ffeaa7;\r\n}\r\n\r\n.notification-icon {\r\n  width: 30px;\r\n  text-align: center;\r\n}\r\n\r\n.notification-content {\r\n  line-height: 1.4;\r\n}\r\n\r\n.notification-text {\r\n  font-size: 0.9rem;\r\n  color: #333;\r\n}\r\n\r\n.notification-meta {\r\n  font-size: 0.8rem;\r\n}\r\n\r\n.notification-actions {\r\n  opacity: 0;\r\n  transition: opacity 0.2s ease;\r\n}\r\n\r\n.notification-item:hover .notification-actions {\r\n  opacity: 1;\r\n}\r\n\r\n/* Custom scrollbar for notification list */\r\n.notification-list::-webkit-scrollbar {\r\n  width: 6px;\r\n}\r\n\r\n.notification-list::-webkit-scrollbar-track {\r\n  background: #f1f1f1;\r\n  border-radius: 3px;\r\n}\r\n\r\n.notification-list::-webkit-scrollbar-thumb {\r\n  background: #888;\r\n  border-radius: 3px;\r\n}\r\n\r\n.notification-list::-webkit-scrollbar-thumb:hover {\r\n  background: #555;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}