{"ast":null,"code":"import _toConsumableArray from \"C:/Users/ansmu/Desktop/Web/NEW/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, createStaticVNode as _createStaticVNode } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"mark-breakdown\"\n};\nvar _hoisted_2 = {\n  \"class\": \"d-flex justify-content-between align-items-center mb-4\"\n};\nvar _hoisted_3 = {\n  \"class\": \"d-flex gap-2\"\n};\nvar _hoisted_4 = {\n  \"class\": \"card mb-4\"\n};\nvar _hoisted_5 = {\n  \"class\": \"card-body\"\n};\nvar _hoisted_6 = {\n  \"class\": \"row align-items-center\"\n};\nvar _hoisted_7 = {\n  \"class\": \"col-md-4\"\n};\nvar _hoisted_8 = [\"value\"];\nvar _hoisted_9 = {\n  key: 0,\n  \"class\": \"col-md-4\"\n};\nvar _hoisted_10 = [\"value\"];\nvar _hoisted_11 = {\n  \"class\": \"col-md-4\"\n};\nvar _hoisted_12 = {\n  key: 0,\n  \"class\": \"text-center p-5\"\n};\nvar _hoisted_13 = {\n  \"class\": \"row mb-4\"\n};\nvar _hoisted_14 = {\n  \"class\": \"col-md-3\"\n};\nvar _hoisted_15 = {\n  \"class\": \"card stat-card bg-primary text-white\"\n};\nvar _hoisted_16 = {\n  \"class\": \"card-body text-center\"\n};\nvar _hoisted_17 = {\n  \"class\": \"col-md-3\"\n};\nvar _hoisted_18 = {\n  \"class\": \"card stat-card bg-info text-white\"\n};\nvar _hoisted_19 = {\n  \"class\": \"card-body text-center\"\n};\nvar _hoisted_20 = {\n  \"class\": \"col-md-3\"\n};\nvar _hoisted_21 = {\n  \"class\": \"card stat-card bg-success text-white\"\n};\nvar _hoisted_22 = {\n  \"class\": \"card-body text-center\"\n};\nvar _hoisted_23 = {\n  \"class\": \"col-md-3\"\n};\nvar _hoisted_24 = {\n  \"class\": \"card stat-card bg-warning text-dark\"\n};\nvar _hoisted_25 = {\n  \"class\": \"card-body text-center\"\n};\nvar _hoisted_26 = {\n  key: 2\n};\nvar _hoisted_27 = {\n  \"class\": \"card mb-4\"\n};\nvar _hoisted_28 = {\n  \"class\": \"card-body\"\n};\nvar _hoisted_29 = {\n  \"class\": \"row\"\n};\nvar _hoisted_30 = {\n  \"class\": \"col-md-4\"\n};\nvar _hoisted_31 = {\n  \"class\": \"d-flex justify-content-between align-items-center mb-1\"\n};\nvar _hoisted_32 = {\n  \"class\": \"progress\",\n  style: {\n    \"height\": \"8px\"\n  }\n};\nvar _hoisted_33 = {\n  \"class\": \"text-muted\"\n};\nvar _hoisted_34 = {\n  key: 0,\n  \"class\": \"card mb-4\"\n};\nvar _hoisted_35 = {\n  \"class\": \"card-header\"\n};\nvar _hoisted_36 = {\n  \"class\": \"mb-0\"\n};\nvar _hoisted_37 = {\n  \"class\": \"card-body\"\n};\nvar _hoisted_38 = {\n  \"class\": \"row\"\n};\nvar _hoisted_39 = {\n  \"class\": \"col-md-6\"\n};\nvar _hoisted_40 = {\n  \"class\": \"student-summary\"\n};\nvar _hoisted_41 = {\n  \"class\": \"row text-center mb-4\"\n};\nvar _hoisted_42 = {\n  \"class\": \"col-4\"\n};\nvar _hoisted_43 = {\n  \"class\": \"metric-box\"\n};\nvar _hoisted_44 = {\n  \"class\": \"text-primary\"\n};\nvar _hoisted_45 = {\n  \"class\": \"col-4\"\n};\nvar _hoisted_46 = {\n  \"class\": \"metric-box\"\n};\nvar _hoisted_47 = {\n  \"class\": \"text-success\"\n};\nvar _hoisted_48 = {\n  \"class\": \"col-4\"\n};\nvar _hoisted_49 = {\n  \"class\": \"metric-box\"\n};\nvar _hoisted_50 = {\n  \"class\": \"text-info\"\n};\nvar _hoisted_51 = {\n  \"class\": \"table-responsive\"\n};\nvar _hoisted_52 = {\n  \"class\": \"table table-sm table-hover\"\n};\nvar _hoisted_53 = {\n  \"class\": \"text-primary\"\n};\nvar _hoisted_54 = {\n  \"class\": \"col-md-6\"\n};\nvar _hoisted_55 = {\n  \"class\": \"mt-4\"\n};\nvar _hoisted_56 = {\n  \"class\": \"row\"\n};\nvar _hoisted_57 = {\n  \"class\": \"col-6\"\n};\nvar _hoisted_58 = {\n  \"class\": \"list-unstyled\"\n};\nvar _hoisted_59 = {\n  \"class\": \"col-6\"\n};\nvar _hoisted_60 = {\n  \"class\": \"list-unstyled\"\n};\nvar _hoisted_61 = {\n  \"class\": \"card\"\n};\nvar _hoisted_62 = {\n  \"class\": \"card-header d-flex justify-content-between align-items-center\"\n};\nvar _hoisted_63 = {\n  \"class\": \"mb-0\"\n};\nvar _hoisted_64 = {\n  \"class\": \"btn-group btn-group-sm\"\n};\nvar _hoisted_65 = {\n  \"class\": \"card-body p-0\"\n};\nvar _hoisted_66 = {\n  \"class\": \"table-responsive\"\n};\nvar _hoisted_67 = {\n  \"class\": \"table table-hover mb-0\"\n};\nvar _hoisted_68 = {\n  \"class\": \"table-light\"\n};\nvar _hoisted_69 = {\n  key: 0\n};\nvar _hoisted_70 = {\n  \"class\": \"text-muted\"\n};\nvar _hoisted_71 = {\n  key: 1,\n  \"class\": \"text-center\"\n};\nvar _hoisted_72 = {\n  key: 0\n};\nvar _hoisted_73 = {\n  \"class\": \"d-flex align-items-center\"\n};\nvar _hoisted_74 = {\n  \"class\": \"avatar me-3\"\n};\nvar _hoisted_75 = {\n  \"class\": \"text-muted\"\n};\nvar _hoisted_76 = {\n  key: 0\n};\nvar _hoisted_77 = {\n  \"class\": \"text-muted\"\n};\nvar _hoisted_78 = {\n  key: 1,\n  \"class\": \"text-muted\"\n};\nvar _hoisted_79 = {\n  \"class\": \"text-center\"\n};\nvar _hoisted_80 = {\n  \"class\": \"text-center\"\n};\nvar _hoisted_81 = {\n  key: 1,\n  \"class\": \"text-center\"\n};\nvar _hoisted_82 = {\n  \"class\": \"badge bg-secondary\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[12] || (_cache[12] = _createElementVNode(\"h1\", null, [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-chart-line me-2\"\n  }), _createTextVNode(\"Mark Breakdown Analysis\")], -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n    \"class\": \"btn btn-success\",\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $options.exportBreakdown && $options.exportBreakdown.apply($options, arguments);\n    })\n  }, _cache[10] || (_cache[10] = [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-file-export me-2\"\n  }, null, -1 /* CACHED */), _createTextVNode(\"Export Report \")])), _createElementVNode(\"button\", {\n    \"class\": \"btn ]; // Auto-select course from route if available if (this.$route.params.courseId || this.courseId) { this.selectedCourseId = parseInt(this.$route.params.courseId || this.courseId); await this.loadCourseData(); } } catch (error) {ine-secondary\",\n    onClick: _cache[1] || (_cache[1] = function () {\n      return $options.refreshData && $options.refreshData.apply($options, arguments);\n    })\n  }, _cache[11] || (_cache[11] = [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-sync me-2\"\n  }, null, -1 /* CACHED */), _createTextVNode(\"Refresh \")]))])]), _createCommentVNode(\" Filters \"), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_cache[14] || (_cache[14] = _createElementVNode(\"label\", {\n    \"class\": \"form-label fw-bold\"\n  }, \"Course:\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n      return $data.selectedCourseId = $event;\n    }),\n    onChange: _cache[3] || (_cache[3] = function () {\n      return $options.loadCourseData && $options.loadCourseData.apply($options, arguments);\n    }),\n    \"class\": \"form-select\"\n  }, [_cache[13] || (_cache[13] = _createElementVNode(\"option\", {\n    value: \"\"\n  }, \"-- Select Course --\", -1 /* CACHED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.courses, function (course) {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: course.id,\n      value: course.id\n    }, _toDisplayString(course.code) + \" - \" + _toDisplayString(course.name), 9 /* TEXT, PROPS */, _hoisted_8);\n  }), 128 /* KEYED_FRAGMENT */))], 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, $data.selectedCourseId]])]), $options.currentUserRole === 'lecturer' || $options.currentUserRole === 'advisor' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_cache[16] || (_cache[16] = _createElementVNode(\"label\", {\n    \"class\": \"form-label fw-bold\"\n  }, \"Student:\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = function ($event) {\n      return $data.selectedStudentId = $event;\n    }),\n    onChange: _cache[5] || (_cache[5] = function () {\n      return $options.loadStudentBreakdown && $options.loadStudentBreakdown.apply($options, arguments);\n    }),\n    \"class\": \"form-select\"\n  }, [_cache[15] || (_cache[15] = _createElementVNode(\"option\", {\n    value: \"\"\n  }, \"-- All Students --\", -1 /* CACHED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.students, function (student) {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: student.id,\n      value: student.id\n    }, _toDisplayString(student.name) + \" (\" + _toDisplayString(student.matric_number) + \") \", 9 /* TEXT, PROPS */, _hoisted_10);\n  }), 128 /* KEYED_FRAGMENT */))], 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, $data.selectedStudentId]])])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_11, [_cache[18] || (_cache[18] = _createElementVNode(\"label\", {\n    \"class\": \"form-label fw-bold\"\n  }, \"Assessment Type:\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = function ($event) {\n      return $data.selectedAssessmentType = $event;\n    }),\n    onChange: _cache[7] || (_cache[7] = function () {\n      return $options.filterBreakdown && $options.filterBreakdown.apply($options, arguments);\n    }),\n    \"class\": \"form-select\"\n  }, _cache[17] || (_cache[17] = [_createStaticVNode(\"<option value=\\\"\\\" data-v-446c57a4>-- All Types --</option><option value=\\\"quiz\\\" data-v-446c57a4>Quiz</option><option value=\\\"assignment\\\" data-v-446c57a4>Assignment</option><option value=\\\"midterm\\\" data-v-446c57a4>Midterm</option><option value=\\\"final_exam\\\" data-v-446c57a4>Final Exam</option><option value=\\\"project\\\" data-v-446c57a4>Project</option>\", 6)]), 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, $data.selectedAssessmentType]])])])])]), _createCommentVNode(\" Loading State \"), $data.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, _cache[19] || (_cache[19] = [_createElementVNode(\"div\", {\n    \"class\": \"spinner-border text-primary\",\n    role: \"status\"\n  }, [_createElementVNode(\"span\", {\n    \"class\": \"visually-hidden\"\n  }, \"Loading...\")], -1 /* CACHED */), _createElementVNode(\"p\", {\n    \"class\": \"mt-3 text-muted\"\n  }, \"Loading mark breakdown...\", -1 /* CACHED */)]))) : $data.selectedCourseId && $data.courseStats ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" Course Overview Stats \"), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"div\", _hoisted_16, [_cache[20] || (_cache[20] = _createElementVNode(\"i\", {\n    \"class\": \"fas fa-users fa-2x mb-2\"\n  }, null, -1 /* CACHED */)), _createElementVNode(\"h4\", null, _toDisplayString($data.courseStats.totalStudents), 1 /* TEXT */), _cache[21] || (_cache[21] = _createElementVNode(\"p\", {\n    \"class\": \"mb-0\"\n  }, \"Total Students\", -1 /* CACHED */))])])]), _createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"div\", _hoisted_19, [_cache[22] || (_cache[22] = _createElementVNode(\"i\", {\n    \"class\": \"fas fa-tasks fa-2x mb-2\"\n  }, null, -1 /* CACHED */)), _createElementVNode(\"h4\", null, _toDisplayString($data.courseStats.totalAssessments), 1 /* TEXT */), _cache[23] || (_cache[23] = _createElementVNode(\"p\", {\n    \"class\": \"mb-0\"\n  }, \"Assessments\", -1 /* CACHED */))])])]), _createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"div\", _hoisted_21, [_createElementVNode(\"div\", _hoisted_22, [_cache[24] || (_cache[24] = _createElementVNode(\"i\", {\n    \"class\": \"fas fa-percentage fa-2x mb-2\"\n  }, null, -1 /* CACHED */)), _createElementVNode(\"h4\", null, _toDisplayString($data.courseStats.classAverage) + \"%\", 1 /* TEXT */), _cache[25] || (_cache[25] = _createElementVNode(\"p\", {\n    \"class\": \"mb-0\"\n  }, \"Class Average\", -1 /* CACHED */))])])]), _createElementVNode(\"div\", _hoisted_23, [_createElementVNode(\"div\", _hoisted_24, [_createElementVNode(\"div\", _hoisted_25, [_cache[26] || (_cache[26] = _createElementVNode(\"i\", {\n    \"class\": \"fas fa-exclamation-triangle fa-2x mb-2\"\n  }, null, -1 /* CACHED */)), _createElementVNode(\"h4\", null, _toDisplayString($data.courseStats.atRiskStudents), 1 /* TEXT */), _cache[27] || (_cache[27] = _createElementVNode(\"p\", {\n    \"class\": \"mb-0\"\n  }, \"At Risk\", -1 /* CACHED */))])])])])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Detailed Breakdown \"), $data.selectedCourseId ? (_openBlock(), _createElementBlock(\"div\", _hoisted_26, [_createCommentVNode(\" Assessment Breakdown Chart \"), _createElementVNode(\"div\", _hoisted_27, [_cache[30] || (_cache[30] = _createElementVNode(\"div\", {\n    \"class\": \"card-header\"\n  }, [_createElementVNode(\"h5\", {\n    \"class\": \"mb-0\"\n  }, [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-chart-bar me-2\"\n  }), _createTextVNode(\"Assessment Performance Overview \")])], -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_28, [_createElementVNode(\"div\", _hoisted_29, [_cache[29] || (_cache[29] = _createElementVNode(\"div\", {\n    \"class\": \"col-md-8\"\n  }, [_createElementVNode(\"canvas\", {\n    id: \"assessmentChart\",\n    height: \"300\"\n  })], -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_30, [_cache[28] || (_cache[28] = _createElementVNode(\"h6\", null, \"Assessment Distribution\", -1 /* CACHED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.assessmentBreakdown, function (assessment) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: assessment.type,\n      \"class\": \"mb-3\"\n    }, [_createElementVNode(\"div\", _hoisted_31, [_createElementVNode(\"span\", {\n      \"class\": _normalizeClass([\"badge\", $options.getAssessmentBadgeClass(assessment.type)])\n    }, _toDisplayString($options.formatAssessmentType(assessment.type)), 3 /* TEXT, CLASS */), _createElementVNode(\"strong\", null, _toDisplayString(assessment.weightage) + \"%\", 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_32, [_createElementVNode(\"div\", {\n      \"class\": _normalizeClass([\"progress-bar\", $options.getAssessmentProgressClass(assessment.type)]),\n      style: _normalizeStyle({\n        width: assessment.weightage + '%'\n      })\n    }, null, 6 /* CLASS, STYLE */)]), _createElementVNode(\"small\", _hoisted_33, \" Average: \" + _toDisplayString(assessment.average) + \"% | Submitted: \" + _toDisplayString(assessment.submitted) + \"/\" + _toDisplayString(assessment.total), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])]), _createCommentVNode(\" Individual Student Breakdown (if selected) \"), $data.selectedStudentId && $data.studentBreakdown ? (_openBlock(), _createElementBlock(\"div\", _hoisted_34, [_createElementVNode(\"div\", _hoisted_35, [_createElementVNode(\"h5\", _hoisted_36, [_cache[31] || (_cache[31] = _createElementVNode(\"i\", {\n    \"class\": \"fas fa-user-graduate me-2\"\n  }, null, -1 /* CACHED */)), _createTextVNode(\" Individual Student Analysis: \" + _toDisplayString($data.studentBreakdown.name), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_37, [_createElementVNode(\"div\", _hoisted_38, [_createElementVNode(\"div\", _hoisted_39, [_createElementVNode(\"div\", _hoisted_40, [_createElementVNode(\"div\", _hoisted_41, [_createElementVNode(\"div\", _hoisted_42, [_createElementVNode(\"div\", _hoisted_43, [_createElementVNode(\"h3\", _hoisted_44, _toDisplayString($data.studentBreakdown.finalMark) + \"%\", 1 /* TEXT */), _cache[32] || (_cache[32] = _createElementVNode(\"p\", {\n    \"class\": \"text-muted mb-0\"\n  }, \"Final Mark\", -1 /* CACHED */))])]), _createElementVNode(\"div\", _hoisted_45, [_createElementVNode(\"div\", _hoisted_46, [_createElementVNode(\"h3\", _hoisted_47, _toDisplayString($data.studentBreakdown.grade), 1 /* TEXT */), _cache[33] || (_cache[33] = _createElementVNode(\"p\", {\n    \"class\": \"text-muted mb-0\"\n  }, \"Grade\", -1 /* CACHED */))])]), _createElementVNode(\"div\", _hoisted_48, [_createElementVNode(\"div\", _hoisted_49, [_createElementVNode(\"h3\", _hoisted_50, _toDisplayString($data.studentBreakdown.rank) + \"/\" + _toDisplayString($data.courseStats.totalStudents), 1 /* TEXT */), _cache[34] || (_cache[34] = _createElementVNode(\"p\", {\n    \"class\": \"text-muted mb-0\"\n  }, \"Class Rank\", -1 /* CACHED */))])])]), _cache[36] || (_cache[36] = _createElementVNode(\"h6\", null, \"Assessment Performance\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_51, [_createElementVNode(\"table\", _hoisted_52, [_cache[35] || (_cache[35] = _createElementVNode(\"thead\", {\n    \"class\": \"table-light\"\n  }, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Assessment\"), _createElementVNode(\"th\", null, \"Type\"), _createElementVNode(\"th\", null, \"Score\"), _createElementVNode(\"th\", null, \"Weighted\"), _createElementVNode(\"th\", null, \"Class Avg\"), _createElementVNode(\"th\", null, \"Status\")])], -1 /* CACHED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.studentBreakdown.assessments, function (assessment) {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: assessment.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(assessment.name), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"span\", {\n      \"class\": _normalizeClass([\"badge badge-sm\", $options.getAssessmentBadgeClass(assessment.type)])\n    }, _toDisplayString($options.formatAssessmentType(assessment.type)), 3 /* TEXT, CLASS */)]), _createElementVNode(\"td\", null, [_createElementVNode(\"span\", {\n      \"class\": _normalizeClass($options.getScoreClass(assessment.percentage))\n    }, _toDisplayString(assessment.obtained) + \"/\" + _toDisplayString(assessment.max_marks) + \" (\" + _toDisplayString(assessment.percentage) + \"%) \", 3 /* TEXT, CLASS */)]), _createElementVNode(\"td\", null, [_createElementVNode(\"strong\", _hoisted_53, _toDisplayString(assessment.weighted) + \"%\", 1 /* TEXT */)]), _createElementVNode(\"td\", null, _toDisplayString(assessment.classAverage) + \"%\", 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"span\", {\n      \"class\": _normalizeClass([\"badge\", $options.getPerformanceStatusClass(assessment.percentage, assessment.classAverage)])\n    }, _toDisplayString($options.getPerformanceStatus(assessment.percentage, assessment.classAverage)), 3 /* TEXT, CLASS */)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])])])]), _createElementVNode(\"div\", _hoisted_54, [_cache[42] || (_cache[42] = _createElementVNode(\"h6\", null, \"Performance Trends\", -1 /* CACHED */)), _cache[43] || (_cache[43] = _createElementVNode(\"canvas\", {\n    id: \"studentTrendChart\",\n    height: \"200\"\n  }, null, -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_55, [_cache[41] || (_cache[41] = _createElementVNode(\"h6\", null, \"Strengths & Areas for Improvement\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_56, [_createElementVNode(\"div\", _hoisted_57, [_cache[38] || (_cache[38] = _createElementVNode(\"h6\", {\n    \"class\": \"text-success\"\n  }, \"Strengths\", -1 /* CACHED */)), _createElementVNode(\"ul\", _hoisted_58, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.studentBreakdown.strengths, function (strength) {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: strength,\n      \"class\": \"mb-1\"\n    }, [_cache[37] || (_cache[37] = _createElementVNode(\"i\", {\n      \"class\": \"fas fa-check-circle text-success me-2\"\n    }, null, -1 /* CACHED */)), _createTextVNode(_toDisplayString(strength), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", _hoisted_59, [_cache[40] || (_cache[40] = _createElementVNode(\"h6\", {\n    \"class\": \"text-warning\"\n  }, \"Improvements\", -1 /* CACHED */)), _createElementVNode(\"ul\", _hoisted_60, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.studentBreakdown.improvements, function (improvement) {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: improvement,\n      \"class\": \"mb-1\"\n    }, [_cache[39] || (_cache[39] = _createElementVNode(\"i\", {\n      \"class\": \"fas fa-exclamation-triangle text-warning me-2\"\n    }, null, -1 /* CACHED */)), _createTextVNode(_toDisplayString(improvement), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])])])])])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Class Performance Table \"), _createElementVNode(\"div\", _hoisted_61, [_createElementVNode(\"div\", _hoisted_62, [_createElementVNode(\"h5\", _hoisted_63, [_cache[44] || (_cache[44] = _createElementVNode(\"i\", {\n    \"class\": \"fas fa-table me-2\"\n  }, null, -1 /* CACHED */)), _createTextVNode(\" \" + _toDisplayString($data.selectedStudentId ? 'Student' : 'Class') + \" Performance Breakdown \", 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_64, [_createElementVNode(\"button\", {\n    \"class\": _normalizeClass([\"btn btn-outline-primary\", {\n      active: $data.viewMode === 'summary'\n    }]),\n    onClick: _cache[8] || (_cache[8] = function ($event) {\n      return $options.toggleView('summary');\n    })\n  }, \" Summary \", 2 /* CLASS */), _createElementVNode(\"button\", {\n    \"class\": _normalizeClass([\"btn btn-outline-primary\", {\n      active: $data.viewMode === 'detailed'\n    }]),\n    onClick: _cache[9] || (_cache[9] = function ($event) {\n      return $options.toggleView('detailed');\n    })\n  }, \" Detailed \", 2 /* CLASS */)])]), _createElementVNode(\"div\", _hoisted_65, [_createElementVNode(\"div\", _hoisted_66, [_createElementVNode(\"table\", _hoisted_67, [_createElementVNode(\"thead\", _hoisted_68, [_createElementVNode(\"tr\", null, [!$data.selectedStudentId ? (_openBlock(), _createElementBlock(\"th\", _hoisted_69, \"Student\")) : _createCommentVNode(\"v-if\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.uniqueAssessments, function (assessment) {\n    return _openBlock(), _createElementBlock(\"th\", {\n      key: assessment.id,\n      \"class\": \"text-center\"\n    }, [_createTextVNode(_toDisplayString(assessment.name) + \" \", 1 /* TEXT */), _cache[45] || (_cache[45] = _createElementVNode(\"br\", null, null, -1 /* CACHED */)), _createElementVNode(\"small\", _hoisted_70, \"(\" + _toDisplayString(assessment.weightage) + \"%)\", 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */)), _cache[46] || (_cache[46] = _createElementVNode(\"th\", {\n    \"class\": \"text-center\"\n  }, \"Final Mark\", -1 /* CACHED */)), _cache[47] || (_cache[47] = _createElementVNode(\"th\", {\n    \"class\": \"text-center\"\n  }, \"Grade\", -1 /* CACHED */)), !$data.selectedStudentId ? (_openBlock(), _createElementBlock(\"th\", _hoisted_71, \"Rank\")) : _createCommentVNode(\"v-if\", true)])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.filteredStudentMarks, function (student, index) {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: student.id\n    }, [!$data.selectedStudentId ? (_openBlock(), _createElementBlock(\"td\", _hoisted_72, [_createElementVNode(\"div\", _hoisted_73, [_createElementVNode(\"div\", _hoisted_74, _toDisplayString($options.getStudentInitials(student.name)), 1 /* TEXT */), _createElementVNode(\"div\", null, [_createElementVNode(\"strong\", null, _toDisplayString(student.name), 1 /* TEXT */), _cache[48] || (_cache[48] = _createElementVNode(\"br\", null, null, -1 /* CACHED */)), _createElementVNode(\"small\", _hoisted_75, _toDisplayString(student.matric_number), 1 /* TEXT */)])])])) : _createCommentVNode(\"v-if\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.uniqueAssessments, function (assessment) {\n      return _openBlock(), _createElementBlock(\"td\", {\n        key: assessment.id,\n        \"class\": \"text-center\"\n      }, [student.marks[assessment.type] ? (_openBlock(), _createElementBlock(\"div\", _hoisted_76, [_createElementVNode(\"strong\", {\n        \"class\": _normalizeClass($options.getScoreClass(student.marks[assessment.type].percentage))\n      }, _toDisplayString(student.marks[assessment.type].percentage) + \"% \", 3 /* TEXT, CLASS */), _cache[49] || (_cache[49] = _createElementVNode(\"br\", null, null, -1 /* CACHED */)), _createElementVNode(\"small\", _hoisted_77, _toDisplayString(student.marks[assessment.type].obtained) + \"/\" + _toDisplayString(student.marks[assessment.type].max_mark), 1 /* TEXT */)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_78, _toConsumableArray(_cache[50] || (_cache[50] = [_createElementVNode(\"i\", {\n        \"class\": \"fas fa-minus\"\n      }, null, -1 /* CACHED */), _createElementVNode(\"br\", null, null, -1 /* CACHED */), _createElementVNode(\"small\", null, \"Not submitted\", -1 /* CACHED */)]))))]);\n    }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"td\", _hoisted_79, [_createElementVNode(\"strong\", {\n      \"class\": _normalizeClass([$options.getScoreClass(student.finalMark), \"fs-5\"])\n    }, _toDisplayString(student.finalMark) + \"% \", 3 /* TEXT, CLASS */)]), _createElementVNode(\"td\", _hoisted_80, [_createElementVNode(\"span\", {\n      \"class\": _normalizeClass([\"badge badge-lg\", $options.getGradeBadgeClass(student.grade)])\n    }, _toDisplayString(student.grade), 3 /* TEXT, CLASS */)]), !$data.selectedStudentId ? (_openBlock(), _createElementBlock(\"td\", _hoisted_81, [_createElementVNode(\"span\", _hoisted_82, _toDisplayString(index + 1), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])])])])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 3\n  }, [_createCommentVNode(\" No Course Selected \"), _cache[51] || (_cache[51] = _createElementVNode(\"div\", {\n    \"class\": \"text-center p-5\"\n  }, [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-chart-line fa-4x text-muted mb-3\"\n  }), _createElementVNode(\"h3\", {\n    \"class\": \"text-muted\"\n  }, \"Select a Course\"), _createElementVNode(\"p\", {\n    \"class\": \"text-muted\"\n  }, \"Choose a course from the dropdown above to view detailed mark breakdown analysis.\")], -1 /* CACHED */))], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))]);\n}","map":{"version":3,"names":["style","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","onClick","_cache","$options","exportBreakdown","apply","arguments","refreshData","_createCommentVNode","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","$data","selectedCourseId","$event","onChange","loadCourseData","value","_Fragment","_renderList","courses","course","key","id","code","_toDisplayString","name","_hoisted_8","currentUserRole","_hoisted_9","selectedStudentId","loadStudentBreakdown","students","student","matric_number","_hoisted_10","_hoisted_11","selectedAssessmentType","filterBreakdown","isLoading","_hoisted_12","role","courseStats","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","totalStudents","_hoisted_17","_hoisted_18","_hoisted_19","totalAssessments","_hoisted_20","_hoisted_21","_hoisted_22","classAverage","_hoisted_23","_hoisted_24","_hoisted_25","atRiskStudents","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","height","_hoisted_30","assessmentBreakdown","assessment","type","_hoisted_31","_normalizeClass","getAssessmentBadgeClass","formatAssessmentType","weightage","_hoisted_32","getAssessmentProgressClass","_normalizeStyle","width","_hoisted_33","average","submitted","total","studentBreakdown","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","finalMark","_hoisted_45","_hoisted_46","_hoisted_47","grade","_hoisted_48","_hoisted_49","_hoisted_50","rank","_hoisted_51","_hoisted_52","assessments","getScoreClass","percentage","obtained","max_marks","_hoisted_53","weighted","getPerformanceStatusClass","getPerformanceStatus","_hoisted_54","_hoisted_55","_hoisted_56","_hoisted_57","_hoisted_58","strengths","strength","_hoisted_59","_hoisted_60","improvements","improvement","_hoisted_61","_hoisted_62","_hoisted_63","_hoisted_64","active","viewMode","toggleView","_hoisted_65","_hoisted_66","_hoisted_67","_hoisted_68","_hoisted_69","uniqueAssessments","_hoisted_70","_hoisted_71","filteredStudentMarks","index","_hoisted_72","_hoisted_73","_hoisted_74","getStudentInitials","_hoisted_75","marks","_hoisted_76","_hoisted_77","max_mark","_hoisted_78","_toConsumableArray","_hoisted_79","_hoisted_80","getGradeBadgeClass","_hoisted_81","_hoisted_82"],"sources":["C:\\Users\\ansmu\\Desktop\\Web\\NEW\\course-mark-management\\frontend\\src\\views\\shared\\MarkBreakdown.vue"],"sourcesContent":["<template>\r\n  <div class=\"mark-breakdown\">\r\n    <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n      <h1><i class=\"fas fa-chart-line me-2\"></i>Mark Breakdown Analysis</h1>\r\n      <div class=\"d-flex gap-2\">\r\n        <button class=\"btn btn-success\" @click=\"exportBreakdown\">\r\n          <i class=\"fas fa-file-export me-2\"></i>Export Report\r\n        </button>\r\n        <button class=\"btn         ];\r\n        \r\n        // Auto-select course from route if available\r\n        if (this.$route.params.courseId || this.courseId) {\r\n          this.selectedCourseId = parseInt(this.$route.params.courseId || this.courseId);\r\n          await this.loadCourseData();\r\n        }\r\n      } catch (error) {ine-secondary\" @click=\"refreshData\">\r\n          <i class=\"fas fa-sync me-2\"></i>Refresh\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Filters -->\r\n    <div class=\"card mb-4\">\r\n      <div class=\"card-body\">\r\n        <div class=\"row align-items-center\">\r\n          <div class=\"col-md-4\">\r\n            <label class=\"form-label fw-bold\">Course:</label>\r\n            <select v-model=\"selectedCourseId\" @change=\"loadCourseData\" class=\"form-select\">\r\n              <option value=\"\">-- Select Course --</option>\r\n              <option v-for=\"course in courses\" :key=\"course.id\" :value=\"course.id\">\r\n                {{ course.code }} - {{ course.name }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <div class=\"col-md-4\" v-if=\"currentUserRole === 'lecturer' || currentUserRole === 'advisor'\">\r\n            <label class=\"form-label fw-bold\">Student:</label>\r\n            <select v-model=\"selectedStudentId\" @change=\"loadStudentBreakdown\" class=\"form-select\">\r\n              <option value=\"\">-- All Students --</option>\r\n              <option v-for=\"student in students\" :key=\"student.id\" :value=\"student.id\">\r\n                {{ student.name }} ({{ student.matric_number }})\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <div class=\"col-md-4\">\r\n            <label class=\"form-label fw-bold\">Assessment Type:</label>\r\n            <select v-model=\"selectedAssessmentType\" @change=\"filterBreakdown\" class=\"form-select\">\r\n              <option value=\"\">-- All Types --</option>\r\n              <option value=\"quiz\">Quiz</option>\r\n              <option value=\"assignment\">Assignment</option>\r\n              <option value=\"midterm\">Midterm</option>\r\n              <option value=\"final_exam\">Final Exam</option>\r\n              <option value=\"project\">Project</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Loading State -->\r\n    <div v-if=\"isLoading\" class=\"text-center p-5\">\r\n      <div class=\"spinner-border text-primary\" role=\"status\">\r\n        <span class=\"visually-hidden\">Loading...</span>\r\n      </div>\r\n      <p class=\"mt-3 text-muted\">Loading mark breakdown...</p>\r\n    </div>\r\n\r\n    <!-- Course Overview Stats -->\r\n    <div v-else-if=\"selectedCourseId && courseStats\" class=\"row mb-4\">\r\n      <div class=\"col-md-3\">\r\n        <div class=\"card stat-card bg-primary text-white\">\r\n          <div class=\"card-body text-center\">\r\n            <i class=\"fas fa-users fa-2x mb-2\"></i>\r\n            <h4>{{ courseStats.totalStudents }}</h4>\r\n            <p class=\"mb-0\">Total Students</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n        <div class=\"card stat-card bg-info text-white\">\r\n          <div class=\"card-body text-center\">\r\n            <i class=\"fas fa-tasks fa-2x mb-2\"></i>\r\n            <h4>{{ courseStats.totalAssessments }}</h4>\r\n            <p class=\"mb-0\">Assessments</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n        <div class=\"card stat-card bg-success text-white\">\r\n          <div class=\"card-body text-center\">\r\n            <i class=\"fas fa-percentage fa-2x mb-2\"></i>\r\n            <h4>{{ courseStats.classAverage }}%</h4>\r\n            <p class=\"mb-0\">Class Average</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n        <div class=\"card stat-card bg-warning text-dark\">\r\n          <div class=\"card-body text-center\">\r\n            <i class=\"fas fa-exclamation-triangle fa-2x mb-2\"></i>\r\n            <h4>{{ courseStats.atRiskStudents }}</h4>\r\n            <p class=\"mb-0\">At Risk</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Detailed Breakdown -->\r\n    <div v-if=\"selectedCourseId\">\r\n      <!-- Assessment Breakdown Chart -->\r\n      <div class=\"card mb-4\">\r\n        <div class=\"card-header\">\r\n          <h5 class=\"mb-0\">\r\n            <i class=\"fas fa-chart-bar me-2\"></i>Assessment Performance Overview\r\n          </h5>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-8\">\r\n              <canvas id=\"assessmentChart\" height=\"300\"></canvas>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n              <h6>Assessment Distribution</h6>\r\n              <div v-for=\"assessment in assessmentBreakdown\" :key=\"assessment.type\" class=\"mb-3\">\r\n                <div class=\"d-flex justify-content-between align-items-center mb-1\">\r\n                  <span class=\"badge\" :class=\"getAssessmentBadgeClass(assessment.type)\">\r\n                    {{ formatAssessmentType(assessment.type) }}\r\n                  </span>\r\n                  <strong>{{ assessment.weightage }}%</strong>\r\n                </div>\r\n                <div class=\"progress\" style=\"height: 8px;\">\r\n                  <div class=\"progress-bar\" :class=\"getAssessmentProgressClass(assessment.type)\" \r\n                       :style=\"{ width: assessment.weightage + '%' }\"></div>\r\n                </div>\r\n                <small class=\"text-muted\">\r\n                  Average: {{ assessment.average }}% | Submitted: {{ assessment.submitted }}/{{ assessment.total }}\r\n                </small>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Individual Student Breakdown (if selected) -->\r\n      <div v-if=\"selectedStudentId && studentBreakdown\" class=\"card mb-4\">\r\n        <div class=\"card-header\">\r\n          <h5 class=\"mb-0\">\r\n            <i class=\"fas fa-user-graduate me-2\"></i>\r\n            Individual Student Analysis: {{ studentBreakdown.name }}\r\n          </h5>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <div class=\"student-summary\">\r\n                <div class=\"row text-center mb-4\">\r\n                  <div class=\"col-4\">\r\n                    <div class=\"metric-box\">\r\n                      <h3 class=\"text-primary\">{{ studentBreakdown.finalMark }}%</h3>\r\n                      <p class=\"text-muted mb-0\">Final Mark</p>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-4\">\r\n                    <div class=\"metric-box\">\r\n                      <h3 class=\"text-success\">{{ studentBreakdown.grade }}</h3>\r\n                      <p class=\"text-muted mb-0\">Grade</p>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-4\">\r\n                    <div class=\"metric-box\">\r\n                      <h3 class=\"text-info\">{{ studentBreakdown.rank }}/{{ courseStats.totalStudents }}</h3>\r\n                      <p class=\"text-muted mb-0\">Class Rank</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <h6>Assessment Performance</h6>\r\n                <div class=\"table-responsive\">\r\n                  <table class=\"table table-sm table-hover\">\r\n                    <thead class=\"table-light\">\r\n                      <tr>\r\n                        <th>Assessment</th>\r\n                        <th>Type</th>\r\n                        <th>Score</th>\r\n                        <th>Weighted</th>\r\n                        <th>Class Avg</th>\r\n                        <th>Status</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr v-for=\"assessment in studentBreakdown.assessments\" :key=\"assessment.id\">\r\n                        <td>{{ assessment.name }}</td>\r\n                        <td>\r\n                          <span class=\"badge badge-sm\" :class=\"getAssessmentBadgeClass(assessment.type)\">\r\n                            {{ formatAssessmentType(assessment.type) }}\r\n                          </span>\r\n                        </td>\r\n                        <td>\r\n                          <span :class=\"getScoreClass(assessment.percentage)\">\r\n                            {{ assessment.obtained }}/{{ assessment.max_marks }}\r\n                            ({{ assessment.percentage }}%)\r\n                          </span>\r\n                        </td>\r\n                        <td>\r\n                          <strong class=\"text-primary\">{{ assessment.weighted }}%</strong>\r\n                        </td>\r\n                        <td>{{ assessment.classAverage }}%</td>\r\n                        <td>\r\n                          <span class=\"badge\" :class=\"getPerformanceStatusClass(assessment.percentage, assessment.classAverage)\">\r\n                            {{ getPerformanceStatus(assessment.percentage, assessment.classAverage) }}\r\n                          </span>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <h6>Performance Trends</h6>\r\n              <canvas id=\"studentTrendChart\" height=\"200\"></canvas>\r\n              \r\n              <div class=\"mt-4\">\r\n                <h6>Strengths & Areas for Improvement</h6>\r\n                <div class=\"row\">\r\n                  <div class=\"col-6\">\r\n                    <h6 class=\"text-success\">Strengths</h6>\r\n                    <ul class=\"list-unstyled\">\r\n                      <li v-for=\"strength in studentBreakdown.strengths\" :key=\"strength\" class=\"mb-1\">\r\n                        <i class=\"fas fa-check-circle text-success me-2\"></i>{{ strength }}\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <div class=\"col-6\">\r\n                    <h6 class=\"text-warning\">Improvements</h6>\r\n                    <ul class=\"list-unstyled\">\r\n                      <li v-for=\"improvement in studentBreakdown.improvements\" :key=\"improvement\" class=\"mb-1\">\r\n                        <i class=\"fas fa-exclamation-triangle text-warning me-2\"></i>{{ improvement }}\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Class Performance Table -->\r\n      <div class=\"card\">\r\n        <div class=\"card-header d-flex justify-content-between align-items-center\">\r\n          <h5 class=\"mb-0\">\r\n            <i class=\"fas fa-table me-2\"></i>\r\n            {{ selectedStudentId ? 'Student' : 'Class' }} Performance Breakdown\r\n          </h5>\r\n          <div class=\"btn-group btn-group-sm\">\r\n            <button class=\"btn btn-outline-primary\" @click=\"toggleView('summary')\" \r\n                    :class=\"{ active: viewMode === 'summary' }\">\r\n              Summary\r\n            </button>\r\n            <button class=\"btn btn-outline-primary\" @click=\"toggleView('detailed')\" \r\n                    :class=\"{ active: viewMode === 'detailed' }\">\r\n              Detailed\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-body p-0\">\r\n          <div class=\"table-responsive\">\r\n            <table class=\"table table-hover mb-0\">\r\n              <thead class=\"table-light\">\r\n                <tr>\r\n                  <th v-if=\"!selectedStudentId\">Student</th>\r\n                  <th v-for=\"assessment in uniqueAssessments\" :key=\"assessment.id\" class=\"text-center\">\r\n                    {{ assessment.name }}\r\n                    <br>\r\n                    <small class=\"text-muted\">({{ assessment.weightage }}%)</small>\r\n                  </th>\r\n                  <th class=\"text-center\">Final Mark</th>\r\n                  <th class=\"text-center\">Grade</th>\r\n                  <th v-if=\"!selectedStudentId\" class=\"text-center\">Rank</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr v-for=\"(student, index) in filteredStudentMarks\" :key=\"student.id\">\r\n                  <td v-if=\"!selectedStudentId\">\r\n                    <div class=\"d-flex align-items-center\">\r\n                      <div class=\"avatar me-3\">\r\n                        {{ getStudentInitials(student.name) }}\r\n                      </div>\r\n                      <div>\r\n                        <strong>{{ student.name }}</strong>\r\n                        <br>\r\n                        <small class=\"text-muted\">{{ student.matric_number }}</small>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                  <td v-for=\"assessment in uniqueAssessments\" :key=\"assessment.id\" class=\"text-center\">\r\n                    <div v-if=\"student.marks[assessment.type]\">\r\n                      <strong :class=\"getScoreClass(student.marks[assessment.type].percentage)\">\r\n                        {{ student.marks[assessment.type].percentage }}%\r\n                      </strong>\r\n                      <br>\r\n                      <small class=\"text-muted\">\r\n                        {{ student.marks[assessment.type].obtained }}/{{ student.marks[assessment.type].max_mark }}\r\n                      </small>\r\n                    </div>\r\n                    <div v-else class=\"text-muted\">\r\n                      <i class=\"fas fa-minus\"></i>\r\n                      <br>\r\n                      <small>Not submitted</small>\r\n                    </div>\r\n                  </td>\r\n                  <td class=\"text-center\">\r\n                    <strong :class=\"getScoreClass(student.finalMark)\" class=\"fs-5\">\r\n                      {{ student.finalMark }}%\r\n                    </strong>\r\n                  </td>\r\n                  <td class=\"text-center\">\r\n                    <span class=\"badge badge-lg\" :class=\"getGradeBadgeClass(student.grade)\">\r\n                      {{ student.grade }}\r\n                    </span>\r\n                  </td>\r\n                  <td v-if=\"!selectedStudentId\" class=\"text-center\">\r\n                    <span class=\"badge bg-secondary\">{{ index + 1 }}</span>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- No Course Selected -->\r\n    <div v-else class=\"text-center p-5\">\r\n      <i class=\"fas fa-chart-line fa-4x text-muted mb-3\"></i>\r\n      <h3 class=\"text-muted\">Select a Course</h3>\r\n      <p class=\"text-muted\">Choose a course from the dropdown above to view detailed mark breakdown analysis.</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { mapGetters } from 'vuex';\r\nimport Chart from 'chart.js/auto';\r\n\r\nexport default {\r\n  name: 'MarkBreakdown',\r\n  props: {\r\n    courseId: {\r\n      type: [String, Number],\r\n      default: null\r\n    },\r\n    userRole: {\r\n      type: String,\r\n      default: ''\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      courses: [],\r\n      students: [],\r\n      selectedCourseId: '',\r\n      selectedStudentId: '',\r\n      selectedAssessmentType: '',\r\n      isLoading: false,\r\n      viewMode: 'summary',\r\n      courseStats: null,\r\n      assessmentBreakdown: [],\r\n      studentBreakdown: null,\r\n      uniqueAssessments: [],\r\n      filteredStudentMarks: [],\r\n      assessmentChart: null,\r\n      studentTrendChart: null\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters('auth', ['getUser']),\r\n    currentUserRole() {\r\n      return this.userRole || this.getUser?.role || '';\r\n    }\r\n  },\r\n  mounted() {\r\n    this.loadCourses();\r\n  },\r\n  beforeUnmount() {\r\n    this.destroyCharts();\r\n  },\r\n  methods: {\r\n    async loadCourses() {\r\n      try {\r\n        const userId = this.getUser?.id || 4; // Use Student One (ID: 4) for testing\r\n        console.log('Loading courses for user ID:', userId, 'Role:', this.currentUserRole);\r\n\r\n        let endpoint = '';\r\n        if (this.currentUserRole === 'lecturer') {\r\n          endpoint = `/marks-api.php?action=lecturer_courses&lecturer_id=${userId}`;\r\n        } else if (this.currentUserRole === 'student') {\r\n          endpoint = `/breakdown-api.php?action=student_courses&student_id=${userId}`;\r\n        } else if (this.currentUserRole === 'advisor') {\r\n          endpoint = `/breakdown-api.php?action=advisor_courses&advisor_id=${userId}`;\r\n        } else {\r\n          // Default to student courses for testing\r\n          endpoint = `/breakdown-api.php?action=student_courses&student_id=4`;\r\n        }\r\n\r\n        console.log('API endpoint:', endpoint);\r\n        const response = await axios.get(endpoint);\r\n        this.courses = response.data.courses || [];\r\n        \r\n        console.log(`Loaded ${this.courses.length} courses for ${this.currentUserRole}:`, this.courses);\r\n        \r\n        // Add sample data if no courses are returned\r\n        if (this.courses.length === 0) {\r\n          console.log('No real courses found, adding sample courses');\r\n          this.courses = [\r\n            { id: 1, code: 'CS101', name: 'Introduction to Computer Science', semester: 'Fall 2024', academic_year: '2024/2025' },\r\n            { id: 2, code: 'MATH201', name: 'Calculus II', semester: 'Fall 2024', academic_year: '2024/2025' },\r\n            { id: 3, code: 'PHYS101', name: 'Physics I', semester: 'Fall 2024', academic_year: '2024/2025' }\r\n          ];\r\n        }\r\n        \r\n        // Auto-select course from route if available\r\n        if (this.$route.params.courseId) {\r\n          this.selectedCourseId = parseInt(this.$route.params.courseId);\r\n          await this.loadCourseData();\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading courses:', error);\r\n        // Fallback to sample data\r\n        this.courses = [\r\n          { id: 1, code: 'CS101', name: 'Introduction to Computer Science', semester: 'Fall 2024', academic_year: '2024/2025' },\r\n          { id: 2, code: 'MATH201', name: 'Calculus II', semester: 'Fall 2024', academic_year: '2024/2025' },\r\n          { id: 3, code: 'PHYS101', name: 'Physics I', semester: 'Fall 2024', academic_year: '2024/2025' }\r\n        ];\r\n        \r\n        // Auto-select course from route if available\r\n        if (this.$route.params.courseId || this.courseId) {\r\n          this.selectedCourseId = parseInt(this.$route.params.courseId || this.courseId);\r\n          await this.loadCourseData();\r\n        }\r\n      }\r\n    },\r\n\r\n    async loadCourseData() {\r\n      if (!this.selectedCourseId) {\r\n        this.clearData();\r\n        return;\r\n      }\r\n\r\n      this.isLoading = true;\r\n      try {\r\n        // Load students and marks for the course\r\n        const response = await axios.get(`/breakdown-api.php?action=course_breakdown&course_id=${this.selectedCourseId}`);\r\n        \r\n        if (response.data && response.data.students) {\r\n          // Map real data to component format\r\n          this.students = response.data.students || [];\r\n          this.uniqueAssessments = (response.data.components || []).map(comp => ({\r\n            ...comp,\r\n            id: comp.type // Use type as id for template key\r\n          }));\r\n          \r\n          // Use backend's component breakdown if available\r\n          if (response.data.component_breakdown) {\r\n            this.assessmentBreakdown = response.data.component_breakdown.map(item => ({\r\n              type: item.type,\r\n              weightage: item.weightage,\r\n              total: item.total_students,\r\n              submitted: item.submissions,\r\n              average: item.average_percentage\r\n            }));\r\n            \r\n            console.log('Component breakdown mapped:', this.assessmentBreakdown);\r\n          }\r\n          \r\n          // Map statistics with correct property names\r\n          if (response.data.statistics) {\r\n            this.courseStats = {\r\n              totalStudents: response.data.statistics.total_students,\r\n              totalAssessments: response.data.statistics.total_components,\r\n              classAverage: response.data.statistics.class_average,\r\n              atRiskStudents: response.data.statistics.at_risk_students\r\n            };\r\n          }\r\n          \r\n          console.log('Real data loaded:', {\r\n            students: this.students.length,\r\n            assessments: this.uniqueAssessments.length,\r\n            stats: this.courseStats,\r\n            breakdown: this.assessmentBreakdown\r\n          });\r\n          \r\n          // Only process if we don't have backend breakdown data\r\n          if (!response.data.component_breakdown) {\r\n            console.log('No backend breakdown data, processing marks...');\r\n            await this.processMarkBreakdown();\r\n          } else {\r\n            console.log('Using backend breakdown data, skipping processMarkBreakdown');\r\n          }\r\n        } else {\r\n          // No real data, create sample data for demonstration\r\n          console.log('No real data found, using sample data');\r\n          this.createSampleData();\r\n        }\r\n        \r\n        this.filteredStudentMarks = this.students;\r\n        \r\n        // If student role, auto-select current student\r\n        if (this.currentUserRole === 'student') {\r\n          this.selectedStudentId = this.getUser.id;\r\n          await this.loadStudentBreakdown();\r\n        }\r\n        \r\n        this.$nextTick(() => {\r\n          this.createAssessmentChart();\r\n        });\r\n        \r\n      } catch (error) {\r\n        console.error('Error loading course data:', error);\r\n        // Create sample data on error\r\n        console.log('Error occurred, using sample data fallback');\r\n        this.createSampleData();\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n\r\n    createSampleData() {\r\n      // Create sample course statistics\r\n      this.courseStats = {\r\n        totalStudents: 25,\r\n        totalAssessments: 6,\r\n        classAverage: 78.5,\r\n        atRiskStudents: 3\r\n      };\r\n\r\n      // Create sample assessments\r\n      this.uniqueAssessments = [\r\n        { id: 1, name: 'Quiz 1', type: 'quiz', max_marks: 20, weightage: 5, date: '2024-09-15' },\r\n        { id: 2, name: 'Assignment 1', type: 'assignment', max_marks: 100, weightage: 15, date: '2024-10-01' },\r\n        { id: 3, name: 'Midterm Exam', type: 'midterm', max_marks: 100, weightage: 30, date: '2024-10-15' },\r\n        { id: 4, name: 'Quiz 2', type: 'quiz', max_marks: 20, weightage: 5, date: '2024-11-01' },\r\n        { id: 5, name: 'Assignment 2', type: 'assignment', max_marks: 100, weightage: 15, date: '2024-11-15' },\r\n        { id: 6, name: 'Final Exam', type: 'final_exam', max_marks: 100, weightage: 30, date: '2024-12-10' }\r\n      ];\r\n\r\n      // Create sample students with marks\r\n      this.students = [\r\n        {\r\n          id: 1,\r\n          name: 'Alice Johnson',\r\n          matric_number: 'A123456',\r\n          email: 'alice@university.edu',\r\n          finalMark: 85.2,\r\n          grade: 'A',\r\n          marks: {\r\n            quiz: { obtained: 18, max_marks: 20, percentage: 90, weighted: 4.5 },\r\n            assignment: { obtained: 85, max_marks: 100, percentage: 85, weighted: 12.75 },\r\n            midterm: { obtained: 82, max_marks: 100, percentage: 82, weighted: 24.6 },\r\n            final_exam: { obtained: 88, max_marks: 100, percentage: 88, weighted: 26.4 }\r\n          }\r\n        },\r\n        {\r\n          id: 2,\r\n          name: 'Bob Smith',\r\n          matric_number: 'B234567',\r\n          email: 'bob@university.edu',\r\n          finalMark: 72.8,\r\n          grade: 'B',\r\n          marks: {\r\n            quiz: { obtained: 15, max_marks: 20, percentage: 75, weighted: 3.75 },\r\n            assignment: { obtained: 78, max_marks: 100, percentage: 78, weighted: 11.7 },\r\n            midterm: { obtained: 70, max_marks: 100, percentage: 70, weighted: 21 },\r\n            final_exam: { obtained: 75, max_marks: 100, percentage: 75, weighted: 22.5 }\r\n          }\r\n        },\r\n        {\r\n          id: 3,\r\n          name: 'Carol Davis',\r\n          matric_number: 'C345678',\r\n          email: 'carol@university.edu',\r\n          finalMark: 45.2,\r\n          grade: 'F',\r\n          marks: {\r\n            quiz: { obtained: 10, max_marks: 20, percentage: 50, weighted: 2.5 },\r\n            assignment: { obtained: 45, max_marks: 100, percentage: 45, weighted: 6.75 },\r\n            midterm: { obtained: 40, max_marks: 100, percentage: 40, weighted: 12 },\r\n            final_exam: { obtained: 48, max_marks: 100, percentage: 48, weighted: 14.4 }\r\n          }\r\n        }\r\n      ];\r\n\r\n      // Process the sample data\r\n      this.processMarkBreakdown();\r\n    },\r\n\r\n    async processMarkBreakdown() {\r\n      const breakdown = {};\r\n      \r\n      this.uniqueAssessments.forEach(assessment => {\r\n        if (!breakdown[assessment.type]) {\r\n          breakdown[assessment.type] = {\r\n            type: assessment.type,\r\n            weightage: 0,\r\n            total: 0,\r\n            submitted: 0,\r\n            totalMarks: 0,\r\n            obtainedMarks: 0\r\n          };\r\n        }\r\n        \r\n        breakdown[assessment.type].weightage += assessment.weightage || 0;\r\n        breakdown[assessment.type].total += this.students.length;\r\n        \r\n        this.students.forEach(student => {\r\n          if (student.marks && student.marks[assessment.type]) {\r\n            breakdown[assessment.type].submitted++;\r\n            breakdown[assessment.type].totalMarks += student.marks[assessment.type].max_mark || 0;\r\n            breakdown[assessment.type].obtainedMarks += student.marks[assessment.type].obtained || 0;\r\n          }\r\n        });\r\n      });\r\n      \r\n      this.assessmentBreakdown = Object.values(breakdown).map(item => ({\r\n        ...item,\r\n        average: item.totalMarks > 0 ? Math.round((item.obtainedMarks / item.totalMarks) * 100) : 0\r\n      }));\r\n    },\r\n\r\n    async calculateCourseStats() {\r\n      const totalStudents = this.students.length;\r\n      const totalAssessments = this.uniqueAssessments.length;\r\n      \r\n      let totalMarks = 0;\r\n      let atRiskCount = 0;\r\n      \r\n      this.students.forEach(student => {\r\n        const finalMark = this.calculateStudentFinalMark(student);\r\n        totalMarks += finalMark;\r\n        if (finalMark < 50) atRiskCount++;\r\n      });\r\n      \r\n      this.courseStats = {\r\n        totalStudents,\r\n        totalAssessments,\r\n        classAverage: totalStudents > 0 ? Math.round(totalMarks / totalStudents) : 0,\r\n        atRiskStudents: atRiskCount\r\n      };\r\n    },\r\n\r\n    async loadStudentBreakdown() {\r\n      if (!this.selectedStudentId) {\r\n        this.studentBreakdown = null;\r\n        return;\r\n      }\r\n\r\n      const student = this.students.find(s => s.id == this.selectedStudentId);\r\n      if (!student) return;\r\n\r\n      const assessments = this.uniqueAssessments.map(assessment => {\r\n        const mark = student.marks?.[assessment.type] || null;\r\n        const classTotal = this.students.reduce((sum, s) => \r\n          sum + (s.marks?.[assessment.type]?.obtained || 0), 0);\r\n        const classAverage = this.students.length > 0 ? \r\n          Math.round(classTotal / this.students.length) : 0;\r\n\r\n        return {\r\n          id: assessment.id,\r\n          name: assessment.name,\r\n          type: assessment.type,\r\n          obtained: mark?.obtained || 0,\r\n          max_marks: mark?.max_mark || assessment.max_mark || 0,\r\n          percentage: mark ? Math.round((mark.obtained / mark.max_mark) * 100) : 0,\r\n          weighted: mark?.weighted || 0,\r\n          classAverage\r\n        };\r\n      });\r\n\r\n      const finalMark = this.calculateStudentFinalMark(student);\r\n      const grade = this.calculateGrade(finalMark);\r\n      const rank = this.calculateStudentRank(student);\r\n\r\n      // Analyze strengths and improvements\r\n      const strengths = this.analyzeStrengths(assessments);\r\n      const improvements = this.analyzeImprovements(assessments);\r\n\r\n      this.studentBreakdown = {\r\n        name: student.name,\r\n        finalMark,\r\n        grade,\r\n        rank,\r\n        assessments,\r\n        strengths,\r\n        improvements\r\n      };\r\n\r\n      this.$nextTick(() => {\r\n        this.createStudentTrendChart();\r\n      });\r\n    },\r\n\r\n    calculateStudentFinalMark(student) {\r\n      // Use the final mark from backend if available\r\n      if (student.finalMark !== undefined && student.finalMark !== null) {\r\n        return student.finalMark;\r\n      }\r\n      \r\n      // Fallback to calculation\r\n      let totalWeighted = 0;\r\n      \r\n      Object.values(student.marks || {}).forEach(mark => {\r\n        totalWeighted += mark.weighted || 0;\r\n      });\r\n      \r\n      return Math.round(totalWeighted);\r\n    },\r\n\r\n    calculateGrade(mark) {\r\n      if (mark >= 80) return 'A';\r\n      if (mark >= 70) return 'B';\r\n      if (mark >= 60) return 'C';\r\n      if (mark >= 50) return 'D';\r\n      return 'F';\r\n    },\r\n\r\n    calculateStudentRank(targetStudent) {\r\n      const sortedStudents = [...this.students].sort((a, b) => \r\n        this.calculateStudentFinalMark(b) - this.calculateStudentFinalMark(a));\r\n      \r\n      return sortedStudents.findIndex(s => s.id === targetStudent.id) + 1;\r\n    },\r\n\r\n    analyzeStrengths(assessments) {\r\n      const strengths = [];\r\n      \r\n      assessments.forEach(assessment => {\r\n        if (assessment.percentage >= assessment.classAverage + 10) {\r\n          strengths.push(`${this.formatAssessmentType(assessment.type)} (${assessment.percentage}%)`);\r\n        }\r\n      });\r\n      \r\n      return strengths.length > 0 ? strengths : ['Consistent performance across assessments'];\r\n    },\r\n\r\n    analyzeImprovements(assessments) {\r\n      const improvements = [];\r\n      \r\n      assessments.forEach(assessment => {\r\n        if (assessment.percentage < assessment.classAverage - 10) {\r\n          improvements.push(`${this.formatAssessmentType(assessment.type)} (${assessment.percentage}%)`);\r\n        }\r\n      });\r\n      \r\n      return improvements.length > 0 ? improvements : ['Continue current study approach'];\r\n    },\r\n\r\n    createAssessmentChart() {\r\n      this.destroyCharts();\r\n      \r\n      const ctx = document.getElementById('assessmentChart');\r\n      if (!ctx || !this.assessmentBreakdown || this.assessmentBreakdown.length === 0) {\r\n        return;\r\n      }\r\n\r\n      this.assessmentChart = new Chart(ctx, {\r\n        type: 'bar',\r\n        data: {\r\n          labels: this.assessmentBreakdown.map(item => this.formatAssessmentType(item.type)),\r\n          datasets: [{\r\n            label: 'Average Score (%)',\r\n            data: this.assessmentBreakdown.map(item => item.average),\r\n            backgroundColor: 'rgba(54, 162, 235, 0.8)',\r\n            borderColor: 'rgba(54, 162, 235, 1)',\r\n            borderWidth: 1\r\n          }, {\r\n            label: 'Weightage (%)',\r\n            data: this.assessmentBreakdown.map(item => item.weightage),\r\n            backgroundColor: 'rgba(255, 99, 132, 0.8)',\r\n            borderColor: 'rgba(255, 99, 132, 1)',\r\n            borderWidth: 1\r\n          }]\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          scales: {\r\n            y: {\r\n              beginAtZero: true,\r\n              max: 100\r\n            }\r\n          }\r\n        }\r\n      });\r\n    },\r\n\r\n    createStudentTrendChart() {\r\n      // Destroy existing chart first\r\n      if (this.studentTrendChart) {\r\n        this.studentTrendChart.destroy();\r\n        this.studentTrendChart = null;\r\n      }\r\n      \r\n      const ctx = document.getElementById('studentTrendChart');\r\n      if (!ctx || !this.studentBreakdown || !this.studentBreakdown.assessments) {\r\n        return;\r\n      }\r\n\r\n      this.studentTrendChart = new Chart(ctx, {\r\n        type: 'line',\r\n        data: {\r\n          labels: this.studentBreakdown.assessments.map(a => a.name),\r\n          datasets: [{\r\n            label: 'Student Score',\r\n            data: this.studentBreakdown.assessments.map(a => a.percentage),\r\n            borderColor: 'rgba(75, 192, 192, 1)',\r\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n            tension: 0.1\r\n          }, {\r\n            label: 'Class Average',\r\n            data: this.studentBreakdown.assessments.map(a => a.classAverage),\r\n            borderColor: 'rgba(255, 159, 64, 1)',\r\n            backgroundColor: 'rgba(255, 159, 64, 0.2)',\r\n            tension: 0.1\r\n          }]\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          scales: {\r\n            y: {\r\n              beginAtZero: true,\r\n              max: 100\r\n            }\r\n          }\r\n        }\r\n      });\r\n    },\r\n\r\n    destroyCharts() {\r\n      if (this.assessmentChart) {\r\n        this.assessmentChart.destroy();\r\n        this.assessmentChart = null;\r\n      }\r\n      if (this.studentTrendChart) {\r\n        this.studentTrendChart.destroy();\r\n        this.studentTrendChart = null;\r\n      }\r\n    },\r\n\r\n    filterBreakdown() {\r\n      // Implementation for filtering by assessment type\r\n      this.filteredStudentMarks = this.students;\r\n    },\r\n\r\n    toggleView(mode) {\r\n      this.viewMode = mode;\r\n    },\r\n\r\n    async exportBreakdown() {\r\n      // Implementation for exporting detailed breakdown\r\n      console.log('Exporting breakdown...');\r\n    },\r\n\r\n    async refreshData() {\r\n      await this.loadCourseData();\r\n    },\r\n\r\n    clearData() {\r\n      this.students = [];\r\n      this.courseStats = null;\r\n      this.assessmentBreakdown = [];\r\n      this.studentBreakdown = null;\r\n      this.uniqueAssessments = [];\r\n      this.filteredStudentMarks = [];\r\n      this.destroyCharts();\r\n    },\r\n\r\n    // Utility methods\r\n    getStudentInitials(name) {\r\n      return name.split(' ').map(n => n.charAt(0)).join('').toUpperCase();\r\n    },\r\n\r\n    formatAssessmentType(type) {\r\n      return type.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase());\r\n    },\r\n\r\n    getAssessmentBadgeClass(type) {\r\n      const classes = {\r\n        'quiz': 'bg-info',\r\n        'assignment': 'bg-primary',\r\n        'midterm': 'bg-warning text-dark',\r\n        'final_exam': 'bg-danger',\r\n        'project': 'bg-success'\r\n      };\r\n      return classes[type] || 'bg-secondary';\r\n    },\r\n\r\n    getAssessmentProgressClass(type) {\r\n      const classes = {\r\n        'quiz': 'bg-info',\r\n        'assignment': 'bg-primary',\r\n        'midterm': 'bg-warning',\r\n        'final_exam': 'bg-danger',\r\n        'project': 'bg-success'\r\n      };\r\n      return classes[type] || 'bg-secondary';\r\n    },\r\n\r\n    getScoreClass(percentage) {\r\n      if (percentage >= 80) return 'text-success fw-bold';\r\n      if (percentage >= 70) return 'text-info fw-bold';\r\n      if (percentage >= 60) return 'text-warning fw-bold';\r\n      if (percentage >= 50) return 'text-primary';\r\n      return 'text-danger fw-bold';\r\n    },\r\n\r\n    getGradeBadgeClass(grade) {\r\n      const classes = {\r\n        'A': 'bg-success',\r\n        'B': 'bg-info',\r\n        'C': 'bg-warning text-dark',\r\n        'D': 'bg-primary',\r\n        'F': 'bg-danger'\r\n      };\r\n      return classes[grade] || 'bg-secondary';\r\n    },\r\n\r\n    getPerformanceStatus(studentScore, classAverage) {\r\n      if (studentScore >= classAverage + 10) return 'Excellent';\r\n      if (studentScore >= classAverage) return 'Above Average';\r\n      if (studentScore >= classAverage - 10) return 'Average';\r\n      return 'Needs Improvement';\r\n    },\r\n\r\n    getPerformanceStatusClass(studentScore, classAverage) {\r\n      if (studentScore >= classAverage + 10) return 'bg-success';\r\n      if (studentScore >= classAverage) return 'bg-info';\r\n      if (studentScore >= classAverage - 10) return 'bg-warning text-dark';\r\n      return 'bg-danger';\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.mark-breakdown h1 {\r\n  color: #2c3e50;\r\n  font-weight: 700;\r\n}\r\n\r\n.stat-card {\r\n  transition: transform 0.2s ease;\r\n  border-radius: 10px;\r\n}\r\n\r\n.stat-card:hover {\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.avatar {\r\n  width: 40px;\r\n  height: 40px;\r\n  background: linear-gradient(45deg, #007bff, #0056b3);\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: white;\r\n  font-weight: bold;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.metric-box {\r\n  padding: 1rem;\r\n  border-radius: 8px;\r\n  background: linear-gradient(135deg, #f8f9fa, #e9ecef);\r\n}\r\n\r\n.card {\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  border: none;\r\n  border-radius: 10px;\r\n}\r\n\r\n.table th {\r\n  font-weight: 600;\r\n  border-top: none;\r\n}\r\n\r\n.table td {\r\n  vertical-align: middle;\r\n}\r\n\r\n.badge-lg {\r\n  font-size: 1rem;\r\n  padding: 0.5rem 0.75rem;\r\n}\r\n\r\n.badge-sm {\r\n  font-size: 0.7rem;\r\n}\r\n\r\n.btn-group .btn.active {\r\n  background-color: #007bff;\r\n  color: white;\r\n}\r\n\r\ncanvas {\r\n  max-height: 300px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}