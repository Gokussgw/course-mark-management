{"ast":null,"code":"import \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createStaticVNode as _createStaticVNode } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"csv-import\"\n};\nvar _hoisted_2 = {\n  \"class\": \"card mb-4\"\n};\nvar _hoisted_3 = {\n  \"class\": \"card-body\"\n};\nvar _hoisted_4 = {\n  \"class\": \"row mb-4\"\n};\nvar _hoisted_5 = {\n  \"class\": \"col-md-6\"\n};\nvar _hoisted_6 = {\n  \"class\": \"mb-3\"\n};\nvar _hoisted_7 = [\"value\"];\nvar _hoisted_8 = {\n  \"class\": \"col-md-6\"\n};\nvar _hoisted_9 = {\n  \"class\": \"mb-3\"\n};\nvar _hoisted_10 = [\"disabled\"];\nvar _hoisted_11 = [\"value\"];\nvar _hoisted_12 = {\n  \"class\": \"mb-3\"\n};\nvar _hoisted_13 = [\"disabled\"];\nvar _hoisted_14 = {\n  key: 0,\n  \"class\": \"mt-4\"\n};\nvar _hoisted_15 = {\n  \"class\": \"table-responsive\"\n};\nvar _hoisted_16 = {\n  \"class\": \"table table-bordered table-striped\"\n};\nvar _hoisted_17 = {\n  key: 0,\n  \"class\": \"text-muted\"\n};\nvar _hoisted_18 = {\n  \"class\": \"mt-4 d-flex justify-content-between\"\n};\nvar _hoisted_19 = [\"disabled\"];\nvar _hoisted_20 = {\n  key: 0,\n  \"class\": \"spinner-border spinner-border-sm me-2\",\n  role: \"status\"\n};\nvar _hoisted_21 = {\n  key: 1,\n  \"class\": \"fas fa-upload me-2\"\n};\nvar _hoisted_22 = {\n  key: 0,\n  \"class\": \"card\"\n};\nvar _hoisted_23 = {\n  \"class\": \"card-body\"\n};\nvar _hoisted_24 = {\n  key: 0,\n  \"class\": \"alert alert-success\"\n};\nvar _hoisted_25 = {\n  key: 1,\n  \"class\": \"alert alert-danger\"\n};\nvar _hoisted_26 = {\n  \"class\": \"mb-0\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[23] || (_cache[23] = _createElementVNode(\"h1\", {\n    \"class\": \"mb-4\"\n  }, \"Import Marks from CSV\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_cache[16] || (_cache[16] = _createStaticVNode(\"<h5 class=\\\"card-title\\\" data-v-2c67732a>CSV Upload Instructions</h5><p data-v-2c67732a>Please follow these guidelines to ensure your CSV file is imported correctly:</p><ol data-v-2c67732a><li data-v-2c67732a>Your CSV file should have headers in the first row</li><li data-v-2c67732a>Required columns: <code data-v-2c67732a>student_id</code>, <code data-v-2c67732a>mark</code></li><li data-v-2c67732a>Optional columns: <code data-v-2c67732a>comments</code></li><li data-v-2c67732a>Student IDs should match those in the system</li><li data-v-2c67732a>Marks should be numeric values between 0 and the assessment&#39;s maximum mark</li></ol><div class=\\\"alert alert-info\\\" data-v-2c67732a><i class=\\\"fas fa-info-circle me-2\\\" data-v-2c67732a></i><strong data-v-2c67732a>Tip:</strong> You can download a template by clicking the button below </div>\", 4)), _createElementVNode(\"button\", {\n    \"class\": \"btn btn-outline-primary mb-4\",\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $options.downloadTemplate && $options.downloadTemplate.apply($options, arguments);\n    })\n  }, _cache[7] || (_cache[7] = [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-download me-2\"\n  }, null, -1 /* CACHED */), _createTextVNode(\" Download CSV Template \")])), _cache[17] || (_cache[17] = _createElementVNode(\"h5\", null, \"Select Course and Assessment\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_cache[9] || (_cache[9] = _createElementVNode(\"label\", {\n    \"for\": \"courseSelect\",\n    \"class\": \"form-label\"\n  }, \"Course\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"class\": \"form-select\",\n    id: \"courseSelect\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n      return $data.selectedCourseId = $event;\n    }),\n    onChange: _cache[2] || (_cache[2] = function () {\n      return $options.loadAssessments && $options.loadAssessments.apply($options, arguments);\n    })\n  }, [_cache[8] || (_cache[8] = _createElementVNode(\"option\", {\n    value: \"\"\n  }, \"-- Select Course --\", -1 /* CACHED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.courses, function (course) {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: course.id,\n      value: course.id\n    }, _toDisplayString(course.code) + \" - \" + _toDisplayString(course.name), 9 /* TEXT, PROPS */, _hoisted_7);\n  }), 128 /* KEYED_FRAGMENT */))], 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, $data.selectedCourseId]])])]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_cache[11] || (_cache[11] = _createElementVNode(\"label\", {\n    \"for\": \"assessmentSelect\",\n    \"class\": \"form-label\"\n  }, \"Assessment\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"class\": \"form-select\",\n    id: \"assessmentSelect\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n      return $data.selectedAssessmentId = $event;\n    }),\n    disabled: !$data.selectedCourseId\n  }, [_cache[10] || (_cache[10] = _createElementVNode(\"option\", {\n    value: \"\"\n  }, \"-- Select Assessment --\", -1 /* CACHED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.assessments, function (assessment) {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: assessment.id,\n      value: assessment.id\n    }, _toDisplayString(assessment.name) + \" (\" + _toDisplayString(assessment.type) + \") \", 9 /* TEXT, PROPS */, _hoisted_11);\n  }), 128 /* KEYED_FRAGMENT */))], 8 /* PROPS */, _hoisted_10), [[_vModelSelect, $data.selectedAssessmentId]])])])]), _cache[18] || (_cache[18] = _createElementVNode(\"h5\", null, \"Upload CSV File\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"input\", {\n    type: \"file\",\n    \"class\": \"form-control\",\n    id: \"csvFile\",\n    accept: \".csv\",\n    onChange: _cache[4] || (_cache[4] = function () {\n      return $options.handleFileUpload && $options.handleFileUpload.apply($options, arguments);\n    }),\n    disabled: !$data.selectedAssessmentId\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_13)]), $data.filePreview.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [_cache[12] || (_cache[12] = _createElementVNode(\"h5\", null, \"Preview\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"table\", _hoisted_16, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.filePreview[0], function (header, index) {\n    return _openBlock(), _createElementBlock(\"th\", {\n      key: index\n    }, _toDisplayString(header), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.filePreview.slice(1, 6), function (row, rowIndex) {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: rowIndex\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(row, function (cell, cellIndex) {\n      return _openBlock(), _createElementBlock(\"td\", {\n        key: cellIndex\n      }, _toDisplayString(cell), 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */))])])]), $data.filePreview.length > 6 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [_createElementVNode(\"em\", null, \"Showing first 5 rows of \" + _toDisplayString($data.filePreview.length - 1) + \" total rows\", 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_18, [_createVNode(_component_router_link, {\n    to: \"/lecturer/dashboard\",\n    \"class\": \"btn btn-outline-secondary\"\n  }, {\n    \"default\": _withCtx(function () {\n      return _cache[13] || (_cache[13] = [_createElementVNode(\"i\", {\n        \"class\": \"fas fa-arrow-left me-2\"\n      }, null, -1 /* CACHED */), _createTextVNode(\" Back to Dashboard \")]);\n    }),\n    _: 1 /* STABLE */,\n    __: [13]\n  }), _createElementVNode(\"button\", {\n    \"class\": \"btn btn-primary\",\n    onClick: _cache[5] || (_cache[5] = function () {\n      return $options.importCSV && $options.importCSV.apply($options, arguments);\n    }),\n    disabled: !$data.csvFile || !$data.selectedAssessmentId || $data.isLoading\n  }, [$data.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_20, _cache[14] || (_cache[14] = [_createElementVNode(\"span\", {\n    \"class\": \"visually-hidden\"\n  }, \"Loading...\", -1 /* CACHED */)]))) : (_openBlock(), _createElementBlock(\"i\", _hoisted_21)), _cache[15] || (_cache[15] = _createTextVNode(\" Import Marks \"))], 8 /* PROPS */, _hoisted_19)])])]), _createCommentVNode(\" Results section, shows after import \"), $data.importResults.success > 0 || $data.importResults.errors.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_22, [_createElementVNode(\"div\", _hoisted_23, [_cache[22] || (_cache[22] = _createElementVNode(\"h5\", {\n    \"class\": \"card-title\"\n  }, \"Import Results\", -1 /* CACHED */)), $data.importResults.success > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_24, [_cache[19] || (_cache[19] = _createElementVNode(\"i\", {\n    \"class\": \"fas fa-check-circle me-2\"\n  }, null, -1 /* CACHED */)), _createTextVNode(\" Successfully imported \" + _toDisplayString($data.importResults.success) + \" student marks \", 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), $data.importResults.errors.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_25, [_cache[20] || (_cache[20] = _createElementVNode(\"h6\", null, [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-exclamation-triangle me-2\"\n  }), _createTextVNode(\" Errors occurred during import:\")], -1 /* CACHED */)), _createElementVNode(\"ul\", _hoisted_26, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.importResults.errors, function (error, index) {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, _toDisplayString(error), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), $data.importResults.success > 0 ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 2,\n    \"class\": \"btn btn-primary\",\n    onClick: _cache[6] || (_cache[6] = function () {\n      return $options.notifyStudents && $options.notifyStudents.apply($options, arguments);\n    })\n  }, _cache[21] || (_cache[21] = [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-bell me-2\"\n  }, null, -1 /* CACHED */), _createTextVNode(\" Notify Students \")]))) : _createCommentVNode(\"v-if\", true)])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["role","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","onClick","_cache","$options","downloadTemplate","apply","arguments","_hoisted_4","_hoisted_5","_hoisted_6","id","$data","selectedCourseId","$event","onChange","loadAssessments","value","_Fragment","_renderList","courses","course","key","code","_toDisplayString","name","_hoisted_7","_hoisted_8","_hoisted_9","selectedAssessmentId","disabled","assessments","assessment","type","_hoisted_11","_hoisted_12","accept","handleFileUpload","filePreview","length","_hoisted_14","_hoisted_15","_hoisted_16","header","index","slice","row","rowIndex","cell","cellIndex","_hoisted_17","_hoisted_18","_createVNode","_component_router_link","to","importCSV","csvFile","isLoading","_hoisted_20","_hoisted_21","_createCommentVNode","importResults","success","errors","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","error","notifyStudents"],"sources":["C:\\Users\\ansmu\\Desktop\\Web\\NEW\\course-mark-management\\frontend\\src\\views\\lecturer\\CSVImport.vue"],"sourcesContent":["<template>\r\n  <div class=\"csv-import\">\r\n    <h1 class=\"mb-4\">Import Marks from CSV</h1>\r\n    \r\n    <div class=\"card mb-4\">\r\n      <div class=\"card-body\">\r\n        <h5 class=\"card-title\">CSV Upload Instructions</h5>\r\n        <p>Please follow these guidelines to ensure your CSV file is imported correctly:</p>\r\n        <ol>\r\n          <li>Your CSV file should have headers in the first row</li>\r\n          <li>Required columns: <code>student_id</code>, <code>mark</code></li>\r\n          <li>Optional columns: <code>comments</code></li>\r\n          <li>Student IDs should match those in the system</li>\r\n          <li>Marks should be numeric values between 0 and the assessment's maximum mark</li>\r\n        </ol>\r\n        \r\n        <div class=\"alert alert-info\">\r\n          <i class=\"fas fa-info-circle me-2\"></i>\r\n          <strong>Tip:</strong> You can download a template by clicking the button below\r\n        </div>\r\n        \r\n        <button class=\"btn btn-outline-primary mb-4\" @click=\"downloadTemplate\">\r\n          <i class=\"fas fa-download me-2\"></i>\r\n          Download CSV Template\r\n        </button>\r\n        \r\n        <h5>Select Course and Assessment</h5>\r\n        <div class=\"row mb-4\">\r\n          <div class=\"col-md-6\">\r\n            <div class=\"mb-3\">\r\n              <label for=\"courseSelect\" class=\"form-label\">Course</label>\r\n              <select class=\"form-select\" id=\"courseSelect\" v-model=\"selectedCourseId\" @change=\"loadAssessments\">\r\n                <option value=\"\">-- Select Course --</option>\r\n                <option v-for=\"course in courses\" :key=\"course.id\" :value=\"course.id\">\r\n                  {{ course.code }} - {{ course.name }}\r\n                </option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <div class=\"mb-3\">\r\n              <label for=\"assessmentSelect\" class=\"form-label\">Assessment</label>\r\n              <select class=\"form-select\" id=\"assessmentSelect\" v-model=\"selectedAssessmentId\" :disabled=\"!selectedCourseId\">\r\n                <option value=\"\">-- Select Assessment --</option>\r\n                <option v-for=\"assessment in assessments\" :key=\"assessment.id\" :value=\"assessment.id\">\r\n                  {{ assessment.name }} ({{ assessment.type }})\r\n                </option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <h5>Upload CSV File</h5>\r\n        <div class=\"mb-3\">\r\n          <input \r\n            type=\"file\" \r\n            class=\"form-control\" \r\n            id=\"csvFile\" \r\n            accept=\".csv\" \r\n            @change=\"handleFileUpload\"\r\n            :disabled=\"!selectedAssessmentId\"\r\n          >\r\n        </div>\r\n        \r\n        <div v-if=\"filePreview.length > 0\" class=\"mt-4\">\r\n          <h5>Preview</h5>\r\n          <div class=\"table-responsive\">\r\n            <table class=\"table table-bordered table-striped\">\r\n              <thead>\r\n                <tr>\r\n                  <th v-for=\"(header, index) in filePreview[0]\" :key=\"index\">{{ header }}</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr v-for=\"(row, rowIndex) in filePreview.slice(1, 6)\" :key=\"rowIndex\">\r\n                  <td v-for=\"(cell, cellIndex) in row\" :key=\"cellIndex\">{{ cell }}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div class=\"text-muted\" v-if=\"filePreview.length > 6\">\r\n            <em>Showing first 5 rows of {{ filePreview.length - 1 }} total rows</em>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"mt-4 d-flex justify-content-between\">\r\n          <router-link to=\"/lecturer/dashboard\" class=\"btn btn-outline-secondary\">\r\n            <i class=\"fas fa-arrow-left me-2\"></i>\r\n            Back to Dashboard\r\n          </router-link>\r\n          <button \r\n            class=\"btn btn-primary\" \r\n            @click=\"importCSV\" \r\n            :disabled=\"!csvFile || !selectedAssessmentId || isLoading\"\r\n          >\r\n            <div v-if=\"isLoading\" class=\"spinner-border spinner-border-sm me-2\" role=\"status\">\r\n              <span class=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n            <i v-else class=\"fas fa-upload me-2\"></i>\r\n            Import Marks\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Results section, shows after import -->\r\n    <div v-if=\"importResults.success > 0 || importResults.errors.length > 0\" class=\"card\">\r\n      <div class=\"card-body\">\r\n        <h5 class=\"card-title\">Import Results</h5>\r\n        \r\n        <div v-if=\"importResults.success > 0\" class=\"alert alert-success\">\r\n          <i class=\"fas fa-check-circle me-2\"></i>\r\n          Successfully imported {{ importResults.success }} student marks\r\n        </div>\r\n        \r\n        <div v-if=\"importResults.errors.length > 0\" class=\"alert alert-danger\">\r\n          <h6><i class=\"fas fa-exclamation-triangle me-2\"></i> Errors occurred during import:</h6>\r\n          <ul class=\"mb-0\">\r\n            <li v-for=\"(error, index) in importResults.errors\" :key=\"index\">{{ error }}</li>\r\n          </ul>\r\n        </div>\r\n        \r\n        <button class=\"btn btn-primary\" @click=\"notifyStudents\" v-if=\"importResults.success > 0\">\r\n          <i class=\"fas fa-bell me-2\"></i>\r\n          Notify Students\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex';\r\nimport Papa from 'papaparse';\r\n\r\nexport default {\r\n  name: 'CSVImport',\r\n  data() {\r\n    return {\r\n      selectedCourseId: '',\r\n      selectedAssessmentId: '',\r\n      courses: [],\r\n      assessments: [],\r\n      csvFile: null,\r\n      filePreview: [],\r\n      isLoading: false,\r\n      importResults: {\r\n        success: 0,\r\n        errors: []\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters(['isLoading']),\r\n    ...mapGetters('auth', ['getUser'])\r\n  },\r\n  created() {\r\n    this.loadCourses();\r\n  },\r\n  methods: {\r\n    async loadCourses() {\r\n      try {\r\n        this.courses = await this.$store.dispatch('courses/fetchCourses', {\r\n          lecturerId: this.getUser.id\r\n        });\r\n      } catch (error) {\r\n        console.error('Error loading courses:', error);\r\n      }\r\n    },\r\n    \r\n    async loadAssessments() {\r\n      if (!this.selectedCourseId) {\r\n        this.assessments = [];\r\n        this.selectedAssessmentId = '';\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        this.assessments = await this.$store.dispatch('assessments/fetchAssessments', {\r\n          courseId: this.selectedCourseId\r\n        });\r\n      } catch (error) {\r\n        console.error('Error loading assessments:', error);\r\n      }\r\n    },\r\n    \r\n    handleFileUpload(event) {\r\n      this.csvFile = event.target.files[0];\r\n      if (!this.csvFile) return;\r\n      \r\n      // Parse CSV for preview\r\n      Papa.parse(this.csvFile, {\r\n        complete: (results) => {\r\n          this.filePreview = results.data;\r\n        },\r\n        header: false\r\n      });\r\n    },\r\n    \r\n    downloadTemplate() {\r\n      // Generate a CSV template based on the selected assessment\r\n      const headers = ['student_id', 'mark', 'comments'];\r\n      let csvContent = headers.join(',') + '\\n';\r\n      csvContent += '12345,85,\"Good work\"\\n';\r\n      csvContent += '12346,78,\"Needs improvement on section 3\"\\n';\r\n      \r\n      // Create a Blob and download\r\n      const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n      const url = URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', 'marks_template.csv');\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    },\r\n    \r\n    async importCSV() {\r\n      if (!this.csvFile || !this.selectedAssessmentId) return;\r\n      \r\n      this.isLoading = true;\r\n      this.importResults = { success: 0, errors: [] };\r\n      \r\n      // Parse CSV data\r\n      Papa.parse(this.csvFile, {\r\n        header: true,\r\n        skipEmptyLines: true,\r\n        complete: async (results) => {\r\n          // Check required headers\r\n          const requiredHeaders = ['student_id', 'mark'];\r\n          const headers = results.meta.fields;\r\n          \r\n          if (!requiredHeaders.every(header => headers.includes(header))) {\r\n            this.importResults.errors.push('CSV is missing required headers: student_id, mark');\r\n            this.isLoading = false;\r\n            return;\r\n          }\r\n          \r\n          // Process each row\r\n          for (const row of results.data) {\r\n            try {\r\n              // In a real app, this would make an API call to save the mark\r\n              // Simulating API call with a delay\r\n              await new Promise(resolve => setTimeout(resolve, 100));\r\n              \r\n              // Validate mark\r\n              const mark = parseFloat(row.mark);\r\n              if (isNaN(mark) || mark < 0) {\r\n                this.importResults.errors.push(`Invalid mark for student ID ${row.student_id}: ${row.mark}`);\r\n                continue;\r\n              }\r\n              \r\n              // Success for this row\r\n              this.importResults.success++;\r\n            } catch (error) {\r\n              this.importResults.errors.push(`Error processing student ID ${row.student_id}: ${error.message}`);\r\n            }\r\n          }\r\n          \r\n          this.isLoading = false;\r\n        },\r\n        error: (error) => {\r\n          this.importResults.errors.push(`Error parsing CSV: ${error}`);\r\n          this.isLoading = false;\r\n        }\r\n      });\r\n    },\r\n    \r\n    async notifyStudents() {\r\n      // In a real app, this would send notifications to all students with new marks\r\n      alert(`Notification sent to ${this.importResults.success} students about their new marks`);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.csv-import h1 {\r\n  color: #2c3e50;\r\n  font-weight: 700;\r\n}\r\n\r\n.card {\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  border: none;\r\n  border-radius: 10px;\r\n}\r\n\r\n.table {\r\n  font-size: 0.9rem;\r\n}\r\n\r\ncode {\r\n  background-color: #f8f9fa;\r\n  padding: 0.2rem 0.4rem;\r\n  border-radius: 0.25rem;\r\n  font-size: 0.875em;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}