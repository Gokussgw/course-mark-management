{"ast":null,"code":"import _regenerator from \"C:/Users/ansmu/Desktop/Web/NEW/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _asyncToGenerator from \"C:/Users/ansmu/Desktop/Web/NEW/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"C:/Users/ansmu/Desktop/Web/NEW/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url.to-json.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { mapGetters } from 'vuex';\nimport * as bootstrap from 'bootstrap';\nexport default {\n  name: 'EnrollmentManagement',\n  data: function data() {\n    return {\n      courseId: null,\n      course: null,\n      searchQuery: '',\n      enrollForm: {\n        studentId: '',\n        academicYear: '2025-2026',\n        semester: 'Fall'\n      },\n      bulkEnrollForm: {\n        studentIds: [],\n        academicYear: '2025-2026',\n        semester: 'Fall'\n      },\n      enrollmentToRemove: null\n    };\n  },\n  computed: _objectSpread(_objectSpread(_objectSpread({}, mapGetters('enrollments', ['getEnrollments', 'getAvailableStudents', 'isLoading'])), mapGetters('courses', ['getCourses'])), {}, {\n    enrollments: function enrollments() {\n      return this.getEnrollments;\n    },\n    availableStudents: function availableStudents() {\n      return this.getAvailableStudents;\n    },\n    filteredEnrollments: function filteredEnrollments() {\n      if (!this.searchQuery) return this.enrollments;\n      var query = this.searchQuery.toLowerCase();\n      return this.enrollments.filter(function (enrollment) {\n        return enrollment.student_name.toLowerCase().includes(query) || enrollment.student_email.toLowerCase().includes(query) || enrollment.matric_number && enrollment.matric_number.toLowerCase().includes(query);\n      });\n    }\n  }),\n  created: function created() {\n    var _this = this;\n    return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n      return _regenerator().w(function (_context) {\n        while (1) switch (_context.n) {\n          case 0:\n            _this.courseId = _this.$route.params.courseId;\n            console.log('EnrollmentManagement component loaded for courseId:', _this.courseId);\n\n            // Load temporary data for testing\n            _context.n = 1;\n            return _this.loadTemporaryData();\n          case 1:\n            return _context.a(2);\n        }\n      }, _callee);\n    }))();\n  },\n  methods: {\n    loadTemporaryData: function loadTemporaryData() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              try {\n                // Load temporary course data\n                _this2.course = {\n                  id: parseInt(_this2.courseId),\n                  code: 'CS101',\n                  name: 'Introduction to Programming',\n                  semester: 'Fall',\n                  academic_year: '2025-2026'\n                };\n\n                // Load temporary enrollment data\n                _this2.$store.commit('enrollments/SET_ENROLLMENTS', [{\n                  enrollment_id: 1,\n                  student_id: 4,\n                  student_name: 'Student One',\n                  student_email: 'student1@example.com',\n                  matric_number: 'S123456',\n                  academic_year: '2025-2026',\n                  semester: 'Fall',\n                  enrolled_at: '2025-01-15'\n                }, {\n                  enrollment_id: 2,\n                  student_id: 5,\n                  student_name: 'Student Two',\n                  student_email: 'student2@example.com',\n                  matric_number: 'S123457',\n                  academic_year: '2025-2026',\n                  semester: 'Fall',\n                  enrolled_at: '2025-01-15'\n                }]);\n\n                // Load temporary available students\n                _this2.$store.commit('enrollments/SET_AVAILABLE_STUDENTS', [{\n                  id: 6,\n                  name: 'Student Three',\n                  email: 'student3@example.com',\n                  matric_number: 'S123458'\n                }, {\n                  id: 7,\n                  name: 'Student Four',\n                  email: 'student4@example.com',\n                  matric_number: 'S123459'\n                }]);\n                console.log('Temporary enrollment data loaded');\n              } catch (error) {\n                console.error('Error loading temporary data:', error);\n              }\n            case 1:\n              return _context2.a(2);\n          }\n        }, _callee2);\n      }))();\n    },\n    loadData: function loadData() {\n      var _this3 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {\n        var _t;\n        return _regenerator().w(function (_context3) {\n          while (1) switch (_context3.n) {\n            case 0:\n              _context3.p = 0;\n              _context3.n = 1;\n              return _this3.$store.dispatch('courses/fetchCourses');\n            case 1:\n              _this3.course = _this3.getCourses.find(function (c) {\n                return c.id == _this3.courseId;\n              });\n\n              // Load enrollments and available students\n              _context3.n = 2;\n              return Promise.all([_this3.$store.dispatch('enrollments/fetchCourseEnrollments', _this3.courseId), _this3.$store.dispatch('enrollments/fetchAvailableStudents', _this3.courseId)]);\n            case 2:\n              _context3.n = 4;\n              break;\n            case 3:\n              _context3.p = 3;\n              _t = _context3.v;\n              console.error('Error loading enrollment data:', _t);\n              _this3.$store.dispatch('showToast', {\n                message: 'Error loading enrollment data',\n                type: 'error'\n              });\n            case 4:\n              return _context3.a(2);\n          }\n        }, _callee3, null, [[0, 3]]);\n      }))();\n    },\n    getStudentInitials: function getStudentInitials(name) {\n      return name.split(' ').map(function (n) {\n        return n[0];\n      }).join('').toUpperCase();\n    },\n    formatDate: function formatDate(dateString) {\n      if (!dateString) return 'N/A';\n      return new Date(dateString).toLocaleDateString('en-GB', {\n        day: 'numeric',\n        month: 'short',\n        year: 'numeric'\n      });\n    },\n    openEnrollModal: function openEnrollModal() {\n      var _this$course;\n      this.enrollForm = {\n        studentId: '',\n        academicYear: ((_this$course = this.course) === null || _this$course === void 0 ? void 0 : _this$course.academic_year) || '2025-2026',\n        semester: 'Fall'\n      };\n      var modal = new bootstrap.Modal(document.getElementById('enrollModal'));\n      modal.show();\n    },\n    openBulkEnrollModal: function openBulkEnrollModal() {\n      var _this$course2;\n      this.bulkEnrollForm = {\n        studentIds: [],\n        academicYear: ((_this$course2 = this.course) === null || _this$course2 === void 0 ? void 0 : _this$course2.academic_year) || '2025-2026',\n        semester: 'Fall'\n      };\n      var modal = new bootstrap.Modal(document.getElementById('bulkEnrollModal'));\n      modal.show();\n    },\n    toggleSelectAll: function toggleSelectAll(event) {\n      if (event.target.checked) {\n        this.bulkEnrollForm.studentIds = this.availableStudents.map(function (s) {\n          return s.id;\n        });\n      } else {\n        this.bulkEnrollForm.studentIds = [];\n      }\n    },\n    enrollStudent: function enrollStudent() {\n      var _this4 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4() {\n        var modalElement, modal, _t2;\n        return _regenerator().w(function (_context4) {\n          while (1) switch (_context4.n) {\n            case 0:\n              _context4.p = 0;\n              _context4.n = 1;\n              return _this4.$store.dispatch('enrollments/enrollStudent', {\n                courseId: _this4.courseId,\n                studentId: _this4.enrollForm.studentId,\n                academicYear: _this4.enrollForm.academicYear,\n                semester: _this4.enrollForm.semester\n              });\n            case 1:\n              // Close modal\n              modalElement = document.getElementById('enrollModal');\n              modal = bootstrap.Modal.getInstance(modalElement);\n              modal.hide();\n              _this4.$store.dispatch('showToast', {\n                message: 'Student enrolled successfully!',\n                type: 'success'\n              });\n              _context4.n = 3;\n              break;\n            case 2:\n              _context4.p = 2;\n              _t2 = _context4.v;\n              console.error('Error enrolling student:', _t2);\n              _this4.$store.dispatch('showToast', {\n                message: _t2.message || 'Error enrolling student',\n                type: 'error'\n              });\n            case 3:\n              return _context4.a(2);\n          }\n        }, _callee4, null, [[0, 2]]);\n      }))();\n    },\n    bulkEnrollStudents: function bulkEnrollStudents() {\n      var _this5 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee5() {\n        var result, modalElement, modal, _t3;\n        return _regenerator().w(function (_context5) {\n          while (1) switch (_context5.n) {\n            case 0:\n              _context5.p = 0;\n              _context5.n = 1;\n              return _this5.$store.dispatch('enrollments/bulkEnrollStudents', {\n                courseId: _this5.courseId,\n                studentIds: _this5.bulkEnrollForm.studentIds,\n                academicYear: _this5.bulkEnrollForm.academicYear,\n                semester: _this5.bulkEnrollForm.semester\n              });\n            case 1:\n              result = _context5.v;\n              // Close modal\n              modalElement = document.getElementById('bulkEnrollModal');\n              modal = bootstrap.Modal.getInstance(modalElement);\n              modal.hide();\n              _this5.$store.dispatch('showToast', {\n                message: result.message,\n                type: 'success'\n              });\n              _context5.n = 3;\n              break;\n            case 2:\n              _context5.p = 2;\n              _t3 = _context5.v;\n              console.error('Error bulk enrolling students:', _t3);\n              _this5.$store.dispatch('showToast', {\n                message: _t3.message || 'Error enrolling students',\n                type: 'error'\n              });\n            case 3:\n              return _context5.a(2);\n          }\n        }, _callee5, null, [[0, 2]]);\n      }))();\n    },\n    confirmRemoveEnrollment: function confirmRemoveEnrollment(enrollment) {\n      this.enrollmentToRemove = enrollment;\n      var modal = new bootstrap.Modal(document.getElementById('removeEnrollmentModal'));\n      modal.show();\n    },\n    removeEnrollment: function removeEnrollment() {\n      var _this6 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee6() {\n        var modalElement, modal, _t4;\n        return _regenerator().w(function (_context6) {\n          while (1) switch (_context6.n) {\n            case 0:\n              _context6.p = 0;\n              _context6.n = 1;\n              return _this6.$store.dispatch('enrollments/removeEnrollment', {\n                enrollmentId: _this6.enrollmentToRemove.enrollment_id,\n                courseId: _this6.courseId\n              });\n            case 1:\n              // Close modal\n              modalElement = document.getElementById('removeEnrollmentModal');\n              modal = bootstrap.Modal.getInstance(modalElement);\n              modal.hide();\n              _this6.$store.dispatch('showToast', {\n                message: 'Student removed from course successfully!',\n                type: 'success'\n              });\n              _this6.enrollmentToRemove = null;\n              _context6.n = 3;\n              break;\n            case 2:\n              _context6.p = 2;\n              _t4 = _context6.v;\n              console.error('Error removing enrollment:', _t4);\n              _this6.$store.dispatch('showToast', {\n                message: _t4.message || 'Error removing student',\n                type: 'error'\n              });\n            case 3:\n              return _context6.a(2);\n          }\n        }, _callee6, null, [[0, 2]]);\n      }))();\n    },\n    exportEnrollments: function exportEnrollments() {\n      var _this7 = this,\n        _this$course3;\n      if (!this.enrollments.length) {\n        this.$store.dispatch('showToast', {\n          message: 'No enrollments to export',\n          type: 'warning'\n        });\n        return;\n      }\n\n      // Create CSV content\n      var headers = ['Student Name', 'Matric Number', 'Email', 'Academic Year', 'Semester', 'Enrolled Date'];\n      var csvContent = headers.join(',') + '\\n';\n      this.enrollments.forEach(function (enrollment) {\n        var row = [\"\\\"\".concat(enrollment.student_name, \"\\\"\"), enrollment.matric_number || 'N/A', enrollment.student_email, enrollment.academic_year, enrollment.semester, _this7.formatDate(enrollment.enrolled_at)];\n        csvContent += row.join(',') + '\\n';\n      });\n\n      // Download CSV\n      var blob = new Blob([csvContent], {\n        type: 'text/csv;charset=utf-8;'\n      });\n      var url = URL.createObjectURL(blob);\n      var link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', \"\".concat(((_this$course3 = this.course) === null || _this$course3 === void 0 ? void 0 : _this$course3.code) || 'course', \"_enrollments.csv\"));\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","bootstrap","name","data","courseId","course","searchQuery","enrollForm","studentId","academicYear","semester","bulkEnrollForm","studentIds","enrollmentToRemove","computed","_objectSpread","enrollments","getEnrollments","availableStudents","getAvailableStudents","filteredEnrollments","query","toLowerCase","filter","enrollment","student_name","includes","student_email","matric_number","created","_this","_asyncToGenerator","_regenerator","m","_callee","w","_context","n","$route","params","console","log","loadTemporaryData","a","methods","_this2","_callee2","_context2","id","parseInt","code","academic_year","$store","commit","enrollment_id","student_id","enrolled_at","email","error","loadData","_this3","_callee3","_t","_context3","p","dispatch","getCourses","find","c","Promise","all","v","message","type","getStudentInitials","split","map","join","toUpperCase","formatDate","dateString","Date","toLocaleDateString","day","month","year","openEnrollModal","_this$course","modal","Modal","document","getElementById","show","openBulkEnrollModal","_this$course2","toggleSelectAll","event","target","checked","s","enrollStudent","_this4","_callee4","modalElement","_t2","_context4","getInstance","hide","bulkEnrollStudents","_this5","_callee5","result","_t3","_context5","confirmRemoveEnrollment","removeEnrollment","_this6","_callee6","_t4","_context6","enrollmentId","exportEnrollments","_this7","_this$course3","length","headers","csvContent","forEach","row","concat","blob","Blob","url","URL","createObjectURL","link","createElement","href","setAttribute","body","appendChild","click","removeChild"],"sources":["C:\\Users\\ansmu\\Desktop\\Web\\NEW\\course-mark-management\\frontend\\src\\views\\lecturer\\EnrollmentManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"enrollment-management\">\r\n    <!-- Header -->\r\n    <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n      <div>\r\n        <h1 class=\"mb-1\">Student Enrollment Management</h1>\r\n        <p class=\"text-muted mb-0\" v-if=\"course\">\r\n          {{ course.code }} - {{ course.name }}\r\n        </p>\r\n      </div>\r\n      <div class=\"d-flex gap-2\">\r\n        <button class=\"btn btn-success\" @click=\"openEnrollModal\">\r\n          <i class=\"fas fa-user-plus me-2\"></i>Enroll Students\r\n        </button>\r\n        <button class=\"btn btn-outline-primary\" @click=\"openBulkEnrollModal\">\r\n          <i class=\"fas fa-users me-2\"></i>Bulk Enroll\r\n        </button>\r\n        <router-link :to=\"`/lecturer/course/${courseId}`\" class=\"btn btn-outline-secondary\">\r\n          <i class=\"fas fa-arrow-left me-2\"></i>Back to Course\r\n        </router-link>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Stats Cards -->\r\n    <div class=\"row mb-4\">\r\n      <div class=\"col-md-4\">\r\n        <div class=\"card bg-primary text-white\">\r\n          <div class=\"card-body\">\r\n            <div class=\"d-flex justify-content-between\">\r\n              <div>\r\n                <h5 class=\"card-title\">Total Enrolled</h5>\r\n                <h2 class=\"mb-0\">{{ enrollments.length }}</h2>\r\n              </div>\r\n              <div class=\"align-self-center\">\r\n                <i class=\"fas fa-users fa-2x\"></i>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-4\">\r\n        <div class=\"card bg-info text-white\">\r\n          <div class=\"card-body\">\r\n            <div class=\"d-flex justify-content-between\">\r\n              <div>\r\n                <h5 class=\"card-title\">Available Students</h5>\r\n                <h2 class=\"mb-0\">{{ availableStudents.length }}</h2>\r\n              </div>\r\n              <div class=\"align-self-center\">\r\n                <i class=\"fas fa-user-plus fa-2x\"></i>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-4\">\r\n        <div class=\"card bg-success text-white\">\r\n          <div class=\"card-body\">\r\n            <div class=\"d-flex justify-content-between\">\r\n              <div>\r\n                <h5 class=\"card-title\">Academic Year</h5>\r\n                <h2 class=\"mb-0\">{{ course?.academic_year || 'N/A' }}</h2>\r\n              </div>\r\n              <div class=\"align-self-center\">\r\n                <i class=\"fas fa-calendar fa-2x\"></i>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Enrolled Students Table -->\r\n    <div class=\"card\">\r\n      <div class=\"card-header\">\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n          <h5 class=\"mb-0\">Enrolled Students</h5>\r\n          <div class=\"d-flex gap-2\">\r\n            <input \r\n              type=\"text\" \r\n              class=\"form-control form-control-sm\" \r\n              placeholder=\"Search students...\"\r\n              v-model=\"searchQuery\"\r\n              style=\"width: 250px;\"\r\n            >\r\n            <button class=\"btn btn-outline-success btn-sm\" @click=\"exportEnrollments\">\r\n              <i class=\"fas fa-file-export me-1\"></i>Export\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <div v-if=\"isLoading\" class=\"text-center py-4\">\r\n          <div class=\"spinner-border text-primary\" role=\"status\">\r\n            <span class=\"visually-hidden\">Loading...</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div v-else-if=\"filteredEnrollments.length === 0\" class=\"text-center py-4\">\r\n          <i class=\"fas fa-users fa-3x text-muted mb-3\"></i>\r\n          <h6 class=\"text-muted\">No students enrolled</h6>\r\n          <p class=\"text-muted\">Start by enrolling students in this course.</p>\r\n          <button class=\"btn btn-primary\" @click=\"openEnrollModal\">\r\n            <i class=\"fas fa-user-plus me-2\"></i>Enroll Students\r\n          </button>\r\n        </div>\r\n\r\n        <div v-else class=\"table-responsive\">\r\n          <table class=\"table table-hover align-middle\">\r\n            <thead>\r\n              <tr>\r\n                <th>Student</th>\r\n                <th>Matric Number</th>\r\n                <th>Email</th>\r\n                <th>Semester</th>\r\n                <th>Enrolled Date</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr v-for=\"enrollment in filteredEnrollments\" :key=\"enrollment.enrollment_id\">\r\n                <td>\r\n                  <div class=\"d-flex align-items-center\">\r\n                    <div class=\"avatar avatar-sm me-3\">\r\n                      {{ getStudentInitials(enrollment.student_name) }}\r\n                    </div>\r\n                    <strong>{{ enrollment.student_name }}</strong>\r\n                  </div>\r\n                </td>\r\n                <td>{{ enrollment.matric_number || 'N/A' }}</td>\r\n                <td>{{ enrollment.student_email }}</td>\r\n                <td>{{ enrollment.semester }} {{ enrollment.academic_year }}</td>\r\n                <td>{{ formatDate(enrollment.enrolled_at) }}</td>\r\n                <td>\r\n                  <div class=\"btn-group btn-group-sm\">\r\n                    <router-link \r\n                      :to=\"`/lecturer/student/${enrollment.student_id}`\" \r\n                      class=\"btn btn-outline-info\"\r\n                      title=\"View Student Details\"\r\n                    >\r\n                      <i class=\"fas fa-eye\"></i>\r\n                    </router-link>\r\n                    <button \r\n                      class=\"btn btn-outline-danger\" \r\n                      @click=\"confirmRemoveEnrollment(enrollment)\"\r\n                      title=\"Remove from Course\"\r\n                    >\r\n                      <i class=\"fas fa-user-minus\"></i>\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Single Enrollment Modal -->\r\n    <div class=\"modal fade\" id=\"enrollModal\" tabindex=\"-1\" aria-labelledby=\"enrollModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"enrollModalLabel\">Enroll Student</h5>\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <form @submit.prevent=\"enrollStudent\">\r\n              <div class=\"mb-3\">\r\n                <label for=\"studentSelect\" class=\"form-label\">Select Student</label>\r\n                <select class=\"form-select\" id=\"studentSelect\" v-model=\"enrollForm.studentId\" required>\r\n                  <option value=\"\">Choose a student...</option>\r\n                  <option v-for=\"student in availableStudents\" :key=\"student.id\" :value=\"student.id\">\r\n                    {{ student.name }} ({{ student.email }})\r\n                  </option>\r\n                </select>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"mb-3\">\r\n                    <label for=\"academicYear\" class=\"form-label\">Academic Year</label>\r\n                    <input \r\n                      type=\"text\" \r\n                      class=\"form-control\" \r\n                      id=\"academicYear\" \r\n                      v-model=\"enrollForm.academicYear\"\r\n                      placeholder=\"e.g., 2025-2026\"\r\n                      required\r\n                    >\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"mb-3\">\r\n                    <label for=\"semester\" class=\"form-label\">Semester</label>\r\n                    <select class=\"form-select\" id=\"semester\" v-model=\"enrollForm.semester\" required>\r\n                      <option value=\"\">Select Semester</option>\r\n                      <option value=\"Fall\">Fall</option>\r\n                      <option value=\"Spring\">Spring</option>\r\n                      <option value=\"Summer\">Summer</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"d-flex justify-content-end gap-2\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\r\n                <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"isLoading\">\r\n                  <span v-if=\"isLoading\" class=\"spinner-border spinner-border-sm me-2\"></span>\r\n                  Enroll Student\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Bulk Enrollment Modal -->\r\n    <div class=\"modal fade\" id=\"bulkEnrollModal\" tabindex=\"-1\" aria-labelledby=\"bulkEnrollModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"bulkEnrollModalLabel\">Bulk Enroll Students</h5>\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <form @submit.prevent=\"bulkEnrollStudents\">\r\n              <div class=\"row mb-3\">\r\n                <div class=\"col-md-6\">\r\n                  <label for=\"bulkAcademicYear\" class=\"form-label\">Academic Year</label>\r\n                  <input \r\n                    type=\"text\" \r\n                    class=\"form-control\" \r\n                    id=\"bulkAcademicYear\" \r\n                    v-model=\"bulkEnrollForm.academicYear\"\r\n                    placeholder=\"e.g., 2025-2026\"\r\n                    required\r\n                  >\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <label for=\"bulkSemester\" class=\"form-label\">Semester</label>\r\n                  <select class=\"form-select\" id=\"bulkSemester\" v-model=\"bulkEnrollForm.semester\" required>\r\n                    <option value=\"\">Select Semester</option>\r\n                    <option value=\"Fall\">Fall</option>\r\n                    <option value=\"Spring\">Spring</option>\r\n                    <option value=\"Summer\">Summer</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              \r\n              <div class=\"mb-3\">\r\n                <label class=\"form-label\">Select Students to Enroll</label>\r\n                <div class=\"d-flex justify-content-between align-items-center mb-2\">\r\n                  <div class=\"form-check\">\r\n                    <input \r\n                      class=\"form-check-input\" \r\n                      type=\"checkbox\" \r\n                      id=\"selectAll\"\r\n                      @change=\"toggleSelectAll\"\r\n                      :checked=\"bulkEnrollForm.studentIds.length === availableStudents.length\"\r\n                    >\r\n                    <label class=\"form-check-label\" for=\"selectAll\">\r\n                      Select All ({{ availableStudents.length }} students)\r\n                    </label>\r\n                  </div>\r\n                  <span class=\"badge bg-primary\">{{ bulkEnrollForm.studentIds.length }} selected</span>\r\n                </div>\r\n                \r\n                <div class=\"student-list\" style=\"max-height: 300px; overflow-y: auto;\">\r\n                  <div v-for=\"student in availableStudents\" :key=\"student.id\" class=\"form-check\">\r\n                    <input \r\n                      class=\"form-check-input\" \r\n                      type=\"checkbox\" \r\n                      :id=\"`student-${student.id}`\"\r\n                      :value=\"student.id\"\r\n                      v-model=\"bulkEnrollForm.studentIds\"\r\n                    >\r\n                    <label class=\"form-check-label\" :for=\"`student-${student.id}`\">\r\n                      <strong>{{ student.name }}</strong> - {{ student.email }}\r\n                      <small class=\"text-muted d-block\">{{ student.matric_number || 'No matric number' }}</small>\r\n                    </label>\r\n                  </div>\r\n                  \r\n                  <div v-if=\"availableStudents.length === 0\" class=\"text-center py-3 text-muted\">\r\n                    No students available for enrollment\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div class=\"d-flex justify-content-end gap-2\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\r\n                <button \r\n                  type=\"submit\" \r\n                  class=\"btn btn-primary\" \r\n                  :disabled=\"isLoading || bulkEnrollForm.studentIds.length === 0\"\r\n                >\r\n                  <span v-if=\"isLoading\" class=\"spinner-border spinner-border-sm me-2\"></span>\r\n                  Enroll {{ bulkEnrollForm.studentIds.length }} Students\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Remove Enrollment Confirmation Modal -->\r\n    <div class=\"modal fade\" id=\"removeEnrollmentModal\" tabindex=\"-1\" aria-labelledby=\"removeEnrollmentModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"removeEnrollmentModalLabel\">Remove Student Enrollment</h5>\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div v-if=\"enrollmentToRemove\">\r\n              <div class=\"alert alert-warning\">\r\n                <i class=\"fas fa-exclamation-triangle me-2\"></i>\r\n                <strong>Warning:</strong> This action will remove the student from the course and delete all their marks.\r\n              </div>\r\n              <p>Are you sure you want to remove <strong>{{ enrollmentToRemove.student_name }}</strong> from this course?</p>\r\n              <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                  <h6 class=\"card-title\">{{ enrollmentToRemove.student_name }}</h6>\r\n                  <p class=\"card-text\">\r\n                    <small class=\"text-muted\">{{ enrollmentToRemove.student_email }}</small><br>\r\n                    <small class=\"text-muted\">Enrolled: {{ formatDate(enrollmentToRemove.enrolled_at) }}</small>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\r\n            <button \r\n              type=\"button\" \r\n              class=\"btn btn-danger\" \r\n              @click=\"removeEnrollment\"\r\n              :disabled=\"isLoading\"\r\n            >\r\n              <span v-if=\"isLoading\" class=\"spinner-border spinner-border-sm me-2\"></span>\r\n              Remove Student\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex';\r\nimport * as bootstrap from 'bootstrap';\r\n\r\nexport default {\r\n  name: 'EnrollmentManagement',\r\n  data() {\r\n    return {\r\n      courseId: null,\r\n      course: null,\r\n      searchQuery: '',\r\n      enrollForm: {\r\n        studentId: '',\r\n        academicYear: '2025-2026',\r\n        semester: 'Fall'\r\n      },\r\n      bulkEnrollForm: {\r\n        studentIds: [],\r\n        academicYear: '2025-2026',\r\n        semester: 'Fall'\r\n      },\r\n      enrollmentToRemove: null\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters('enrollments', ['getEnrollments', 'getAvailableStudents', 'isLoading']),\r\n    ...mapGetters('courses', ['getCourses']),\r\n    \r\n    enrollments() {\r\n      return this.getEnrollments;\r\n    },\r\n    \r\n    availableStudents() {\r\n      return this.getAvailableStudents;\r\n    },\r\n    \r\n    filteredEnrollments() {\r\n      if (!this.searchQuery) return this.enrollments;\r\n      \r\n      const query = this.searchQuery.toLowerCase();\r\n      return this.enrollments.filter(enrollment => \r\n        enrollment.student_name.toLowerCase().includes(query) ||\r\n        enrollment.student_email.toLowerCase().includes(query) ||\r\n        (enrollment.matric_number && enrollment.matric_number.toLowerCase().includes(query))\r\n      );\r\n    }\r\n  },\r\n  async created() {\r\n    this.courseId = this.$route.params.courseId;\r\n    console.log('EnrollmentManagement component loaded for courseId:', this.courseId);\r\n    \r\n    // Load temporary data for testing\r\n    await this.loadTemporaryData();\r\n  },\r\n  methods: {\r\n    async loadTemporaryData() {\r\n      try {\r\n        // Load temporary course data\r\n        this.course = {\r\n          id: parseInt(this.courseId),\r\n          code: 'CS101',\r\n          name: 'Introduction to Programming',\r\n          semester: 'Fall',\r\n          academic_year: '2025-2026'\r\n        };\r\n        \r\n        // Load temporary enrollment data\r\n        this.$store.commit('enrollments/SET_ENROLLMENTS', [\r\n          {\r\n            enrollment_id: 1,\r\n            student_id: 4,\r\n            student_name: 'Student One',\r\n            student_email: 'student1@example.com',\r\n            matric_number: 'S123456',\r\n            academic_year: '2025-2026',\r\n            semester: 'Fall',\r\n            enrolled_at: '2025-01-15'\r\n          },\r\n          {\r\n            enrollment_id: 2,\r\n            student_id: 5,\r\n            student_name: 'Student Two',\r\n            student_email: 'student2@example.com',\r\n            matric_number: 'S123457',\r\n            academic_year: '2025-2026',\r\n            semester: 'Fall',\r\n            enrolled_at: '2025-01-15'\r\n          }\r\n        ]);\r\n        \r\n        // Load temporary available students\r\n        this.$store.commit('enrollments/SET_AVAILABLE_STUDENTS', [\r\n          {\r\n            id: 6,\r\n            name: 'Student Three',\r\n            email: 'student3@example.com',\r\n            matric_number: 'S123458'\r\n          },\r\n          {\r\n            id: 7,\r\n            name: 'Student Four',\r\n            email: 'student4@example.com',\r\n            matric_number: 'S123459'\r\n          }\r\n        ]);\r\n        \r\n        console.log('Temporary enrollment data loaded');\r\n      } catch (error) {\r\n        console.error('Error loading temporary data:', error);\r\n      }\r\n    },\r\n\r\n    async loadData() {\r\n      try {\r\n        // Load course details\r\n        await this.$store.dispatch('courses/fetchCourses');\r\n        this.course = this.getCourses.find(c => c.id == this.courseId);\r\n        \r\n        // Load enrollments and available students\r\n        await Promise.all([\r\n          this.$store.dispatch('enrollments/fetchCourseEnrollments', this.courseId),\r\n          this.$store.dispatch('enrollments/fetchAvailableStudents', this.courseId)\r\n        ]);\r\n      } catch (error) {\r\n        console.error('Error loading enrollment data:', error);\r\n        this.$store.dispatch('showToast', {\r\n          message: 'Error loading enrollment data',\r\n          type: 'error'\r\n        });\r\n      }\r\n    },\r\n    \r\n    getStudentInitials(name) {\r\n      return name\r\n        .split(' ')\r\n        .map(n => n[0])\r\n        .join('')\r\n        .toUpperCase();\r\n    },\r\n    \r\n    formatDate(dateString) {\r\n      if (!dateString) return 'N/A';\r\n      return new Date(dateString).toLocaleDateString('en-GB', {\r\n        day: 'numeric',\r\n        month: 'short',\r\n        year: 'numeric'\r\n      });\r\n    },\r\n    \r\n    openEnrollModal() {\r\n      this.enrollForm = {\r\n        studentId: '',\r\n        academicYear: this.course?.academic_year || '2025-2026',\r\n        semester: 'Fall'\r\n      };\r\n      \r\n      const modal = new bootstrap.Modal(document.getElementById('enrollModal'));\r\n      modal.show();\r\n    },\r\n    \r\n    openBulkEnrollModal() {\r\n      this.bulkEnrollForm = {\r\n        studentIds: [],\r\n        academicYear: this.course?.academic_year || '2025-2026',\r\n        semester: 'Fall'\r\n      };\r\n      \r\n      const modal = new bootstrap.Modal(document.getElementById('bulkEnrollModal'));\r\n      modal.show();\r\n    },\r\n    \r\n    toggleSelectAll(event) {\r\n      if (event.target.checked) {\r\n        this.bulkEnrollForm.studentIds = this.availableStudents.map(s => s.id);\r\n      } else {\r\n        this.bulkEnrollForm.studentIds = [];\r\n      }\r\n    },\r\n    \r\n    async enrollStudent() {\r\n      try {\r\n        await this.$store.dispatch('enrollments/enrollStudent', {\r\n          courseId: this.courseId,\r\n          studentId: this.enrollForm.studentId,\r\n          academicYear: this.enrollForm.academicYear,\r\n          semester: this.enrollForm.semester\r\n        });\r\n        \r\n        // Close modal\r\n        const modalElement = document.getElementById('enrollModal');\r\n        const modal = bootstrap.Modal.getInstance(modalElement);\r\n        modal.hide();\r\n        \r\n        this.$store.dispatch('showToast', {\r\n          message: 'Student enrolled successfully!',\r\n          type: 'success'\r\n        });\r\n      } catch (error) {\r\n        console.error('Error enrolling student:', error);\r\n        this.$store.dispatch('showToast', {\r\n          message: error.message || 'Error enrolling student',\r\n          type: 'error'\r\n        });\r\n      }\r\n    },\r\n    \r\n    async bulkEnrollStudents() {\r\n      try {\r\n        const result = await this.$store.dispatch('enrollments/bulkEnrollStudents', {\r\n          courseId: this.courseId,\r\n          studentIds: this.bulkEnrollForm.studentIds,\r\n          academicYear: this.bulkEnrollForm.academicYear,\r\n          semester: this.bulkEnrollForm.semester\r\n        });\r\n        \r\n        // Close modal\r\n        const modalElement = document.getElementById('bulkEnrollModal');\r\n        const modal = bootstrap.Modal.getInstance(modalElement);\r\n        modal.hide();\r\n        \r\n        this.$store.dispatch('showToast', {\r\n          message: result.message,\r\n          type: 'success'\r\n        });\r\n      } catch (error) {\r\n        console.error('Error bulk enrolling students:', error);\r\n        this.$store.dispatch('showToast', {\r\n          message: error.message || 'Error enrolling students',\r\n          type: 'error'\r\n        });\r\n      }\r\n    },\r\n    \r\n    confirmRemoveEnrollment(enrollment) {\r\n      this.enrollmentToRemove = enrollment;\r\n      \r\n      const modal = new bootstrap.Modal(document.getElementById('removeEnrollmentModal'));\r\n      modal.show();\r\n    },\r\n    \r\n    async removeEnrollment() {\r\n      try {\r\n        await this.$store.dispatch('enrollments/removeEnrollment', {\r\n          enrollmentId: this.enrollmentToRemove.enrollment_id,\r\n          courseId: this.courseId\r\n        });\r\n        \r\n        // Close modal\r\n        const modalElement = document.getElementById('removeEnrollmentModal');\r\n        const modal = bootstrap.Modal.getInstance(modalElement);\r\n        modal.hide();\r\n        \r\n        this.$store.dispatch('showToast', {\r\n          message: 'Student removed from course successfully!',\r\n          type: 'success'\r\n        });\r\n        \r\n        this.enrollmentToRemove = null;\r\n      } catch (error) {\r\n        console.error('Error removing enrollment:', error);\r\n        this.$store.dispatch('showToast', {\r\n          message: error.message || 'Error removing student',\r\n          type: 'error'\r\n        });\r\n      }\r\n    },\r\n    \r\n    exportEnrollments() {\r\n      if (!this.enrollments.length) {\r\n        this.$store.dispatch('showToast', {\r\n          message: 'No enrollments to export',\r\n          type: 'warning'\r\n        });\r\n        return;\r\n      }\r\n      \r\n      // Create CSV content\r\n      const headers = ['Student Name', 'Matric Number', 'Email', 'Academic Year', 'Semester', 'Enrolled Date'];\r\n      let csvContent = headers.join(',') + '\\n';\r\n      \r\n      this.enrollments.forEach(enrollment => {\r\n        const row = [\r\n          `\"${enrollment.student_name}\"`,\r\n          enrollment.matric_number || 'N/A',\r\n          enrollment.student_email,\r\n          enrollment.academic_year,\r\n          enrollment.semester,\r\n          this.formatDate(enrollment.enrolled_at)\r\n        ];\r\n        csvContent += row.join(',') + '\\n';\r\n      });\r\n      \r\n      // Download CSV\r\n      const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n      const url = URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', `${this.course?.code || 'course'}_enrollments.csv`);\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.enrollment-management h1 {\r\n  color: #2c3e50;\r\n  font-weight: 700;\r\n}\r\n\r\n.card {\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  border: none;\r\n  border-radius: 10px;\r\n}\r\n\r\n.avatar {\r\n  width: 40px;\r\n  height: 40px;\r\n  background: linear-gradient(45deg, #007bff, #0056b3);\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: white;\r\n  font-weight: 600;\r\n  font-size: 14px;\r\n}\r\n\r\n.avatar.avatar-sm {\r\n  width: 32px;\r\n  height: 32px;\r\n  font-size: 12px;\r\n}\r\n\r\n.student-list {\r\n  border: 1px solid #dee2e6;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n}\r\n\r\n.form-check {\r\n  padding: 8px;\r\n  border-bottom: 1px solid #f8f9fa;\r\n}\r\n\r\n.form-check:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.form-check:hover {\r\n  background-color: #f8f9fa;\r\n}\r\n\r\n.table th {\r\n  font-weight: 600;\r\n  color: #2c3e50;\r\n  border-top: none;\r\n}\r\n\r\n.btn-group .btn {\r\n  margin-right: 0;\r\n}\r\n\r\n.modal-lg {\r\n  max-width: 900px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}