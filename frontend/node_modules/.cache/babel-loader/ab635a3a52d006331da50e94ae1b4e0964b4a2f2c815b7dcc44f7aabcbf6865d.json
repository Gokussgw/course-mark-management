{"ast":null,"code":"import _regenerator from \"C:/Users/ansmu/Desktop/Web/NEW/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _asyncToGenerator from \"C:/Users/ansmu/Desktop/Web/NEW/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-float.js\";\nimport axios from 'axios';\nexport default {\n  namespaced: true,\n  state: {\n    users: [],\n    user: null,\n    students: [],\n    lecturers: [],\n    advisors: [],\n    advisees: [],\n    courseStudents: []\n  },\n  getters: {\n    getAllUsers: function getAllUsers(state) {\n      return state.users;\n    },\n    getUsers: function getUsers(state) {\n      return state.users;\n    },\n    getUser: function getUser(state) {\n      return state.user;\n    },\n    getAllStudents: function getAllStudents(state) {\n      return state.students;\n    },\n    getAllLecturers: function getAllLecturers(state) {\n      return state.lecturers;\n    },\n    getAllAdvisors: function getAllAdvisors(state) {\n      return state.advisors;\n    },\n    getAllAdvisees: function getAllAdvisees(state) {\n      return state.advisees;\n    }\n  },\n  mutations: {\n    SET_USERS: function SET_USERS(state, users) {\n      state.users = users;\n    },\n    SET_USER: function SET_USER(state, user) {\n      state.user = user;\n    },\n    SET_STUDENTS: function SET_STUDENTS(state, students) {\n      state.students = students;\n    },\n    SET_LECTURERS: function SET_LECTURERS(state, lecturers) {\n      state.lecturers = lecturers;\n    },\n    SET_ADVISORS: function SET_ADVISORS(state, advisors) {\n      state.advisors = advisors;\n    },\n    SET_ADVISEES: function SET_ADVISEES(state, advisees) {\n      state.advisees = advisees;\n    },\n    ADD_USER: function ADD_USER(state, user) {\n      state.users.push(user);\n      // Also add to specific role arrays\n      if (user.role === 'student') state.students.push(user);\n      if (user.role === 'lecturer') state.lecturers.push(user);\n      if (user.role === 'advisor') state.advisors.push(user);\n    },\n    UPDATE_USER: function UPDATE_USER(state, updatedUser) {\n      // Update in users array\n      var index = state.users.findIndex(function (u) {\n        return u.id === updatedUser.id;\n      });\n      if (index !== -1) {\n        state.users.splice(index, 1, updatedUser);\n      }\n\n      // Update in specific role arrays\n      if (updatedUser.role === 'student') {\n        var studentIndex = state.students.findIndex(function (s) {\n          return s.id === updatedUser.id;\n        });\n        if (studentIndex !== -1) {\n          state.students.splice(studentIndex, 1, updatedUser);\n        } else {\n          state.students.push(updatedUser);\n        }\n      }\n      if (updatedUser.role === 'lecturer') {\n        var lecturerIndex = state.lecturers.findIndex(function (l) {\n          return l.id === updatedUser.id;\n        });\n        if (lecturerIndex !== -1) {\n          state.lecturers.splice(lecturerIndex, 1, updatedUser);\n        } else {\n          state.lecturers.push(updatedUser);\n        }\n      }\n      if (updatedUser.role === 'advisor') {\n        var advisorIndex = state.advisors.findIndex(function (a) {\n          return a.id === updatedUser.id;\n        });\n        if (advisorIndex !== -1) {\n          state.advisors.splice(advisorIndex, 1, updatedUser);\n        } else {\n          state.advisors.push(updatedUser);\n        }\n      }\n\n      // If current user is being viewed\n      if (state.user && state.user.id === updatedUser.id) {\n        state.user = updatedUser;\n      }\n    },\n    DELETE_USER: function DELETE_USER(state, userId) {\n      state.users = state.users.filter(function (u) {\n        return u.id !== userId;\n      });\n      state.students = state.students.filter(function (u) {\n        return u.id !== userId;\n      });\n      state.lecturers = state.lecturers.filter(function (u) {\n        return u.id !== userId;\n      });\n      state.advisors = state.advisors.filter(function (u) {\n        return u.id !== userId;\n      });\n      state.advisees = state.advisees.filter(function (u) {\n        return u.id !== userId;\n      });\n      if (state.user && state.user.id === userId) {\n        state.user = null;\n      }\n    },\n    setCourseStudents: function setCourseStudents(state, students) {\n      state.courseStudents = students;\n    }\n  },\n  actions: {\n    fetchUsers: function fetchUsers(_ref) {\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n        var commit, dispatch, response, _error$response, errorMsg, _t;\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.n) {\n            case 0:\n              commit = _ref.commit, dispatch = _ref.dispatch;\n              _context.p = 1;\n              dispatch('setLoading', true, {\n                root: true\n              });\n              _context.n = 2;\n              return axios.get('/api/users');\n            case 2:\n              response = _context.v;\n              commit('SET_USERS', response.data);\n              return _context.a(2, response.data);\n            case 3:\n              _context.p = 3;\n              _t = _context.v;\n              errorMsg = ((_error$response = _t.response) === null || _error$response === void 0 || (_error$response = _error$response.data) === null || _error$response === void 0 ? void 0 : _error$response.error) || 'Failed to fetch users';\n              dispatch('setError', errorMsg, {\n                root: true\n              });\n              throw new Error(errorMsg);\n            case 4:\n              _context.p = 4;\n              dispatch('setLoading', false, {\n                root: true\n              });\n              return _context.f(4);\n            case 5:\n              return _context.a(2);\n          }\n        }, _callee, null, [[1, 3, 4, 5]]);\n      }))();\n    },\n    fetchUsersByRole: function fetchUsersByRole(_ref2, role) {\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n        var commit, dispatch, response, _error$response2, errorMsg, _t2;\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              commit = _ref2.commit, dispatch = _ref2.dispatch;\n              _context2.p = 1;\n              dispatch('setLoading', true, {\n                root: true\n              });\n              _context2.n = 2;\n              return axios.get('/api/users', {\n                params: {\n                  role: role\n                }\n              });\n            case 2:\n              response = _context2.v;\n              if (role === 'student') {\n                commit('SET_STUDENTS', response.data);\n              } else if (role === 'lecturer') {\n                commit('SET_LECTURERS', response.data);\n              } else if (role === 'advisor') {\n                commit('SET_ADVISORS', response.data);\n              }\n              return _context2.a(2, response.data);\n            case 3:\n              _context2.p = 3;\n              _t2 = _context2.v;\n              errorMsg = ((_error$response2 = _t2.response) === null || _error$response2 === void 0 || (_error$response2 = _error$response2.data) === null || _error$response2 === void 0 ? void 0 : _error$response2.error) || \"Failed to fetch \".concat(role, \"s\");\n              dispatch('setError', errorMsg, {\n                root: true\n              });\n              throw new Error(errorMsg);\n            case 4:\n              _context2.p = 4;\n              dispatch('setLoading', false, {\n                root: true\n              });\n              return _context2.f(4);\n            case 5:\n              return _context2.a(2);\n          }\n        }, _callee2, null, [[1, 3, 4, 5]]);\n      }))();\n    },\n    fetchUser: function fetchUser(_ref3, userId) {\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {\n        var commit, dispatch, response, _error$response3, errorMsg, _t3;\n        return _regenerator().w(function (_context3) {\n          while (1) switch (_context3.n) {\n            case 0:\n              commit = _ref3.commit, dispatch = _ref3.dispatch;\n              _context3.p = 1;\n              dispatch('setLoading', true, {\n                root: true\n              });\n              _context3.n = 2;\n              return axios.get(\"/api/users/\".concat(userId));\n            case 2:\n              response = _context3.v;\n              commit('SET_USER', response.data);\n              return _context3.a(2, response.data);\n            case 3:\n              _context3.p = 3;\n              _t3 = _context3.v;\n              errorMsg = ((_error$response3 = _t3.response) === null || _error$response3 === void 0 || (_error$response3 = _error$response3.data) === null || _error$response3 === void 0 ? void 0 : _error$response3.error) || 'Failed to fetch user';\n              dispatch('setError', errorMsg, {\n                root: true\n              });\n              throw new Error(errorMsg);\n            case 4:\n              _context3.p = 4;\n              dispatch('setLoading', false, {\n                root: true\n              });\n              return _context3.f(4);\n            case 5:\n              return _context3.a(2);\n          }\n        }, _callee3, null, [[1, 3, 4, 5]]);\n      }))();\n    },\n    createUser: function createUser(_ref4, userData) {\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4() {\n        var commit, dispatch, response, newUserId, userResponse, _error$response4, errorMsg, _t4;\n        return _regenerator().w(function (_context4) {\n          while (1) switch (_context4.n) {\n            case 0:\n              commit = _ref4.commit, dispatch = _ref4.dispatch;\n              _context4.p = 1;\n              dispatch('setLoading', true, {\n                root: true\n              });\n\n              // Use the register endpoint to create a user\n              _context4.n = 2;\n              return axios.post('/api/auth/register', userData);\n            case 2:\n              response = _context4.v;\n              newUserId = response.data.userId; // Fetch the new user's details\n              _context4.n = 3;\n              return axios.get(\"/api/users/\".concat(newUserId));\n            case 3:\n              userResponse = _context4.v;\n              commit('ADD_USER', userResponse.data);\n              dispatch('showToast', {\n                message: 'User created successfully',\n                type: 'success'\n              }, {\n                root: true\n              });\n              return _context4.a(2, userResponse.data);\n            case 4:\n              _context4.p = 4;\n              _t4 = _context4.v;\n              errorMsg = ((_error$response4 = _t4.response) === null || _error$response4 === void 0 || (_error$response4 = _error$response4.data) === null || _error$response4 === void 0 ? void 0 : _error$response4.error) || 'Failed to create user';\n              dispatch('setError', errorMsg, {\n                root: true\n              });\n              throw new Error(errorMsg);\n            case 5:\n              _context4.p = 5;\n              dispatch('setLoading', false, {\n                root: true\n              });\n              return _context4.f(5);\n            case 6:\n              return _context4.a(2);\n          }\n        }, _callee4, null, [[1, 4, 5, 6]]);\n      }))();\n    },\n    updateUser: function updateUser(_ref5, _ref6) {\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee5() {\n        var commit, dispatch, userId, userData, response, _error$response5, errorMsg, _t5;\n        return _regenerator().w(function (_context5) {\n          while (1) switch (_context5.n) {\n            case 0:\n              commit = _ref5.commit, dispatch = _ref5.dispatch;\n              userId = _ref6.userId, userData = _ref6.userData;\n              _context5.p = 1;\n              dispatch('setLoading', true, {\n                root: true\n              });\n              _context5.n = 2;\n              return axios.put(\"/api/users/\".concat(userId), userData);\n            case 2:\n              _context5.n = 3;\n              return axios.get(\"/api/users/\".concat(userId));\n            case 3:\n              response = _context5.v;\n              commit('UPDATE_USER', response.data);\n              dispatch('showToast', {\n                message: 'User updated successfully',\n                type: 'success'\n              }, {\n                root: true\n              });\n              return _context5.a(2, response.data);\n            case 4:\n              _context5.p = 4;\n              _t5 = _context5.v;\n              errorMsg = ((_error$response5 = _t5.response) === null || _error$response5 === void 0 || (_error$response5 = _error$response5.data) === null || _error$response5 === void 0 ? void 0 : _error$response5.error) || 'Failed to update user';\n              dispatch('setError', errorMsg, {\n                root: true\n              });\n              throw new Error(errorMsg);\n            case 5:\n              _context5.p = 5;\n              dispatch('setLoading', false, {\n                root: true\n              });\n              return _context5.f(5);\n            case 6:\n              return _context5.a(2);\n          }\n        }, _callee5, null, [[1, 4, 5, 6]]);\n      }))();\n    },\n    deleteUser: function deleteUser(_ref7, userId) {\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee6() {\n        var commit, dispatch, _error$response6, errorMsg, _t6;\n        return _regenerator().w(function (_context6) {\n          while (1) switch (_context6.n) {\n            case 0:\n              commit = _ref7.commit, dispatch = _ref7.dispatch;\n              _context6.p = 1;\n              dispatch('setLoading', true, {\n                root: true\n              });\n              _context6.n = 2;\n              return axios[\"delete\"](\"/api/users/\".concat(userId));\n            case 2:\n              commit('DELETE_USER', userId);\n              dispatch('showToast', {\n                message: 'User deleted successfully',\n                type: 'success'\n              }, {\n                root: true\n              });\n              return _context6.a(2, true);\n            case 3:\n              _context6.p = 3;\n              _t6 = _context6.v;\n              errorMsg = ((_error$response6 = _t6.response) === null || _error$response6 === void 0 || (_error$response6 = _error$response6.data) === null || _error$response6 === void 0 ? void 0 : _error$response6.error) || 'Failed to delete user';\n              dispatch('setError', errorMsg, {\n                root: true\n              });\n              throw new Error(errorMsg);\n            case 4:\n              _context6.p = 4;\n              dispatch('setLoading', false, {\n                root: true\n              });\n              return _context6.f(4);\n            case 5:\n              return _context6.a(2);\n          }\n        }, _callee6, null, [[1, 3, 4, 5]]);\n      }))();\n    },\n    // Fetch advisees for the current advisor\n    fetchAdvisees: function fetchAdvisees(_ref8) {\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee7() {\n        var commit, dispatch, rootGetters, currentUser, userFromStorage, errorMsg, token, apiUrl, response, advisees, _error$response7, _errorMsg, _t7, _t8;\n        return _regenerator().w(function (_context7) {\n          while (1) switch (_context7.n) {\n            case 0:\n              commit = _ref8.commit, dispatch = _ref8.dispatch, rootGetters = _ref8.rootGetters;\n              _context7.p = 1;\n              dispatch('setLoading', true, {\n                root: true\n              });\n              currentUser = rootGetters['auth/user'];\n              console.log('fetchAdvisees - Current user from store:', currentUser);\n\n              // If user is undefined but we have authentication data in localStorage, try to restore it\n              if (!(!currentUser && localStorage.getItem('token') && localStorage.getItem('user'))) {\n                _context7.n = 6;\n                break;\n              }\n              console.log('fetchAdvisees - User undefined, trying to restore from localStorage');\n              _context7.p = 2;\n              _context7.n = 3;\n              return dispatch('auth/checkAuth', null, {\n                root: true\n              });\n            case 3:\n              currentUser = rootGetters['auth/user'];\n              console.log('fetchAdvisees - User after checkAuth:', currentUser);\n              _context7.n = 5;\n              break;\n            case 4:\n              _context7.p = 4;\n              _t7 = _context7.v;\n              console.error('fetchAdvisees - Error in checkAuth:', _t7);\n            case 5:\n              // If still undefined, try parsing directly from localStorage\n              if (!currentUser) {\n                try {\n                  userFromStorage = JSON.parse(localStorage.getItem('user'));\n                  console.log('fetchAdvisees - User from localStorage:', userFromStorage);\n                  currentUser = userFromStorage;\n                } catch (e) {\n                  console.error('fetchAdvisees - Error parsing user from localStorage:', e);\n                }\n              }\n            case 6:\n              if (!(!currentUser || currentUser.role !== 'advisor')) {\n                _context7.n = 7;\n                break;\n              }\n              errorMsg = \"Advisor access required. Current user: \".concat(JSON.stringify(currentUser));\n              console.error(errorMsg);\n              throw new Error(errorMsg);\n            case 7:\n              // Use the advisor dashboard API to get advisees\n              token = localStorage.getItem('token');\n              console.log('fetchAdvisees - Token:', token ? \"\".concat(token.substring(0, 20), \"...\") : 'No token');\n              apiUrl = \"http://localhost:3000/advisor-dashboard-api.php?action=advisees\";\n              console.log('fetchAdvisees - Making request to:', apiUrl);\n              _context7.n = 8;\n              return axios.get(apiUrl, {\n                headers: {\n                  'Authorization': \"Bearer \".concat(token)\n                }\n              });\n            case 8:\n              response = _context7.v;\n              console.log('fetchAdvisees - Response:', response.data);\n\n              // Transform the data to match the component expectations\n              advisees = response.data.advisees.map(function (advisee) {\n                return {\n                  id: advisee.id,\n                  fullName: advisee.name,\n                  studentId: advisee.matric_number,\n                  email: advisee.email,\n                  program: advisee.program || 'Not specified',\n                  gpa: parseFloat(advisee.gpa) || 0,\n                  enrolledCourses: advisee.enrolled_courses || 0,\n                  status: advisee.status || 'Unknown',\n                  risk: advisee.risk || 'Low'\n                };\n              });\n              commit('SET_ADVISEES', advisees);\n              return _context7.a(2, advisees);\n            case 9:\n              _context7.p = 9;\n              _t8 = _context7.v;\n              _errorMsg = ((_error$response7 = _t8.response) === null || _error$response7 === void 0 || (_error$response7 = _error$response7.data) === null || _error$response7 === void 0 ? void 0 : _error$response7.error) || 'Failed to fetch advisees';\n              dispatch('setError', _errorMsg, {\n                root: true\n              });\n              throw new Error(_errorMsg);\n            case 10:\n              _context7.p = 10;\n              dispatch('setLoading', false, {\n                root: true\n              });\n              return _context7.f(10);\n            case 11:\n              return _context7.a(2);\n          }\n        }, _callee7, null, [[2, 4], [1, 9, 10, 11]]);\n      }))();\n    },\n    // Fetch students assigned to an advisor\n    fetchAdviseesByAdvisor: function fetchAdviseesByAdvisor(_ref9, advisorId) {\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee8() {\n        var commit, dispatch, response, _error$response8, errorMsg, _t9;\n        return _regenerator().w(function (_context8) {\n          while (1) switch (_context8.n) {\n            case 0:\n              commit = _ref9.commit, dispatch = _ref9.dispatch;\n              _context8.p = 1;\n              dispatch('setLoading', true, {\n                root: true\n              });\n\n              // This is a placeholder - you would need to add this endpoint to your backend\n              _context8.n = 2;\n              return axios.get(\"/api/advisors/\".concat(advisorId, \"/advisees\"));\n            case 2:\n              response = _context8.v;\n              commit('SET_ADVISEES', response.data);\n              return _context8.a(2, response.data);\n            case 3:\n              _context8.p = 3;\n              _t9 = _context8.v;\n              errorMsg = ((_error$response8 = _t9.response) === null || _error$response8 === void 0 || (_error$response8 = _error$response8.data) === null || _error$response8 === void 0 ? void 0 : _error$response8.error) || 'Failed to fetch advisees';\n              dispatch('setError', errorMsg, {\n                root: true\n              });\n              throw new Error(errorMsg);\n            case 4:\n              _context8.p = 4;\n              dispatch('setLoading', false, {\n                root: true\n              });\n              return _context8.f(4);\n            case 5:\n              return _context8.a(2);\n          }\n        }, _callee8, null, [[1, 3, 4, 5]]);\n      }))();\n    },\n    // Fetch a specific advisee by ID\n    fetchAdviseeById: function fetchAdviseeById(_ref0, studentId) {\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee9() {\n        var dispatch, token, response, advisee, _error$response9, errorMsg, _t0;\n        return _regenerator().w(function (_context9) {\n          while (1) switch (_context9.n) {\n            case 0:\n              dispatch = _ref0.dispatch;\n              _context9.p = 1;\n              dispatch('setLoading', true, {\n                root: true\n              });\n\n              // Use the advisor dashboard API to get advisee data\n              token = localStorage.getItem('token');\n              _context9.n = 2;\n              return axios.get(\"http://localhost:3000/advisor-dashboard-api.php?action=advisees\", {\n                headers: {\n                  'Authorization': \"Bearer \".concat(token)\n                }\n              });\n            case 2:\n              response = _context9.v;\n              // Find the specific student in the advisees list\n              advisee = response.data.advisees.find(function (student) {\n                return student.id == studentId;\n              });\n              if (advisee) {\n                _context9.n = 3;\n                break;\n              }\n              throw new Error('Student not found or not under your advisory');\n            case 3:\n              // Add default properties if missing\n              advisee.advisorNotes = advisee.advisorNotes || [];\n              advisee.totalCreditsRequired = advisee.totalCreditsRequired || 120;\n              return _context9.a(2, advisee);\n            case 4:\n              _context9.p = 4;\n              _t0 = _context9.v;\n              errorMsg = ((_error$response9 = _t0.response) === null || _error$response9 === void 0 || (_error$response9 = _error$response9.data) === null || _error$response9 === void 0 ? void 0 : _error$response9.error) || 'Failed to fetch advisee data';\n              dispatch('setError', errorMsg, {\n                root: true\n              });\n              throw new Error(errorMsg);\n            case 5:\n              _context9.p = 5;\n              dispatch('setLoading', false, {\n                root: true\n              });\n              return _context9.f(5);\n            case 6:\n              return _context9.a(2);\n          }\n        }, _callee9, null, [[1, 4, 5, 6]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["axios","namespaced","state","users","user","students","lecturers","advisors","advisees","courseStudents","getters","getAllUsers","getUsers","getUser","getAllStudents","getAllLecturers","getAllAdvisors","getAllAdvisees","mutations","SET_USERS","SET_USER","SET_STUDENTS","SET_LECTURERS","SET_ADVISORS","SET_ADVISEES","ADD_USER","push","role","UPDATE_USER","updatedUser","index","findIndex","u","id","splice","studentIndex","s","lecturerIndex","l","advisorIndex","a","DELETE_USER","userId","filter","setCourseStudents","actions","fetchUsers","_ref","_asyncToGenerator","_regenerator","m","_callee","commit","dispatch","response","_error$response","errorMsg","_t","w","_context","n","p","root","get","v","data","error","Error","f","fetchUsersByRole","_ref2","_callee2","_error$response2","_t2","_context2","params","concat","fetchUser","_ref3","_callee3","_error$response3","_t3","_context3","createUser","_ref4","userData","_callee4","newUserId","userResponse","_error$response4","_t4","_context4","post","message","type","updateUser","_ref5","_ref6","_callee5","_error$response5","_t5","_context5","put","deleteUser","_ref7","_callee6","_error$response6","_t6","_context6","fetchAdvisees","_ref8","_callee7","rootGetters","currentUser","userFromStorage","token","apiUrl","_error$response7","_errorMsg","_t7","_t8","_context7","console","log","localStorage","getItem","JSON","parse","e","stringify","substring","headers","map","advisee","fullName","name","studentId","matric_number","email","program","gpa","parseFloat","enrolledCourses","enrolled_courses","status","risk","fetchAdviseesByAdvisor","_ref9","advisorId","_callee8","_error$response8","_t9","_context8","fetchAdviseeById","_ref0","_callee9","_error$response9","_t0","_context9","find","student","advisorNotes","totalCreditsRequired"],"sources":["C:/Users/ansmu/Desktop/Web/NEW/course-mark-management/frontend/src/store/modules/users.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state: {\r\n    users: [],\r\n    user: null,\r\n    students: [],\r\n    lecturers: [],\r\n    advisors: [],\r\n    advisees: [],\r\n    courseStudents: []\r\n  },\r\n  getters: {\r\n    getAllUsers: state => state.users,\r\n    getUsers: state => state.users,\r\n    getUser: state => state.user,\r\n    getAllStudents: state => state.students,\r\n    getAllLecturers: state => state.lecturers,\r\n    getAllAdvisors: state => state.advisors,\r\n    getAllAdvisees: state => state.advisees\r\n  },\r\n  mutations: {\r\n    SET_USERS(state, users) {\r\n      state.users = users;\r\n    },\r\n    SET_USER(state, user) {\r\n      state.user = user;\r\n    },\r\n    SET_STUDENTS(state, students) {\r\n      state.students = students;\r\n    },\r\n    SET_LECTURERS(state, lecturers) {\r\n      state.lecturers = lecturers;\r\n    },\r\n    SET_ADVISORS(state, advisors) {\r\n      state.advisors = advisors;\r\n    },\r\n    SET_ADVISEES(state, advisees) {\r\n      state.advisees = advisees;\r\n    },\r\n    ADD_USER(state, user) {\r\n      state.users.push(user);\r\n      // Also add to specific role arrays\r\n      if (user.role === 'student') state.students.push(user);\r\n      if (user.role === 'lecturer') state.lecturers.push(user);\r\n      if (user.role === 'advisor') state.advisors.push(user);\r\n    },\r\n    UPDATE_USER(state, updatedUser) {\r\n      // Update in users array\r\n      const index = state.users.findIndex(u => u.id === updatedUser.id);\r\n      if (index !== -1) {\r\n        state.users.splice(index, 1, updatedUser);\r\n      }\r\n      \r\n      // Update in specific role arrays\r\n      if (updatedUser.role === 'student') {\r\n        const studentIndex = state.students.findIndex(s => s.id === updatedUser.id);\r\n        if (studentIndex !== -1) {\r\n          state.students.splice(studentIndex, 1, updatedUser);\r\n        } else {\r\n          state.students.push(updatedUser);\r\n        }\r\n      }\r\n      \r\n      if (updatedUser.role === 'lecturer') {\r\n        const lecturerIndex = state.lecturers.findIndex(l => l.id === updatedUser.id);\r\n        if (lecturerIndex !== -1) {\r\n          state.lecturers.splice(lecturerIndex, 1, updatedUser);\r\n        } else {\r\n          state.lecturers.push(updatedUser);\r\n        }\r\n      }\r\n      \r\n      if (updatedUser.role === 'advisor') {\r\n        const advisorIndex = state.advisors.findIndex(a => a.id === updatedUser.id);\r\n        if (advisorIndex !== -1) {\r\n          state.advisors.splice(advisorIndex, 1, updatedUser);\r\n        } else {\r\n          state.advisors.push(updatedUser);\r\n        }\r\n      }\r\n      \r\n      // If current user is being viewed\r\n      if (state.user && state.user.id === updatedUser.id) {\r\n        state.user = updatedUser;\r\n      }\r\n    },\r\n    DELETE_USER(state, userId) {\r\n      state.users = state.users.filter(u => u.id !== userId);\r\n      state.students = state.students.filter(u => u.id !== userId);\r\n      state.lecturers = state.lecturers.filter(u => u.id !== userId);\r\n      state.advisors = state.advisors.filter(u => u.id !== userId);\r\n      state.advisees = state.advisees.filter(u => u.id !== userId);\r\n      \r\n      if (state.user && state.user.id === userId) {\r\n        state.user = null;\r\n      }\r\n    },\r\n    setCourseStudents(state, students) {\r\n      state.courseStudents = students;\r\n    }\r\n  },\r\n  actions: {\r\n    async fetchUsers({ commit, dispatch }) {\r\n      try {\r\n        dispatch('setLoading', true, { root: true });\r\n        \r\n        const response = await axios.get('/api/users');\r\n        commit('SET_USERS', response.data);\r\n        return response.data;\r\n      } catch (error) {\r\n        const errorMsg = error.response?.data?.error || 'Failed to fetch users';\r\n        dispatch('setError', errorMsg, { root: true });\r\n        throw new Error(errorMsg);\r\n      } finally {\r\n        dispatch('setLoading', false, { root: true });\r\n      }\r\n    },\r\n    \r\n    async fetchUsersByRole({ commit, dispatch }, role) {\r\n      try {\r\n        dispatch('setLoading', true, { root: true });\r\n        \r\n        const response = await axios.get('/api/users', { params: { role } });\r\n        \r\n        if (role === 'student') {\r\n          commit('SET_STUDENTS', response.data);\r\n        } else if (role === 'lecturer') {\r\n          commit('SET_LECTURERS', response.data);\r\n        } else if (role === 'advisor') {\r\n          commit('SET_ADVISORS', response.data);\r\n        }\r\n        \r\n        return response.data;\r\n      } catch (error) {\r\n        const errorMsg = error.response?.data?.error || `Failed to fetch ${role}s`;\r\n        dispatch('setError', errorMsg, { root: true });\r\n        throw new Error(errorMsg);\r\n      } finally {\r\n        dispatch('setLoading', false, { root: true });\r\n      }\r\n    },\r\n    \r\n    async fetchUser({ commit, dispatch }, userId) {\r\n      try {\r\n        dispatch('setLoading', true, { root: true });\r\n        \r\n        const response = await axios.get(`/api/users/${userId}`);\r\n        commit('SET_USER', response.data);\r\n        return response.data;\r\n      } catch (error) {\r\n        const errorMsg = error.response?.data?.error || 'Failed to fetch user';\r\n        dispatch('setError', errorMsg, { root: true });\r\n        throw new Error(errorMsg);\r\n      } finally {\r\n        dispatch('setLoading', false, { root: true });\r\n      }\r\n    },\r\n    \r\n    async createUser({ commit, dispatch }, userData) {\r\n      try {\r\n        dispatch('setLoading', true, { root: true });\r\n        \r\n        // Use the register endpoint to create a user\r\n        const response = await axios.post('/api/auth/register', userData);\r\n        const newUserId = response.data.userId;\r\n        \r\n        // Fetch the new user's details\r\n        const userResponse = await axios.get(`/api/users/${newUserId}`);\r\n        \r\n        commit('ADD_USER', userResponse.data);\r\n        dispatch('showToast', {\r\n          message: 'User created successfully',\r\n          type: 'success'\r\n        }, { root: true });\r\n        \r\n        return userResponse.data;\r\n      } catch (error) {\r\n        const errorMsg = error.response?.data?.error || 'Failed to create user';\r\n        dispatch('setError', errorMsg, { root: true });\r\n        throw new Error(errorMsg);\r\n      } finally {\r\n        dispatch('setLoading', false, { root: true });\r\n      }\r\n    },\r\n    \r\n    async updateUser({ commit, dispatch }, { userId, userData }) {\r\n      try {\r\n        dispatch('setLoading', true, { root: true });\r\n        \r\n        await axios.put(`/api/users/${userId}`, userData);\r\n        \r\n        // Fetch updated user data\r\n        const response = await axios.get(`/api/users/${userId}`);\r\n        \r\n        commit('UPDATE_USER', response.data);\r\n        dispatch('showToast', {\r\n          message: 'User updated successfully',\r\n          type: 'success'\r\n        }, { root: true });\r\n        \r\n        return response.data;\r\n      } catch (error) {\r\n        const errorMsg = error.response?.data?.error || 'Failed to update user';\r\n        dispatch('setError', errorMsg, { root: true });\r\n        throw new Error(errorMsg);\r\n      } finally {\r\n        dispatch('setLoading', false, { root: true });\r\n      }\r\n    },\r\n    \r\n    async deleteUser({ commit, dispatch }, userId) {\r\n      try {\r\n        dispatch('setLoading', true, { root: true });\r\n        \r\n        await axios.delete(`/api/users/${userId}`);\r\n        \r\n        commit('DELETE_USER', userId);\r\n        dispatch('showToast', {\r\n          message: 'User deleted successfully',\r\n          type: 'success'\r\n        }, { root: true });\r\n        \r\n        return true;\r\n      } catch (error) {\r\n        const errorMsg = error.response?.data?.error || 'Failed to delete user';\r\n        dispatch('setError', errorMsg, { root: true });\r\n        throw new Error(errorMsg);\r\n      } finally {\r\n        dispatch('setLoading', false, { root: true });\r\n      }\r\n    },\r\n\r\n    // Fetch advisees for the current advisor\r\n    async fetchAdvisees({ commit, dispatch, rootGetters }) {\r\n      try {\r\n        dispatch('setLoading', true, { root: true });\r\n        \r\n        let currentUser = rootGetters['auth/user'];\r\n        console.log('fetchAdvisees - Current user from store:', currentUser);\r\n        \r\n        // If user is undefined but we have authentication data in localStorage, try to restore it\r\n        if (!currentUser && localStorage.getItem('token') && localStorage.getItem('user')) {\r\n          console.log('fetchAdvisees - User undefined, trying to restore from localStorage');\r\n          try {\r\n            // Try to dispatch checkAuth to restore user state\r\n            await dispatch('auth/checkAuth', null, { root: true });\r\n            currentUser = rootGetters['auth/user'];\r\n            console.log('fetchAdvisees - User after checkAuth:', currentUser);\r\n          } catch (e) {\r\n            console.error('fetchAdvisees - Error in checkAuth:', e);\r\n          }\r\n          \r\n          // If still undefined, try parsing directly from localStorage\r\n          if (!currentUser) {\r\n            try {\r\n              const userFromStorage = JSON.parse(localStorage.getItem('user'));\r\n              console.log('fetchAdvisees - User from localStorage:', userFromStorage);\r\n              currentUser = userFromStorage;\r\n            } catch (e) {\r\n              console.error('fetchAdvisees - Error parsing user from localStorage:', e);\r\n            }\r\n          }\r\n        }\r\n        \r\n        if (!currentUser || currentUser.role !== 'advisor') {\r\n          const errorMsg = `Advisor access required. Current user: ${JSON.stringify(currentUser)}`;\r\n          console.error(errorMsg);\r\n          throw new Error(errorMsg);\r\n        }\r\n        \r\n        // Use the advisor dashboard API to get advisees\r\n        const token = localStorage.getItem('token');\r\n        console.log('fetchAdvisees - Token:', token ? `${token.substring(0, 20)}...` : 'No token');\r\n        \r\n        const apiUrl = `http://localhost:3000/advisor-dashboard-api.php?action=advisees`;\r\n        console.log('fetchAdvisees - Making request to:', apiUrl);\r\n        \r\n        const response = await axios.get(apiUrl, {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n        \r\n        console.log('fetchAdvisees - Response:', response.data);\r\n        \r\n        // Transform the data to match the component expectations\r\n        const advisees = response.data.advisees.map(advisee => ({\r\n          id: advisee.id,\r\n          fullName: advisee.name,\r\n          studentId: advisee.matric_number,\r\n          email: advisee.email,\r\n          program: advisee.program || 'Not specified',\r\n          gpa: parseFloat(advisee.gpa) || 0,\r\n          enrolledCourses: advisee.enrolled_courses || 0,\r\n          status: advisee.status || 'Unknown',\r\n          risk: advisee.risk || 'Low'\r\n        }));\r\n        \r\n        commit('SET_ADVISEES', advisees);\r\n        return advisees;\r\n      } catch (error) {\r\n        const errorMsg = error.response?.data?.error || 'Failed to fetch advisees';\r\n        dispatch('setError', errorMsg, { root: true });\r\n        throw new Error(errorMsg);\r\n      } finally {\r\n        dispatch('setLoading', false, { root: true });\r\n      }\r\n    },\r\n    \r\n    // Fetch students assigned to an advisor\r\n    async fetchAdviseesByAdvisor({ commit, dispatch }, advisorId) {\r\n      try {\r\n        dispatch('setLoading', true, { root: true });\r\n        \r\n        // This is a placeholder - you would need to add this endpoint to your backend\r\n        const response = await axios.get(`/api/advisors/${advisorId}/advisees`);\r\n        \r\n        commit('SET_ADVISEES', response.data);\r\n        return response.data;\r\n      } catch (error) {\r\n        const errorMsg = error.response?.data?.error || 'Failed to fetch advisees';\r\n        dispatch('setError', errorMsg, { root: true });\r\n        throw new Error(errorMsg);\r\n      } finally {\r\n        dispatch('setLoading', false, { root: true });\r\n      }\r\n    },\r\n\r\n    // Fetch a specific advisee by ID\r\n    async fetchAdviseeById({ dispatch }, studentId) {\r\n      try {\r\n        dispatch('setLoading', true, { root: true });\r\n        \r\n        // Use the advisor dashboard API to get advisee data\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.get(`http://localhost:3000/advisor-dashboard-api.php?action=advisees`, {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n        \r\n        // Find the specific student in the advisees list\r\n        const advisee = response.data.advisees.find(student => student.id == studentId);\r\n        if (!advisee) {\r\n          throw new Error('Student not found or not under your advisory');\r\n        }\r\n        \r\n        // Add default properties if missing\r\n        advisee.advisorNotes = advisee.advisorNotes || [];\r\n        advisee.totalCreditsRequired = advisee.totalCreditsRequired || 120;\r\n        \r\n        return advisee;\r\n      } catch (error) {\r\n        const errorMsg = error.response?.data?.error || 'Failed to fetch advisee data';\r\n        dispatch('setError', errorMsg, { root: true });\r\n        throw new Error(errorMsg);\r\n      } finally {\r\n        dispatch('setLoading', false, { root: true });\r\n      }\r\n    }\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}