{"ast":null,"code":"import _regenerator from \"C:/Users/ansmu/Desktop/Web/NEW/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _asyncToGenerator from \"C:/Users/ansmu/Desktop/Web/NEW/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"C:/Users/ansmu/Desktop/Web/NEW/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.unshift.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.date.to-iso-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { mapGetters } from 'vuex';\nimport Chart from 'chart.js/auto';\nimport * as bootstrap from 'bootstrap';\nexport default {\n  name: 'AdvisorDashboard',\n  data: function data() {\n    return {\n      advisees: [],\n      adviseesCourses: [],\n      showCourseDropdown: false,\n      notes: [],\n      riskChart: null,\n      currentNote: {\n        id: null,\n        student_id: null,\n        note: ''\n      },\n      // Sample data for demonstration - in a real app, this would come from the API\n      adviseesData: [{\n        id: 1,\n        name: 'John Smith',\n        matric_number: 'A12345',\n        status: 'Good Standing',\n        gpa: 3.5,\n        risk: 'Low'\n      }, {\n        id: 2,\n        name: 'Emily Johnson',\n        matric_number: 'A23456',\n        status: 'Warning',\n        gpa: 1.8,\n        risk: 'High'\n      }, {\n        id: 3,\n        name: 'Michael Brown',\n        matric_number: 'A34567',\n        status: 'Probation',\n        gpa: 2.1,\n        risk: 'Medium'\n      }, {\n        id: 4,\n        name: 'Sarah Davis',\n        matric_number: 'A45678',\n        status: 'Good Standing',\n        gpa: 3.2,\n        risk: 'Low'\n      }, {\n        id: 5,\n        name: 'David Wilson',\n        matric_number: 'A56789',\n        status: 'Warning',\n        gpa: 1.9,\n        risk: 'High'\n      }],\n      notesData: [{\n        id: 1,\n        student_id: 2,\n        student_name: 'Emily Johnson',\n        note: 'Discussed academic improvement plan. Student committed to attending all classes and seeking tutoring for difficult subjects.',\n        created_at: '2023-09-15T10:30:00'\n      }, {\n        id: 2,\n        student_id: 3,\n        student_name: 'Michael Brown',\n        note: 'Reviewed midterm results and identified areas for improvement. Recommended study group and additional practice problems.',\n        created_at: '2023-09-10T14:15:00'\n      }, {\n        id: 3,\n        student_id: 5,\n        student_name: 'David Wilson',\n        note: 'Student expressed concerns about workload. Discussed time management strategies and prioritization techniques.',\n        created_at: '2023-09-05T09:45:00'\n      }]\n    };\n  },\n  computed: _objectSpread(_objectSpread(_objectSpread({}, mapGetters(['isLoading'])), mapGetters('auth', ['getUser'])), {}, {\n    userInfo: function userInfo() {\n      return this.getUser || {\n        name: 'Advisor'\n      };\n    },\n    highRiskCount: function highRiskCount() {\n      return this.advisees.filter(function (s) {\n        return s.risk === 'High';\n      }).length;\n    },\n    mediumRiskCount: function mediumRiskCount() {\n      return this.advisees.filter(function (s) {\n        return s.risk === 'Medium';\n      }).length;\n    },\n    lowRiskCount: function lowRiskCount() {\n      return this.advisees.filter(function (s) {\n        return s.risk === 'Low';\n      }).length;\n    }\n  }),\n  mounted: function mounted() {\n    var _this = this;\n    this.loadData();\n\n    // Close dropdown when clicking outside\n    document.addEventListener('click', function (e) {\n      if (!e.target.closest('.dropdown')) {\n        _this.showCourseDropdown = false;\n      }\n    });\n  },\n  methods: {\n    toggleCourseDropdown: function toggleCourseDropdown() {\n      this.showCourseDropdown = !this.showCourseDropdown;\n    },\n    loadData: function loadData() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n        var _t;\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.n) {\n            case 0:\n              _context.p = 0;\n              // In a real app, we would fetch the advisor's advisees and notes from the API\n              // For now, using sample data\n              _this2.advisees = _this2.adviseesData;\n              _this2.notes = _this2.notesData;\n\n              // Load advisor courses (courses where advisees are enrolled)\n              _context.n = 1;\n              return _this2.loadAdviseesCourses();\n            case 1:\n              _this2.$nextTick(function () {\n                _this2.initRiskChart();\n              });\n              _context.n = 3;\n              break;\n            case 2:\n              _context.p = 2;\n              _t = _context.v;\n              console.error('Error loading dashboard data:', _t);\n            case 3:\n              return _context.a(2);\n          }\n        }, _callee, null, [[0, 2]]);\n      }))();\n    },\n    loadAdviseesCourses: function loadAdviseesCourses() {\n      var _this3 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n        var _this3$userInfo, userId, response, data, _t2;\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              _context2.p = 0;\n              userId = (_this3$userInfo = _this3.userInfo) === null || _this3$userInfo === void 0 ? void 0 : _this3$userInfo.id;\n              if (userId) {\n                _context2.n = 1;\n                break;\n              }\n              return _context2.a(2);\n            case 1:\n              _context2.n = 2;\n              return fetch(\"http://localhost:8080/breakdown-api.php?action=advisor_courses&advisor_id=\".concat(userId), {\n                method: 'GET',\n                credentials: 'include',\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n            case 2:\n              response = _context2.v;\n              if (!response.ok) {\n                _context2.n = 4;\n                break;\n              }\n              _context2.n = 3;\n              return response.json();\n            case 3:\n              data = _context2.v;\n              _this3.adviseesCourses = data.courses || [];\n\n              // If no courses from API, add sample data for testing\n              if (_this3.adviseesCourses.length === 0) {\n                _this3.adviseesCourses = [{\n                  id: 1,\n                  code: 'CS101',\n                  name: 'Introduction to Computer Science'\n                }, {\n                  id: 2,\n                  code: 'MATH201',\n                  name: 'Calculus II'\n                }, {\n                  id: 3,\n                  code: 'PHYS101',\n                  name: 'Physics I'\n                }];\n              }\n              _context2.n = 5;\n              break;\n            case 4:\n              console.error('Failed to load advisor courses');\n              // Fallback sample data\n              _this3.adviseesCourses = [{\n                id: 1,\n                code: 'CS101',\n                name: 'Introduction to Computer Science'\n              }, {\n                id: 2,\n                code: 'MATH201',\n                name: 'Calculus II'\n              }, {\n                id: 3,\n                code: 'PHYS101',\n                name: 'Physics I'\n              }];\n            case 5:\n              _context2.n = 7;\n              break;\n            case 6:\n              _context2.p = 6;\n              _t2 = _context2.v;\n              console.error('Error loading advisor courses:', _t2);\n              // Fallback sample data\n              _this3.adviseesCourses = [{\n                id: 1,\n                code: 'CS101',\n                name: 'Introduction to Computer Science'\n              }, {\n                id: 2,\n                code: 'MATH201',\n                name: 'Calculus II'\n              }, {\n                id: 3,\n                code: 'PHYS101',\n                name: 'Physics I'\n              }];\n            case 7:\n              return _context2.a(2);\n          }\n        }, _callee2, null, [[0, 6]]);\n      }))();\n    },\n    getInitials: function getInitials(name) {\n      return name.split(' ').map(function (n) {\n        return n[0];\n      }).join('').toUpperCase();\n    },\n    getRiskBadgeClass: function getRiskBadgeClass(risk) {\n      switch (risk) {\n        case 'High':\n          return 'bg-danger';\n        case 'Medium':\n          return 'bg-warning';\n        case 'Low':\n          return 'bg-success';\n        default:\n          return 'bg-secondary';\n      }\n    },\n    formatDate: function formatDate(dateString) {\n      if (!dateString) return '';\n      var date = new Date(dateString);\n      return date.toLocaleDateString('en-GB', {\n        day: 'numeric',\n        month: 'short',\n        year: 'numeric'\n      });\n    },\n    initRiskChart: function initRiskChart() {\n      var ctx = document.getElementById('riskChart');\n      if (this.riskChart) {\n        this.riskChart.destroy();\n      }\n      this.riskChart = new Chart(ctx, {\n        type: 'doughnut',\n        data: {\n          labels: ['High Risk', 'Medium Risk', 'Low Risk'],\n          datasets: [{\n            data: [this.highRiskCount, this.mediumRiskCount, this.lowRiskCount],\n            backgroundColor: ['#e74c3c', '#f39c12', '#2ecc71'],\n            borderWidth: 0\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            legend: {\n              position: 'bottom'\n            }\n          },\n          cutout: '65%'\n        }\n      });\n    },\n    addNote: function addNote() {\n      var student = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      this.currentNote = {\n        id: null,\n        student_id: student ? student.id : null,\n        note: ''\n      };\n      var modal = new bootstrap.Modal(document.getElementById('noteModal'));\n      modal.show();\n    },\n    editNote: function editNote(note) {\n      this.currentNote = _objectSpread({}, note);\n      var modal = new bootstrap.Modal(document.getElementById('noteModal'));\n      modal.show();\n    },\n    saveNote: function saveNote() {\n      var _this4 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {\n        var index, student, newNote, modalElement, modal;\n        return _regenerator().w(function (_context3) {\n          while (1) switch (_context3.n) {\n            case 0:\n              try {\n                // In a real app, we would save the note to the API\n                if (_this4.currentNote.id) {\n                  // Update existing note\n                  index = _this4.notes.findIndex(function (n) {\n                    return n.id === _this4.currentNote.id;\n                  });\n                  if (index !== -1) {\n                    _this4.notes[index] = _objectSpread({}, _this4.currentNote);\n                  }\n                } else {\n                  // Add new note\n                  student = _this4.advisees.find(function (s) {\n                    return s.id === _this4.currentNote.student_id;\n                  });\n                  newNote = {\n                    id: Date.now(),\n                    // temporary ID\n                    student_id: _this4.currentNote.student_id,\n                    student_name: student.name,\n                    note: _this4.currentNote.note,\n                    created_at: new Date().toISOString()\n                  };\n                  _this4.notes.unshift(newNote);\n                }\n\n                // Close the modal\n                modalElement = document.getElementById('noteModal');\n                modal = bootstrap.Modal.getInstance(modalElement);\n                modal.hide();\n\n                // Show success message\n                _this4.$store.dispatch('showToast', {\n                  message: \"Note \".concat(_this4.currentNote.id ? 'updated' : 'added', \" successfully\"),\n                  type: 'success'\n                });\n              } catch (error) {\n                console.error('Error saving note:', error);\n              }\n            case 1:\n              return _context3.a(2);\n          }\n        }, _callee3);\n      }))();\n    },\n    deleteNote: function deleteNote(note) {\n      var _this5 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4() {\n        return _regenerator().w(function (_context4) {\n          while (1) switch (_context4.n) {\n            case 0:\n              if (confirm('Are you sure you want to delete this note?')) {\n                try {\n                  // In a real app, we would delete the note via the API\n                  _this5.notes = _this5.notes.filter(function (n) {\n                    return n.id !== note.id;\n                  });\n\n                  // Show success message\n                  _this5.$store.dispatch('showToast', {\n                    message: 'Note deleted successfully',\n                    type: 'success'\n                  });\n                } catch (error) {\n                  console.error('Error deleting note:', error);\n                }\n              }\n            case 1:\n              return _context4.a(2);\n          }\n        }, _callee4);\n      }))();\n    },\n    logout: function logout() {\n      var _this6 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee5() {\n        return _regenerator().w(function (_context5) {\n          while (1) switch (_context5.n) {\n            case 0:\n              if (!confirm('Are you sure you want to logout?')) {\n                _context5.n = 2;\n                break;\n              }\n              _context5.n = 1;\n              return _this6.$store.dispatch('auth/logout');\n            case 1:\n              _this6.$router.push('/login');\n            case 2:\n              return _context5.a(2);\n          }\n        }, _callee5);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","Chart","bootstrap","name","data","advisees","adviseesCourses","showCourseDropdown","notes","riskChart","currentNote","id","student_id","note","adviseesData","matric_number","status","gpa","risk","notesData","student_name","created_at","computed","_objectSpread","userInfo","getUser","highRiskCount","filter","s","length","mediumRiskCount","lowRiskCount","mounted","_this","loadData","document","addEventListener","e","target","closest","methods","toggleCourseDropdown","_this2","_asyncToGenerator","_regenerator","m","_callee","_t","w","_context","n","p","loadAdviseesCourses","$nextTick","initRiskChart","v","console","error","a","_this3","_callee2","_this3$userInfo","userId","response","_t2","_context2","fetch","concat","method","credentials","headers","ok","json","courses","code","getInitials","split","map","join","toUpperCase","getRiskBadgeClass","formatDate","dateString","date","Date","toLocaleDateString","day","month","year","ctx","getElementById","destroy","type","labels","datasets","backgroundColor","borderWidth","options","responsive","maintainAspectRatio","plugins","legend","position","cutout","addNote","student","arguments","undefined","modal","Modal","show","editNote","saveNote","_this4","_callee3","index","newNote","modalElement","_context3","findIndex","find","now","toISOString","unshift","getInstance","hide","$store","dispatch","message","deleteNote","_this5","_callee4","_context4","confirm","logout","_this6","_callee5","_context5","$router","push"],"sources":["C:\\Users\\ansmu\\Desktop\\Web\\NEW\\course-mark-management\\frontend\\src\\views\\advisor\\Dashboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"dashboard\">\r\n    <!-- Dashboard Header -->\r\n    <div class=\"dashboard-header d-flex justify-content-between align-items-center mb-4\">\r\n      <h1 class=\"mb-0\">Academic Advisor Dashboard</h1>\r\n      <div class=\"d-flex align-items-center gap-3\">\r\n        <router-link \r\n          to=\"/advisor/feedback\" \r\n          class=\"btn btn-info\"\r\n          title=\"Advisee Feedback\"\r\n        >\r\n          <i class=\"fas fa-comments me-2\"></i>Advisee Feedback\r\n        </router-link>\r\n        <div class=\"dropdown\">\r\n          <button class=\"btn btn-outline-warning dropdown-toggle\" type=\"button\" @click=\"toggleCourseDropdown\" :class=\"{ show: showCourseDropdown }\">\r\n            <i class=\"fas fa-chart-bar me-2\"></i>Course Analytics\r\n          </button>\r\n          <ul class=\"dropdown-menu\" :class=\"{ show: showCourseDropdown }\">\r\n            <li><span class=\"dropdown-header\">Advisee Course Breakdowns</span></li>\r\n            <li v-for=\"course in adviseesCourses\" :key=\"course.id\">\r\n              <router-link :to=\"`/advisor/breakdown/${course.id}`\" class=\"dropdown-item\" @click=\"showCourseDropdown = false\">\r\n                <i class=\"fas fa-chart-pie me-2\"></i>{{ course.code }} - {{ course.name }}\r\n              </router-link>\r\n            </li>\r\n            <li v-if=\"adviseesCourses.length === 0\">\r\n              <span class=\"dropdown-item-text text-muted\">No course data available</span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"user-info d-flex align-items-center\">\r\n          <span class=\"me-3\">Welcome, {{ userInfo.name }}</span>\r\n          <button class=\"btn btn-outline-danger btn-sm\" @click=\"logout\">\r\n            <i class=\"fas fa-sign-out-alt me-1\"></i>\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"row\">\r\n      <div class=\"col-md-8 mb-4\">\r\n        <div class=\"card h-100\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">My Advisees</h5>\r\n            <p class=\"card-text text-muted mb-4\">Students under your supervision</p>\r\n            \r\n            <div v-if=\"isLoading\" class=\"text-center py-4\">\r\n              <div class=\"spinner-border text-primary\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>\r\n            \r\n            <div v-else-if=\"advisees.length === 0\" class=\"text-center py-4\">\r\n              <p>You have no advisees assigned yet.</p>\r\n              <i class=\"fas fa-user-graduate fa-3x text-muted mb-3\"></i>\r\n            </div>\r\n            \r\n            <div v-else class=\"table-responsive\">\r\n              <table class=\"table table-hover align-middle\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Student</th>\r\n                    <th>Matric Number</th>\r\n                    <th>Academic Status</th>\r\n                    <th>GPA</th>\r\n                    <th>Risk Level</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr v-for=\"student in advisees\" :key=\"student.id\">\r\n                    <td>\r\n                      <div class=\"d-flex align-items-center\">\r\n                        <div class=\"avatar avatar-sm me-2\">\r\n                          {{ getInitials(student.name) }}\r\n                        </div>\r\n                        <div>{{ student.name }}</div>\r\n                      </div>\r\n                    </td>\r\n                    <td>{{ student.matric_number }}</td>\r\n                    <td>{{ student.status }}</td>\r\n                    <td>{{ student.gpa }}</td>\r\n                    <td>\r\n                      <span class=\"badge\" :class=\"getRiskBadgeClass(student.risk)\">\r\n                        {{ student.risk }}\r\n                      </span>\r\n                    </td>\r\n                    <td>\r\n                      <div class=\"btn-group btn-group-sm\" role=\"group\">\r\n                        <router-link :to=\"`/advisor/advisee/${student.id}`\" class=\"btn btn-outline-primary\">\r\n                          <i class=\"fas fa-eye me-1\"></i> Details\r\n                        </router-link>\r\n                        <button class=\"btn btn-outline-info\" @click=\"addNote(student)\">\r\n                          <i class=\"fas fa-sticky-note\"></i>\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"col-md-4 mb-4\">\r\n        <div class=\"card h-100\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Risk Summary</h5>\r\n            <p class=\"card-text text-muted mb-4\">Overview of students at academic risk</p>\r\n            \r\n            <div v-if=\"isLoading\" class=\"text-center py-4\">\r\n              <div class=\"spinner-border text-primary\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>\r\n            \r\n            <div v-else>\r\n              <canvas id=\"riskChart\" width=\"100\" height=\"100\"></canvas>\r\n              \r\n              <div class=\"risk-stats mt-4\">\r\n                <div class=\"risk-stat-item high\">\r\n                  <div class=\"risk-stat-value\">{{ highRiskCount }}</div>\r\n                  <div class=\"risk-stat-label\">High Risk</div>\r\n                </div>\r\n                <div class=\"risk-stat-item medium\">\r\n                  <div class=\"risk-stat-value\">{{ mediumRiskCount }}</div>\r\n                  <div class=\"risk-stat-label\">Medium Risk</div>\r\n                </div>\r\n                <div class=\"risk-stat-item low\">\r\n                  <div class=\"risk-stat-value\">{{ lowRiskCount }}</div>\r\n                  <div class=\"risk-stat-label\">Low Risk</div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div class=\"alert alert-warning mt-4\" v-if=\"highRiskCount > 0\">\r\n                <i class=\"fas fa-exclamation-triangle me-2\"></i>\r\n                You have {{ highRiskCount }} student(s) at high risk who need immediate attention.\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 mb-4\">\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Recent Notes</h5>\r\n            <p class=\"card-text text-muted mb-4\">Your latest meeting notes and observations</p>\r\n            \r\n            <div v-if=\"isLoading\" class=\"text-center py-4\">\r\n              <div class=\"spinner-border text-primary\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>\r\n            \r\n            <div v-else-if=\"notes.length === 0\" class=\"text-center py-4\">\r\n              <p>You haven't added any notes yet.</p>\r\n              <i class=\"fas fa-clipboard fa-3x text-muted mb-3\"></i>\r\n            </div>\r\n            \r\n            <div v-else class=\"notes-grid\">\r\n              <div v-for=\"note in notes\" :key=\"note.id\" class=\"note-card\">\r\n                <div class=\"note-header\">\r\n                  <div class=\"note-student\">{{ note.student_name }}</div>\r\n                  <div class=\"note-date\">{{ formatDate(note.created_at) }}</div>\r\n                </div>\r\n                <div class=\"note-content\">{{ note.note }}</div>\r\n                <div class=\"note-footer\">\r\n                  <button class=\"btn btn-sm btn-outline-primary\" @click=\"editNote(note)\">\r\n                    <i class=\"fas fa-edit\"></i>\r\n                  </button>\r\n                  <button class=\"btn btn-sm btn-outline-danger\" @click=\"deleteNote(note)\">\r\n                    <i class=\"fas fa-trash\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Add/Edit Note Modal -->\r\n    <div class=\"modal fade\" id=\"noteModal\" tabindex=\"-1\" aria-labelledby=\"noteModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"noteModalLabel\">\r\n              {{ currentNote.id ? 'Edit Note' : 'Add Note' }}\r\n            </h5>\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <form @submit.prevent=\"saveNote\">\r\n              <div class=\"mb-3\" v-if=\"!currentNote.id\">\r\n                <label for=\"student\" class=\"form-label\">Student</label>\r\n                <select class=\"form-select\" id=\"student\" v-model=\"currentNote.student_id\" required>\r\n                  <option v-for=\"student in advisees\" :key=\"student.id\" :value=\"student.id\">\r\n                    {{ student.name }} ({{ student.matric_number }})\r\n                  </option>\r\n                </select>\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label for=\"noteContent\" class=\"form-label\">Note</label>\r\n                <textarea \r\n                  class=\"form-control\" \r\n                  id=\"noteContent\" \r\n                  rows=\"5\" \r\n                  v-model=\"currentNote.note\" \r\n                  required\r\n                ></textarea>\r\n              </div>\r\n              <button type=\"submit\" class=\"btn btn-primary\">Save Note</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex';\r\nimport Chart from 'chart.js/auto';\r\nimport * as bootstrap from 'bootstrap';\r\n\r\nexport default {\r\n  name: 'AdvisorDashboard',\r\n  data() {\r\n    return {\r\n      advisees: [],\r\n      adviseesCourses: [],\r\n      showCourseDropdown: false,\r\n      notes: [],\r\n      riskChart: null,\r\n      currentNote: {\r\n        id: null,\r\n        student_id: null,\r\n        note: ''\r\n      },\r\n      // Sample data for demonstration - in a real app, this would come from the API\r\n      adviseesData: [\r\n        {\r\n          id: 1,\r\n          name: 'John Smith',\r\n          matric_number: 'A12345',\r\n          status: 'Good Standing',\r\n          gpa: 3.5,\r\n          risk: 'Low'\r\n        },\r\n        {\r\n          id: 2,\r\n          name: 'Emily Johnson',\r\n          matric_number: 'A23456',\r\n          status: 'Warning',\r\n          gpa: 1.8,\r\n          risk: 'High'\r\n        },\r\n        {\r\n          id: 3,\r\n          name: 'Michael Brown',\r\n          matric_number: 'A34567',\r\n          status: 'Probation',\r\n          gpa: 2.1,\r\n          risk: 'Medium'\r\n        },\r\n        {\r\n          id: 4,\r\n          name: 'Sarah Davis',\r\n          matric_number: 'A45678',\r\n          status: 'Good Standing',\r\n          gpa: 3.2,\r\n          risk: 'Low'\r\n        },\r\n        {\r\n          id: 5,\r\n          name: 'David Wilson',\r\n          matric_number: 'A56789',\r\n          status: 'Warning',\r\n          gpa: 1.9,\r\n          risk: 'High'\r\n        }\r\n      ],\r\n      notesData: [\r\n        {\r\n          id: 1,\r\n          student_id: 2,\r\n          student_name: 'Emily Johnson',\r\n          note: 'Discussed academic improvement plan. Student committed to attending all classes and seeking tutoring for difficult subjects.',\r\n          created_at: '2023-09-15T10:30:00'\r\n        },\r\n        {\r\n          id: 2,\r\n          student_id: 3,\r\n          student_name: 'Michael Brown',\r\n          note: 'Reviewed midterm results and identified areas for improvement. Recommended study group and additional practice problems.',\r\n          created_at: '2023-09-10T14:15:00'\r\n        },\r\n        {\r\n          id: 3,\r\n          student_id: 5,\r\n          student_name: 'David Wilson',\r\n          note: 'Student expressed concerns about workload. Discussed time management strategies and prioritization techniques.',\r\n          created_at: '2023-09-05T09:45:00'\r\n        }\r\n      ]\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters(['isLoading']),\r\n    ...mapGetters('auth', ['getUser']),\r\n    \r\n    userInfo() {\r\n      return this.getUser || { name: 'Advisor' };\r\n    },\r\n    \r\n    highRiskCount() {\r\n      return this.advisees.filter(s => s.risk === 'High').length;\r\n    },\r\n    mediumRiskCount() {\r\n      return this.advisees.filter(s => s.risk === 'Medium').length;\r\n    },\r\n    lowRiskCount() {\r\n      return this.advisees.filter(s => s.risk === 'Low').length;\r\n    }\r\n  },\r\n  mounted() {\r\n    this.loadData();\r\n    \r\n    // Close dropdown when clicking outside\r\n    document.addEventListener('click', (e) => {\r\n      if (!e.target.closest('.dropdown')) {\r\n        this.showCourseDropdown = false;\r\n      }\r\n    });\r\n  },\r\n  methods: {\r\n    toggleCourseDropdown() {\r\n      this.showCourseDropdown = !this.showCourseDropdown;\r\n    },\r\n\r\n    async loadData() {\r\n      try {\r\n        // In a real app, we would fetch the advisor's advisees and notes from the API\r\n        // For now, using sample data\r\n        this.advisees = this.adviseesData;\r\n        this.notes = this.notesData;\r\n        \r\n        // Load advisor courses (courses where advisees are enrolled)\r\n        await this.loadAdviseesCourses();\r\n        \r\n        this.$nextTick(() => {\r\n          this.initRiskChart();\r\n        });\r\n      } catch (error) {\r\n        console.error('Error loading dashboard data:', error);\r\n      }\r\n    },\r\n\r\n    async loadAdviseesCourses() {\r\n      try {\r\n        const userId = this.userInfo?.id;\r\n        if (!userId) return;\r\n\r\n        const response = await fetch(`http://localhost:8080/breakdown-api.php?action=advisor_courses&advisor_id=${userId}`, {\r\n          method: 'GET',\r\n          credentials: 'include',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          }\r\n        });\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          this.adviseesCourses = data.courses || [];\r\n          \r\n          // If no courses from API, add sample data for testing\r\n          if (this.adviseesCourses.length === 0) {\r\n            this.adviseesCourses = [\r\n              { id: 1, code: 'CS101', name: 'Introduction to Computer Science' },\r\n              { id: 2, code: 'MATH201', name: 'Calculus II' },\r\n              { id: 3, code: 'PHYS101', name: 'Physics I' }\r\n            ];\r\n          }\r\n        } else {\r\n          console.error('Failed to load advisor courses');\r\n          // Fallback sample data\r\n          this.adviseesCourses = [\r\n            { id: 1, code: 'CS101', name: 'Introduction to Computer Science' },\r\n            { id: 2, code: 'MATH201', name: 'Calculus II' },\r\n            { id: 3, code: 'PHYS101', name: 'Physics I' }\r\n          ];\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading advisor courses:', error);\r\n        // Fallback sample data\r\n        this.adviseesCourses = [\r\n          { id: 1, code: 'CS101', name: 'Introduction to Computer Science' },\r\n          { id: 2, code: 'MATH201', name: 'Calculus II' },\r\n          { id: 3, code: 'PHYS101', name: 'Physics I' }\r\n        ];\r\n      }\r\n    },\r\n    \r\n    getInitials(name) {\r\n      return name\r\n        .split(' ')\r\n        .map(n => n[0])\r\n        .join('')\r\n        .toUpperCase();\r\n    },\r\n    \r\n    getRiskBadgeClass(risk) {\r\n      switch (risk) {\r\n        case 'High': return 'bg-danger';\r\n        case 'Medium': return 'bg-warning';\r\n        case 'Low': return 'bg-success';\r\n        default: return 'bg-secondary';\r\n      }\r\n    },\r\n    \r\n    formatDate(dateString) {\r\n      if (!dateString) return '';\r\n      \r\n      const date = new Date(dateString);\r\n      return date.toLocaleDateString('en-GB', {\r\n        day: 'numeric',\r\n        month: 'short',\r\n        year: 'numeric'\r\n      });\r\n    },\r\n    \r\n    initRiskChart() {\r\n      const ctx = document.getElementById('riskChart');\r\n      \r\n      if (this.riskChart) {\r\n        this.riskChart.destroy();\r\n      }\r\n      \r\n      this.riskChart = new Chart(ctx, {\r\n        type: 'doughnut',\r\n        data: {\r\n          labels: ['High Risk', 'Medium Risk', 'Low Risk'],\r\n          datasets: [{\r\n            data: [this.highRiskCount, this.mediumRiskCount, this.lowRiskCount],\r\n            backgroundColor: ['#e74c3c', '#f39c12', '#2ecc71'],\r\n            borderWidth: 0\r\n          }]\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          plugins: {\r\n            legend: {\r\n              position: 'bottom'\r\n            }\r\n          },\r\n          cutout: '65%'\r\n        }\r\n      });\r\n    },\r\n    \r\n    addNote(student = null) {\r\n      this.currentNote = {\r\n        id: null,\r\n        student_id: student ? student.id : null,\r\n        note: ''\r\n      };\r\n      \r\n      const modal = new bootstrap.Modal(document.getElementById('noteModal'));\r\n      modal.show();\r\n    },\r\n    \r\n    editNote(note) {\r\n      this.currentNote = { ...note };\r\n      \r\n      const modal = new bootstrap.Modal(document.getElementById('noteModal'));\r\n      modal.show();\r\n    },\r\n    \r\n    async saveNote() {\r\n      try {\r\n        // In a real app, we would save the note to the API\r\n        if (this.currentNote.id) {\r\n          // Update existing note\r\n          const index = this.notes.findIndex(n => n.id === this.currentNote.id);\r\n          if (index !== -1) {\r\n            this.notes[index] = { ...this.currentNote };\r\n          }\r\n        } else {\r\n          // Add new note\r\n          const student = this.advisees.find(s => s.id === this.currentNote.student_id);\r\n          const newNote = {\r\n            id: Date.now(), // temporary ID\r\n            student_id: this.currentNote.student_id,\r\n            student_name: student.name,\r\n            note: this.currentNote.note,\r\n            created_at: new Date().toISOString()\r\n          };\r\n          \r\n          this.notes.unshift(newNote);\r\n        }\r\n        \r\n        // Close the modal\r\n        const modalElement = document.getElementById('noteModal');\r\n        const modal = bootstrap.Modal.getInstance(modalElement);\r\n        modal.hide();\r\n        \r\n        // Show success message\r\n        this.$store.dispatch('showToast', {\r\n          message: `Note ${this.currentNote.id ? 'updated' : 'added'} successfully`,\r\n          type: 'success'\r\n        });\r\n      } catch (error) {\r\n        console.error('Error saving note:', error);\r\n      }\r\n    },\r\n    \r\n    async deleteNote(note) {\r\n      if (confirm('Are you sure you want to delete this note?')) {\r\n        try {\r\n          // In a real app, we would delete the note via the API\r\n          this.notes = this.notes.filter(n => n.id !== note.id);\r\n          \r\n          // Show success message\r\n          this.$store.dispatch('showToast', {\r\n            message: 'Note deleted successfully',\r\n            type: 'success'\r\n          });\r\n        } catch (error) {\r\n          console.error('Error deleting note:', error);\r\n        }\r\n      }\r\n    },\r\n\r\n    async logout() {\r\n      if (confirm('Are you sure you want to logout?')) {\r\n        await this.$store.dispatch('auth/logout');\r\n        this.$router.push('/login');\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.dashboard h1 {\r\n  color: #2c3e50;\r\n  font-weight: 700;\r\n}\r\n\r\n.card {\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  border: none;\r\n  border-radius: 10px;\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n\r\n.card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 8px 15px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.card-title {\r\n  color: #2c3e50;\r\n  font-weight: 600;\r\n}\r\n\r\n.avatar {\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 50%;\r\n  background-color: #3498db;\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 0.8rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.badge {\r\n  padding: 6px 10px;\r\n  font-weight: 500;\r\n}\r\n\r\n.risk-stats {\r\n  display: flex;\r\n  justify-content: space-around;\r\n  text-align: center;\r\n  margin-top: 20px;\r\n}\r\n\r\n.risk-stat-item {\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  min-width: 80px;\r\n}\r\n\r\n.risk-stat-value {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n}\r\n\r\n.risk-stat-label {\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n}\r\n\r\n.risk-stat-item.high {\r\n  color: #e74c3c;\r\n  background-color: rgba(231, 76, 60, 0.1);\r\n}\r\n\r\n.risk-stat-item.medium {\r\n  color: #f39c12;\r\n  background-color: rgba(243, 156, 18, 0.1);\r\n}\r\n\r\n.risk-stat-item.low {\r\n  color: #2ecc71;\r\n  background-color: rgba(46, 204, 113, 0.1);\r\n}\r\n\r\n.notes-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n  gap: 20px;\r\n}\r\n\r\n.note-card {\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\r\n  padding: 15px;\r\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\r\n}\r\n\r\n.note-card:hover {\r\n  transform: translateY(-3px);\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.note-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.note-student {\r\n  font-weight: 600;\r\n  color: #2c3e50;\r\n}\r\n\r\n.note-date {\r\n  font-size: 0.8rem;\r\n  color: #7f8c8d;\r\n}\r\n\r\n.note-content {\r\n  color: #34495e;\r\n  margin-bottom: 15px;\r\n  white-space: pre-line;\r\n}\r\n\r\n.note-footer {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 10px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}