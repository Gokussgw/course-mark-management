{"ast":null,"code":"import { mapActions } from 'vuex';\nexport default {\n  name: 'Register',\n  data() {\n    return {\n      user: {\n        fullName: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n        role: '',\n        studentId: '',\n        program: '',\n        department: ''\n      },\n      loading: false,\n      error: null\n    };\n  },\n  methods: {\n    ...mapActions('auth', ['register']),\n    async handleRegister() {\n      // Reset error\n      this.error = null;\n\n      // Validate passwords match\n      if (this.user.password !== this.user.confirmPassword) {\n        this.error = 'Passwords do not match';\n        return;\n      }\n\n      // Start loading\n      this.loading = true;\n      try {\n        // Call register action from auth store\n        await this.register(this.user);\n        // Redirect to login page after successful registration\n        this.$router.push('/login');\n      } catch (err) {\n        this.error = err.message || 'Failed to register. Please try again.';\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapActions","name","data","user","fullName","email","password","confirmPassword","role","studentId","program","department","loading","error","methods","handleRegister","register","$router","push","err","message"],"sources":["C:\\Users\\ansmu\\Desktop\\Web\\course-mark-management\\frontend\\src\\views\\Register.vue"],"sourcesContent":["<template>\r\n  <div class=\"register-container\">\r\n    <div class=\"card\">\r\n      <div class=\"card-header bg-primary text-white\">\r\n        <h2 class=\"mb-0\">Register</h2>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <form @submit.prevent=\"handleRegister\">\r\n          <div class=\"alert alert-danger\" v-if=\"error\">\r\n            {{ error }}\r\n          </div>\r\n\r\n          <!-- User Information -->\r\n          <div class=\"form-group mb-3\">\r\n            <label for=\"fullName\">Full Name</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"fullName\"\r\n              v-model=\"user.fullName\"\r\n              class=\"form-control\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div class=\"form-group mb-3\">\r\n            <label for=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              v-model=\"user.email\"\r\n              class=\"form-control\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <!-- Role Selection -->\r\n          <div class=\"form-group mb-3\">\r\n            <label for=\"role\">Role</label>\r\n            <select id=\"role\" v-model=\"user.role\" class=\"form-control\" required>\r\n              <option value=\"\">Select your role</option>\r\n              <option value=\"student\">Student</option>\r\n              <option value=\"lecturer\">Lecturer</option>\r\n              <option value=\"advisor\">Academic Advisor</option>\r\n            </select>\r\n          </div>\r\n\r\n          <!-- Student-specific fields -->\r\n          <div v-if=\"user.role === 'student'\" class=\"student-fields\">\r\n            <div class=\"form-group mb-3\">\r\n              <label for=\"studentId\">Student ID</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"studentId\"\r\n                v-model=\"user.studentId\"\r\n                class=\"form-control\"\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div class=\"form-group mb-3\">\r\n              <label for=\"program\">Program</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"program\"\r\n                v-model=\"user.program\"\r\n                class=\"form-control\"\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Lecturer-specific fields -->\r\n          <div v-if=\"user.role === 'lecturer'\" class=\"lecturer-fields\">\r\n            <div class=\"form-group mb-3\">\r\n              <label for=\"department\">Department</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"department\"\r\n                v-model=\"user.department\"\r\n                class=\"form-control\"\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Password fields -->\r\n          <div class=\"form-group mb-3\">\r\n            <label for=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              v-model=\"user.password\"\r\n              class=\"form-control\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div class=\"form-group mb-3\">\r\n            <label for=\"confirmPassword\">Confirm Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"confirmPassword\"\r\n              v-model=\"user.confirmPassword\"\r\n              class=\"form-control\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div class=\"d-flex justify-content-between align-items-center mb-3\">\r\n            <router-link to=\"/login\" class=\"text-decoration-none\">Already have an account? Login</router-link>\r\n            <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"loading\">\r\n              <span v-if=\"loading\" class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n              {{ loading ? 'Registering...' : 'Register' }}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from 'vuex'\r\n\r\nexport default {\r\n  name: 'Register',\r\n  data() {\r\n    return {\r\n      user: {\r\n        fullName: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        role: '',\r\n        studentId: '',\r\n        program: '',\r\n        department: ''\r\n      },\r\n      loading: false,\r\n      error: null\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions('auth', ['register']),\r\n    async handleRegister() {\r\n      // Reset error\r\n      this.error = null\r\n\r\n      // Validate passwords match\r\n      if (this.user.password !== this.user.confirmPassword) {\r\n        this.error = 'Passwords do not match';\r\n        return;\r\n      }\r\n\r\n      // Start loading\r\n      this.loading = true;\r\n\r\n      try {\r\n        // Call register action from auth store\r\n        await this.register(this.user);\r\n        // Redirect to login page after successful registration\r\n        this.$router.push('/login');\r\n      } catch (err) {\r\n        this.error = err.message || 'Failed to register. Please try again.';\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.register-container {\r\n  max-width: 600px;\r\n  margin: 2rem auto;\r\n  padding: 0 1rem;\r\n}\r\n\r\n.card {\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n</style>\r\n"],"mappings":"AA0HA,SAASA,UAAS,QAAS,MAAK;AAEhC,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,eAAe,EAAE,EAAE;QACnBC,IAAI,EAAE,EAAE;QACRC,SAAS,EAAE,EAAE;QACbC,OAAO,EAAE,EAAE;QACXC,UAAU,EAAE;MACd,CAAC;MACDC,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE;IACT;EACF,CAAC;EACDC,OAAO,EAAE;IACP,GAAGd,UAAU,CAAC,MAAM,EAAE,CAAC,UAAU,CAAC,CAAC;IACnC,MAAMe,cAAcA,CAAA,EAAG;MACrB;MACA,IAAI,CAACF,KAAI,GAAI,IAAG;;MAEhB;MACA,IAAI,IAAI,CAACV,IAAI,CAACG,QAAO,KAAM,IAAI,CAACH,IAAI,CAACI,eAAe,EAAE;QACpD,IAAI,CAACM,KAAI,GAAI,wBAAwB;QACrC;MACF;;MAEA;MACA,IAAI,CAACD,OAAM,GAAI,IAAI;MAEnB,IAAI;QACF;QACA,MAAM,IAAI,CAACI,QAAQ,CAAC,IAAI,CAACb,IAAI,CAAC;QAC9B;QACA,IAAI,CAACc,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;MAC7B,EAAE,OAAOC,GAAG,EAAE;QACZ,IAAI,CAACN,KAAI,GAAIM,GAAG,CAACC,OAAM,IAAK,uCAAuC;MACrE,UAAU;QACR,IAAI,CAACR,OAAM,GAAI,KAAK;MACtB;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}