{"ast":null,"code":"import _regenerator from \"C:/Users/ansmu/Desktop/Web/NEW/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _asyncToGenerator from \"C:/Users/ansmu/Desktop/Web/NEW/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"C:/Users/ansmu/Desktop/Web/NEW/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.unshift.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.date.to-iso-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { mapState, mapGetters, mapActions } from 'vuex';\nexport default {\n  name: 'StudentDetail',\n  data: function data() {\n    return {\n      studentId: null,\n      courseId: null,\n      studentNotes: [],\n      selectedMark: null,\n      error: null,\n      editMarkForm: {\n        mark: 0,\n        remarks: ''\n      },\n      noteForm: {\n        title: '',\n        content: '',\n        notify_student: false\n      },\n      editingNote: null\n    };\n  },\n  computed: _objectSpread(_objectSpread(_objectSpread({}, mapState({\n    isLoading: function isLoading(state) {\n      return state.loading;\n    },\n    course: function course(state) {\n      return state.courses.course;\n    },\n    student: function student(state) {\n      return state.users.user;\n    },\n    assessments: function assessments(state) {\n      return state.assessments.assessments;\n    },\n    marks: function marks(state) {\n      return state.marks.marks;\n    }\n  })), mapGetters({\n    getCourseAssessments: 'assessments/getCourseAssessments'\n  })), {}, {\n    courseAssessments: function courseAssessments() {\n      if (!this.courseId) return [];\n      return this.getCourseAssessments(this.courseId) || [];\n    },\n    studentMarks: function studentMarks() {\n      var _this = this;\n      if (!this.student) return [];\n      return this.marks.filter(function (mark) {\n        return mark.student_id === _this.studentId && (!_this.courseId || mark.course_id === parseInt(_this.courseId));\n      });\n    },\n    totalAssessments: function totalAssessments() {\n      return this.courseAssessments.length;\n    },\n    completedAssessments: function completedAssessments() {\n      return this.studentMarks.length;\n    },\n    overallMark: function overallMark() {\n      var _this2 = this;\n      if (!this.studentMarks.length) return 0;\n      var weightedSum = 0;\n      var totalWeight = 0;\n      this.studentMarks.forEach(function (mark) {\n        var percentage = _this2.calculatePercentage(mark.mark, mark.max_mark);\n        weightedSum += percentage * mark.weightage;\n        totalWeight += parseInt(mark.weightage);\n      });\n      if (totalWeight === 0) return 0;\n      return Math.round(weightedSum / totalWeight);\n    },\n    advisorName: function advisorName() {\n      var _this$student;\n      return ((_this$student = this.student) === null || _this$student === void 0 ? void 0 : _this$student.advisor_name) || 'Not assigned';\n    }\n  }),\n  created: function created() {\n    var _this3 = this;\n    return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n      var _t;\n      return _regenerator().w(function (_context) {\n        while (1) switch (_context.n) {\n          case 0:\n            _this3.studentId = parseInt(_this3.$route.params.id);\n            _this3.courseId = _this3.$route.query.courseId;\n            console.log('StudentDetail created:', {\n              studentId: _this3.studentId,\n              courseId: _this3.courseId\n            });\n            _context.p = 1;\n            // Fetch student details\n            console.log('Fetching user:', _this3.studentId);\n            _context.n = 2;\n            return _this3.fetchUser(_this3.studentId);\n          case 2:\n            console.log('User fetched:', _this3.student);\n            if (!_this3.courseId) {\n              _context.n = 3;\n              break;\n            }\n            // Fetch course details if a specific course is selected\n            console.log('Fetching course:', _this3.courseId);\n            _context.n = 3;\n            return _this3.fetchCourse(_this3.courseId);\n          case 3:\n            // Fetch marks for this student\n            console.log('Fetching marks for student:', _this3.studentId);\n            _context.n = 4;\n            return _this3.fetchMarks({\n              studentId: _this3.studentId,\n              courseId: _this3.courseId\n            });\n          case 4:\n            _context.n = 5;\n            return _this3.fetchStudentNotes();\n          case 5:\n            _context.n = 7;\n            break;\n          case 6:\n            _context.p = 6;\n            _t = _context.v;\n            console.error('Error loading student details:', _t);\n            _this3.error = _t.message || 'Failed to load student details';\n          case 7:\n            return _context.a(2);\n        }\n      }, _callee, null, [[1, 6]]);\n    }))();\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    fetchUser: 'users/fetchUser',\n    fetchCourse: 'courses/fetchCourse',\n    fetchAssessments: 'assessments/fetchAssessments',\n    fetchMarks: 'marks/fetchMarks',\n    updateMark: 'marks/updateMark'\n  })), {}, {\n    formatDate: function formatDate(dateString) {\n      if (!dateString) return 'Not specified';\n      return new Date(dateString).toLocaleDateString();\n    },\n    calculatePercentage: function calculatePercentage(mark, maxMark) {\n      if (!maxMark) return 0;\n      return Math.round(mark / maxMark * 100);\n    },\n    getProgressBarClass: function getProgressBarClass(percentage) {\n      if (percentage >= 70) return 'bg-success';\n      if (percentage >= 50) return 'bg-warning';\n      return 'bg-danger';\n    },\n    getAssessmentTypeBadgeClass: function getAssessmentTypeBadgeClass(type) {\n      var types = {\n        'exam': 'bg-danger',\n        'midterm': 'bg-warning',\n        'quiz': 'bg-info',\n        'assignment': 'bg-success',\n        'project': 'bg-primary',\n        'lab': 'bg-secondary'\n      };\n      return types[type.toLowerCase()] || 'bg-secondary';\n    },\n    calculateGrade: function calculateGrade(percentage) {\n      if (percentage >= 90) return 'A+';\n      if (percentage >= 80) return 'A';\n      if (percentage >= 75) return 'B+';\n      if (percentage >= 70) return 'B';\n      if (percentage >= 65) return 'C+';\n      if (percentage >= 60) return 'C';\n      if (percentage >= 55) return 'D+';\n      if (percentage >= 50) return 'D';\n      return 'F';\n    },\n    getGradeClass: function getGradeClass(percentage) {\n      if (percentage >= 70) return 'text-success fw-bold';\n      if (percentage >= 50) return 'text-warning';\n      return 'text-danger';\n    },\n    editMark: function editMark(mark) {\n      this.selectedMark = mark;\n      this.editMarkForm = {\n        mark: mark.mark,\n        remarks: mark.remarks || ''\n      };\n\n      // In a real implementation, we would use Bootstrap's modal methods\n      // $('#editMarkModal').modal('show');\n    },\n    saveMarkChanges: function saveMarkChanges() {\n      var _this4 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n        var _t2;\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              if (_this4.selectedMark) {\n                _context2.n = 1;\n                break;\n              }\n              return _context2.a(2);\n            case 1:\n              _context2.p = 1;\n              _context2.n = 2;\n              return _this4.updateMark({\n                id: _this4.selectedMark.id,\n                mark: _this4.editMarkForm.mark,\n                remarks: _this4.editMarkForm.remarks\n              });\n            case 2:\n              // Close modal\n              // $('#editMarkModal').modal('hide');\n\n              _this4.$store.dispatch('showToast', {\n                message: 'Mark updated successfully',\n                type: 'success'\n              });\n              _this4.selectedMark = null;\n              _context2.n = 4;\n              break;\n            case 3:\n              _context2.p = 3;\n              _t2 = _context2.v;\n              console.error('Error updating mark:', _t2);\n            case 4:\n              return _context2.a(2);\n          }\n        }, _callee2, null, [[1, 3]]);\n      }))();\n    },\n    fetchStudentNotes: function fetchStudentNotes() {\n      var _this5 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {\n        return _regenerator().w(function (_context3) {\n          while (1) switch (_context3.n) {\n            case 0:\n              try {\n                // This would be replaced with an actual API call in a complete implementation\n                // For now, we'll use some sample data\n                _this5.studentNotes = [{\n                  id: 1,\n                  title: 'Excellent Progress',\n                  content: 'Student has shown significant improvement in recent assessments.',\n                  author: 'Dr. Smith',\n                  created_at: '2023-07-15',\n                  icon: 'fas fa-thumbs-up'\n                }, {\n                  id: 2,\n                  title: 'Attendance Concern',\n                  content: 'Student has missed multiple lab sessions. Please follow up.',\n                  author: 'Prof. Johnson',\n                  created_at: '2023-07-10',\n                  icon: 'fas fa-exclamation-triangle'\n                }];\n              } catch (error) {\n                console.error('Error fetching student notes:', error);\n              }\n            case 1:\n              return _context3.a(2);\n          }\n        }, _callee3);\n      }))();\n    },\n    openAddNoteModal: function openAddNoteModal() {\n      this.editingNote = null;\n      this.noteForm = {\n        title: '',\n        content: '',\n        notify_student: false\n      };\n\n      // In a real implementation, we would use Bootstrap's modal methods\n      // $('#noteModal').modal('show');\n    },\n    editNote: function editNote(note) {\n      this.editingNote = note;\n      this.noteForm = {\n        title: note.title,\n        content: note.content,\n        notify_student: false\n      };\n\n      // In a real implementation, we would use Bootstrap's modal methods\n      // $('#noteModal').modal('show');\n    },\n    saveNoteChanges: function saveNoteChanges() {\n      var _this6 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4() {\n        var index, newNote;\n        return _regenerator().w(function (_context4) {\n          while (1) switch (_context4.n) {\n            case 0:\n              try {\n                if (_this6.editingNote) {\n                  // Update existing note\n                  index = _this6.studentNotes.findIndex(function (note) {\n                    return note.id === _this6.editingNote.id;\n                  });\n                  if (index !== -1) {\n                    _this6.studentNotes[index] = _objectSpread(_objectSpread({}, _this6.editingNote), {}, {\n                      title: _this6.noteForm.title,\n                      content: _this6.noteForm.content,\n                      updated_at: new Date().toISOString().split('T')[0]\n                    });\n                  }\n                  _this6.$store.dispatch('showToast', {\n                    message: 'Note updated successfully',\n                    type: 'success'\n                  });\n                } else {\n                  // Add new note\n                  newNote = {\n                    id: Date.now(),\n                    // Temporary ID for demo\n                    title: _this6.noteForm.title,\n                    content: _this6.noteForm.content,\n                    author: 'You',\n                    created_at: new Date().toISOString().split('T')[0],\n                    icon: 'fas fa-comment-alt'\n                  };\n                  _this6.studentNotes.unshift(newNote);\n                  _this6.$store.dispatch('showToast', {\n                    message: 'Note added successfully',\n                    type: 'success'\n                  });\n                }\n\n                // Close modal\n                // $('#noteModal').modal('hide');\n\n                _this6.editingNote = null;\n              } catch (error) {\n                console.error('Error saving note:', error);\n              }\n            case 1:\n              return _context4.a(2);\n          }\n        }, _callee4);\n      }))();\n    },\n    deleteNote: function deleteNote(note) {\n      var _this7 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee5() {\n        return _regenerator().w(function (_context5) {\n          while (1) switch (_context5.n) {\n            case 0:\n              if (confirm(\"Are you sure you want to delete the note \\\"\".concat(note.title, \"\\\"?\"))) {\n                _context5.n = 1;\n                break;\n              }\n              return _context5.a(2);\n            case 1:\n              try {\n                _this7.studentNotes = _this7.studentNotes.filter(function (n) {\n                  return n.id !== note.id;\n                });\n                _this7.$store.dispatch('showToast', {\n                  message: 'Note deleted successfully',\n                  type: 'success'\n                });\n              } catch (error) {\n                console.error('Error deleting note:', error);\n              }\n            case 2:\n              return _context5.a(2);\n          }\n        }, _callee5);\n      }))();\n    },\n    exportStudentData: function exportStudentData() {\n      // This would initiate a download of student data in CSV format\n      // Implementation would need to call an API endpoint\n      this.$store.dispatch('showToast', {\n        message: 'Exporting student data...',\n        type: 'info'\n      });\n    }\n  })\n};","map":{"version":3,"names":["mapState","mapGetters","mapActions","name","data","studentId","courseId","studentNotes","selectedMark","error","editMarkForm","mark","remarks","noteForm","title","content","notify_student","editingNote","computed","_objectSpread","isLoading","state","loading","course","courses","student","users","user","assessments","marks","getCourseAssessments","courseAssessments","studentMarks","_this","filter","student_id","course_id","parseInt","totalAssessments","length","completedAssessments","overallMark","_this2","weightedSum","totalWeight","forEach","percentage","calculatePercentage","max_mark","weightage","Math","round","advisorName","_this$student","advisor_name","created","_this3","_asyncToGenerator","_regenerator","m","_callee","_t","w","_context","n","$route","params","id","query","console","log","p","fetchUser","fetchCourse","fetchMarks","fetchStudentNotes","v","message","a","methods","fetchAssessments","updateMark","formatDate","dateString","Date","toLocaleDateString","maxMark","getProgressBarClass","getAssessmentTypeBadgeClass","type","types","toLowerCase","calculateGrade","getGradeClass","editMark","saveMarkChanges","_this4","_callee2","_t2","_context2","$store","dispatch","_this5","_callee3","_context3","author","created_at","icon","openAddNoteModal","editNote","note","saveNoteChanges","_this6","_callee4","index","newNote","_context4","findIndex","updated_at","toISOString","split","now","unshift","deleteNote","_this7","_callee5","_context5","confirm","concat","exportStudentData"],"sources":["C:\\Users\\ansmu\\Desktop\\Web\\NEW\\course-mark-management\\frontend\\src\\views\\lecturer\\StudentDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"student-detail\">\r\n    <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n      <div>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol class=\"breadcrumb\">\r\n            <li class=\"breadcrumb-item\">\r\n              <router-link to=\"/lecturer/dashboard\">Dashboard</router-link>\r\n            </li>\r\n            <li class=\"breadcrumb-item\" v-if=\"course\">\r\n              <router-link :to=\"`/lecturer/course/${course.id}`\">\r\n                {{ course.code }} - {{ course.name }}\r\n              </router-link>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\" aria-current=\"page\">\r\n              {{ student ? student.name : 'Student Details' }}\r\n            </li>\r\n          </ol>\r\n        </nav>\r\n        <h1 class=\"mb-2\">\r\n          <span v-if=\"student\">{{ student.name }}</span>\r\n          <span v-else>Student Details</span>\r\n        </h1>\r\n        <p class=\"text-muted\" v-if=\"student\">\r\n          {{ student.email }} | Student ID: {{ student.student_id || 'N/A' }}\r\n        </p>\r\n      </div>\r\n      <div class=\"btn-group\">\r\n        <button class=\"btn btn-outline-primary\" @click=\"exportStudentData\">\r\n          <i class=\"fas fa-file-export me-2\"></i> Export Data\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"isLoading\" class=\"text-center my-5\">\r\n      <div class=\"spinner-border text-primary\" role=\"status\">\r\n        <span class=\"visually-hidden\">Loading...</span>\r\n      </div>\r\n      <p class=\"mt-3\">Loading student details... (ID: {{ studentId }})</p>\r\n    </div>\r\n\r\n    <!-- Debug Information -->\r\n    <div v-if=\"!isLoading\" class=\"alert alert-info mb-3\">\r\n      <h6>Debug Info:</h6>\r\n      <p><strong>Student ID:</strong> {{ studentId }}</p>\r\n      <p><strong>Course ID:</strong> {{ courseId || 'None' }}</p>\r\n      <p><strong>Student Data:</strong> {{ student ? 'Loaded' : 'Not loaded' }}</p>\r\n      <p><strong>User Role:</strong> {{ $store.getters['auth/userRole'] }}</p>\r\n      <p><strong>Is Authenticated:</strong> {{ $store.getters['auth/isAuthenticated'] }}</p>\r\n      <p v-if=\"error\"><strong>Error:</strong> {{ error }}</p>\r\n    </div>\r\n\r\n    <div v-else-if=\"error\" class=\"alert alert-danger\">\r\n      <strong>Error:</strong> {{ error }}\r\n    </div>\r\n\r\n    <div v-else-if=\"!student\" class=\"alert alert-warning\">\r\n      Student not found or you don't have access to this student's information.\r\n      <br><small>Attempted to load student ID: {{ studentId }}</small>\r\n    </div>\r\n\r\n    <div v-else class=\"row\">\r\n      <div class=\"col-md-4 mb-4\">\r\n        <div class=\"card h-100\">\r\n          <div class=\"card-header bg-light\">\r\n            <h5 class=\"mb-0\">Student Information</h5>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div class=\"text-center mb-4\">\r\n              <div class=\"avatar-placeholder\">\r\n                <i class=\"fas fa-user fa-3x text-muted\"></i>\r\n              </div>\r\n              <h4 class=\"mt-3\">{{ student.name }}</h4>\r\n              <p class=\"text-muted mb-1\">{{ student.email }}</p>\r\n              <p class=\"badge bg-primary\">{{ student.role }}</p>\r\n            </div>\r\n\r\n            <table class=\"table table-sm\">\r\n              <tbody>\r\n                <tr>\r\n                  <th>Student ID:</th>\r\n                  <td>{{ student.student_id || 'Not specified' }}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Department:</th>\r\n                  <td>{{ student.department || 'Not specified' }}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Year:</th>\r\n                  <td>{{ student.year || 'Not specified' }}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Advisor:</th>\r\n                  <td>{{ advisorName || 'Not assigned' }}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Joined:</th>\r\n                  <td>{{ formatDate(student.created_at) }}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-md-8 mb-4\">\r\n        <div class=\"card mb-4\">\r\n          <div class=\"card-header bg-light d-flex justify-content-between align-items-center\">\r\n            <h5 class=\"mb-0\">Course Progress</h5>\r\n            <div v-if=\"course\">\r\n              <span class=\"text-muted\">Course: </span>\r\n              <strong>{{ course.code }} - {{ course.name }}</strong>\r\n            </div>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div v-if=\"!course\" class=\"text-center py-3\">\r\n              <p>No specific course selected. Showing overall performance.</p>\r\n            </div>\r\n            \r\n            <div v-if=\"studentMarks.length === 0\" class=\"text-center py-3\">\r\n              <p>No assessment marks recorded for this student yet.</p>\r\n            </div>\r\n            <div v-else>\r\n              <div class=\"mb-4\">\r\n                <h6>Overall Progress</h6>\r\n                <div class=\"d-flex justify-content-between mb-1\">\r\n                  <span>Current Mark: <strong>{{ overallMark }}%</strong></span>\r\n                  <span>{{ completedAssessments }} of {{ totalAssessments }} assessments completed</span>\r\n                </div>\r\n                <div class=\"progress\" style=\"height: 20px;\">\r\n                  <div \r\n                    class=\"progress-bar\" \r\n                    :class=\"getProgressBarClass(overallMark)\"\r\n                    role=\"progressbar\" \r\n                    :style=\"`width: ${overallMark}%`\"\r\n                    :aria-valuenow=\"overallMark\" \r\n                    aria-valuemin=\"0\" \r\n                    aria-valuemax=\"100\">\r\n                    {{ overallMark }}%\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table table-hover\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Assessment</th>\r\n                      <th>Type</th>\r\n                      <th>Weight</th>\r\n                      <th>Mark</th>\r\n                      <th>Grade</th>\r\n                      <th>Actions</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr v-for=\"mark in studentMarks\" :key=\"mark.id\">\r\n                      <td>{{ mark.assessment_name }}</td>\r\n                      <td>\r\n                        <span class=\"badge\" :class=\"getAssessmentTypeBadgeClass(mark.assessment_type)\">\r\n                          {{ mark.assessment_type }}\r\n                        </span>\r\n                      </td>\r\n                      <td>{{ mark.weightage }}%</td>\r\n                      <td>\r\n                        <strong>{{ mark.mark }}</strong> / {{ mark.max_mark }}\r\n                        <div class=\"small text-muted\">\r\n                          ({{ calculatePercentage(mark.mark, mark.max_mark) }}%)\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <span :class=\"getGradeClass(calculatePercentage(mark.mark, mark.max_mark))\">\r\n                          {{ calculateGrade(calculatePercentage(mark.mark, mark.max_mark)) }}\r\n                        </span>\r\n                      </td>\r\n                      <td>\r\n                        <button \r\n                          class=\"btn btn-sm btn-outline-primary\" \r\n                          @click=\"editMark(mark)\"\r\n                        >\r\n                          <i class=\"fas fa-edit\"></i> Edit\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"card\">\r\n          <div class=\"card-header bg-light d-flex justify-content-between align-items-center\">\r\n            <h5 class=\"mb-0\">Feedback & Notes</h5>\r\n            <button class=\"btn btn-sm btn-primary\" @click=\"openAddNoteModal\">\r\n              <i class=\"fas fa-plus-circle me-1\"></i> Add Note\r\n            </button>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div v-if=\"studentNotes.length === 0\" class=\"text-center py-3\">\r\n              <p>No feedback or notes have been added for this student yet.</p>\r\n            </div>\r\n            <div v-else class=\"timeline\">\r\n              <div class=\"timeline-item\" v-for=\"(note, index) in studentNotes\" :key=\"index\">\r\n                <div class=\"timeline-item-icon\">\r\n                  <i :class=\"note.icon || 'fas fa-comment-alt'\"></i>\r\n                </div>\r\n                <div class=\"timeline-item-content\">\r\n                  <div class=\"d-flex justify-content-between align-items-start\">\r\n                    <h6>{{ note.title || 'Feedback' }}</h6>\r\n                    <div class=\"btn-group btn-group-sm\">\r\n                      <button class=\"btn btn-link text-secondary p-0\" @click=\"editNote(note)\">\r\n                        <i class=\"fas fa-edit\"></i>\r\n                      </button>\r\n                      <button class=\"btn btn-link text-danger p-0 ms-2\" @click=\"deleteNote(note)\">\r\n                        <i class=\"fas fa-trash\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <p>{{ note.content }}</p>\r\n                  <small class=\"text-muted\">\r\n                    {{ note.author || 'You' }} - {{ formatDate(note.created_at) }}\r\n                  </small>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Edit Mark Modal -->\r\n    <div class=\"modal fade\" id=\"editMarkModal\" tabindex=\"-1\" aria-labelledby=\"editMarkModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"editMarkModalLabel\">Edit Mark</h5>\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div v-if=\"selectedMark\">\r\n              <div class=\"mb-3\">\r\n                <label for=\"markInput\" class=\"form-label\">Mark for {{ selectedMark.assessment_name }}</label>\r\n                <div class=\"input-group\">\r\n                  <input \r\n                    type=\"number\" \r\n                    class=\"form-control\" \r\n                    id=\"markInput\" \r\n                    v-model.number=\"editMarkForm.mark\" \r\n                    :min=\"0\" \r\n                    :max=\"selectedMark.max_mark\"\r\n                  >\r\n                  <span class=\"input-group-text\">/ {{ selectedMark.max_mark }}</span>\r\n                </div>\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label for=\"remarkInput\" class=\"form-label\">Feedback (optional)</label>\r\n                <textarea \r\n                  class=\"form-control\" \r\n                  id=\"remarkInput\" \r\n                  v-model=\"editMarkForm.remarks\" \r\n                  rows=\"3\"\r\n                ></textarea>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\r\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"saveMarkChanges\">Save Changes</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Add/Edit Note Modal -->\r\n    <div class=\"modal fade\" id=\"noteModal\" tabindex=\"-1\" aria-labelledby=\"noteModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"noteModalLabel\">{{ editingNote ? 'Edit Note' : 'Add Note' }}</h5>\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div class=\"mb-3\">\r\n              <label for=\"noteTitle\" class=\"form-label\">Title</label>\r\n              <input \r\n                type=\"text\" \r\n                class=\"form-control\" \r\n                id=\"noteTitle\" \r\n                v-model=\"noteForm.title\" \r\n                placeholder=\"e.g., Attendance Issue, Good Progress\"\r\n              >\r\n            </div>\r\n            <div class=\"mb-3\">\r\n              <label for=\"noteContent\" class=\"form-label\">Content</label>\r\n              <textarea \r\n                class=\"form-control\" \r\n                id=\"noteContent\" \r\n                v-model=\"noteForm.content\" \r\n                rows=\"4\"\r\n                placeholder=\"Enter your note or feedback here...\"\r\n              ></textarea>\r\n            </div>\r\n            <div class=\"mb-3 form-check\">\r\n              <input type=\"checkbox\" class=\"form-check-input\" id=\"notifyStudent\" v-model=\"noteForm.notify_student\">\r\n              <label class=\"form-check-label\" for=\"notifyStudent\">Notify student</label>\r\n              <small class=\"text-muted d-block\">If checked, the student will be notified about this note.</small>\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\r\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"saveNoteChanges\">Save</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapGetters, mapActions } from 'vuex'\r\n\r\nexport default {\r\n  name: 'StudentDetail',\r\n  data() {\r\n    return {\r\n      studentId: null,\r\n      courseId: null,\r\n      studentNotes: [],\r\n      selectedMark: null,\r\n      error: null,\r\n      editMarkForm: {\r\n        mark: 0,\r\n        remarks: ''\r\n      },\r\n      noteForm: {\r\n        title: '',\r\n        content: '',\r\n        notify_student: false\r\n      },\r\n      editingNote: null\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      isLoading: state => state.loading,\r\n      course: state => state.courses.course,\r\n      student: state => state.users.user,\r\n      assessments: state => state.assessments.assessments,\r\n      marks: state => state.marks.marks\r\n    }),\r\n    ...mapGetters({\r\n      getCourseAssessments: 'assessments/getCourseAssessments'\r\n    }),\r\n    courseAssessments() {\r\n      if (!this.courseId) return [];\r\n      return this.getCourseAssessments(this.courseId) || [];\r\n    },\r\n    studentMarks() {\r\n      if (!this.student) return [];\r\n      \r\n      return this.marks.filter(mark => \r\n        mark.student_id === this.studentId && \r\n        (!this.courseId || mark.course_id === parseInt(this.courseId))\r\n      );\r\n    },\r\n    totalAssessments() {\r\n      return this.courseAssessments.length;\r\n    },\r\n    completedAssessments() {\r\n      return this.studentMarks.length;\r\n    },\r\n    overallMark() {\r\n      if (!this.studentMarks.length) return 0;\r\n      \r\n      let weightedSum = 0;\r\n      let totalWeight = 0;\r\n      \r\n      this.studentMarks.forEach(mark => {\r\n        const percentage = this.calculatePercentage(mark.mark, mark.max_mark);\r\n        weightedSum += percentage * mark.weightage;\r\n        totalWeight += parseInt(mark.weightage);\r\n      });\r\n      \r\n      if (totalWeight === 0) return 0;\r\n      return Math.round(weightedSum / totalWeight);\r\n    },\r\n    advisorName() {\r\n      return this.student?.advisor_name || 'Not assigned';\r\n    }\r\n  },\r\n  async created() {\r\n    this.studentId = parseInt(this.$route.params.id);\r\n    this.courseId = this.$route.query.courseId;\r\n    \r\n    console.log('StudentDetail created:', { studentId: this.studentId, courseId: this.courseId });\r\n    \r\n    try {\r\n      // Fetch student details\r\n      console.log('Fetching user:', this.studentId);\r\n      await this.fetchUser(this.studentId);\r\n      console.log('User fetched:', this.student);\r\n      \r\n      if (this.courseId) {\r\n        // Fetch course details if a specific course is selected\r\n        console.log('Fetching course:', this.courseId);\r\n        await this.fetchCourse(this.courseId);\r\n      }\r\n      \r\n      // Fetch marks for this student\r\n      console.log('Fetching marks for student:', this.studentId);\r\n      await this.fetchMarks({ \r\n        studentId: this.studentId,\r\n        courseId: this.courseId\r\n      });\r\n      \r\n      // Fetch notes for this student\r\n      await this.fetchStudentNotes();\r\n    } catch (error) {\r\n      console.error('Error loading student details:', error);\r\n      this.error = error.message || 'Failed to load student details';\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      fetchUser: 'users/fetchUser',\r\n      fetchCourse: 'courses/fetchCourse',\r\n      fetchAssessments: 'assessments/fetchAssessments',\r\n      fetchMarks: 'marks/fetchMarks',\r\n      updateMark: 'marks/updateMark'\r\n    }),\r\n    formatDate(dateString) {\r\n      if (!dateString) return 'Not specified';\r\n      return new Date(dateString).toLocaleDateString();\r\n    },\r\n    calculatePercentage(mark, maxMark) {\r\n      if (!maxMark) return 0;\r\n      return Math.round((mark / maxMark) * 100);\r\n    },\r\n    getProgressBarClass(percentage) {\r\n      if (percentage >= 70) return 'bg-success';\r\n      if (percentage >= 50) return 'bg-warning';\r\n      return 'bg-danger';\r\n    },\r\n    getAssessmentTypeBadgeClass(type) {\r\n      const types = {\r\n        'exam': 'bg-danger',\r\n        'midterm': 'bg-warning',\r\n        'quiz': 'bg-info',\r\n        'assignment': 'bg-success',\r\n        'project': 'bg-primary',\r\n        'lab': 'bg-secondary'\r\n      };\r\n      return types[type.toLowerCase()] || 'bg-secondary';\r\n    },\r\n    calculateGrade(percentage) {\r\n      if (percentage >= 90) return 'A+';\r\n      if (percentage >= 80) return 'A';\r\n      if (percentage >= 75) return 'B+';\r\n      if (percentage >= 70) return 'B';\r\n      if (percentage >= 65) return 'C+';\r\n      if (percentage >= 60) return 'C';\r\n      if (percentage >= 55) return 'D+';\r\n      if (percentage >= 50) return 'D';\r\n      return 'F';\r\n    },\r\n    getGradeClass(percentage) {\r\n      if (percentage >= 70) return 'text-success fw-bold';\r\n      if (percentage >= 50) return 'text-warning';\r\n      return 'text-danger';\r\n    },\r\n    editMark(mark) {\r\n      this.selectedMark = mark;\r\n      this.editMarkForm = {\r\n        mark: mark.mark,\r\n        remarks: mark.remarks || ''\r\n      };\r\n      \r\n      // In a real implementation, we would use Bootstrap's modal methods\r\n      // $('#editMarkModal').modal('show');\r\n    },\r\n    async saveMarkChanges() {\r\n      if (!this.selectedMark) return;\r\n      \r\n      try {\r\n        await this.updateMark({\r\n          id: this.selectedMark.id,\r\n          mark: this.editMarkForm.mark,\r\n          remarks: this.editMarkForm.remarks\r\n        });\r\n        \r\n        // Close modal\r\n        // $('#editMarkModal').modal('hide');\r\n        \r\n        this.$store.dispatch('showToast', {\r\n          message: 'Mark updated successfully',\r\n          type: 'success'\r\n        });\r\n        \r\n        this.selectedMark = null;\r\n      } catch (error) {\r\n        console.error('Error updating mark:', error);\r\n      }\r\n    },\r\n    async fetchStudentNotes() {\r\n      try {\r\n        // This would be replaced with an actual API call in a complete implementation\r\n        // For now, we'll use some sample data\r\n        this.studentNotes = [\r\n          {\r\n            id: 1,\r\n            title: 'Excellent Progress',\r\n            content: 'Student has shown significant improvement in recent assessments.',\r\n            author: 'Dr. Smith',\r\n            created_at: '2023-07-15',\r\n            icon: 'fas fa-thumbs-up'\r\n          },\r\n          {\r\n            id: 2,\r\n            title: 'Attendance Concern',\r\n            content: 'Student has missed multiple lab sessions. Please follow up.',\r\n            author: 'Prof. Johnson',\r\n            created_at: '2023-07-10',\r\n            icon: 'fas fa-exclamation-triangle'\r\n          }\r\n        ];\r\n      } catch (error) {\r\n        console.error('Error fetching student notes:', error);\r\n      }\r\n    },\r\n    openAddNoteModal() {\r\n      this.editingNote = null;\r\n      this.noteForm = {\r\n        title: '',\r\n        content: '',\r\n        notify_student: false\r\n      };\r\n      \r\n      // In a real implementation, we would use Bootstrap's modal methods\r\n      // $('#noteModal').modal('show');\r\n    },\r\n    editNote(note) {\r\n      this.editingNote = note;\r\n      this.noteForm = {\r\n        title: note.title,\r\n        content: note.content,\r\n        notify_student: false\r\n      };\r\n      \r\n      // In a real implementation, we would use Bootstrap's modal methods\r\n      // $('#noteModal').modal('show');\r\n    },\r\n    async saveNoteChanges() {\r\n      try {\r\n        if (this.editingNote) {\r\n          // Update existing note\r\n          const index = this.studentNotes.findIndex(note => note.id === this.editingNote.id);\r\n          if (index !== -1) {\r\n            this.studentNotes[index] = {\r\n              ...this.editingNote,\r\n              title: this.noteForm.title,\r\n              content: this.noteForm.content,\r\n              updated_at: new Date().toISOString().split('T')[0]\r\n            };\r\n          }\r\n          \r\n          this.$store.dispatch('showToast', {\r\n            message: 'Note updated successfully',\r\n            type: 'success'\r\n          });\r\n        } else {\r\n          // Add new note\r\n          const newNote = {\r\n            id: Date.now(), // Temporary ID for demo\r\n            title: this.noteForm.title,\r\n            content: this.noteForm.content,\r\n            author: 'You',\r\n            created_at: new Date().toISOString().split('T')[0],\r\n            icon: 'fas fa-comment-alt'\r\n          };\r\n          \r\n          this.studentNotes.unshift(newNote);\r\n          \r\n          this.$store.dispatch('showToast', {\r\n            message: 'Note added successfully',\r\n            type: 'success'\r\n          });\r\n        }\r\n        \r\n        // Close modal\r\n        // $('#noteModal').modal('hide');\r\n        \r\n        this.editingNote = null;\r\n      } catch (error) {\r\n        console.error('Error saving note:', error);\r\n      }\r\n    },\r\n    async deleteNote(note) {\r\n      if (!confirm(`Are you sure you want to delete the note \"${note.title}\"?`)) return;\r\n      \r\n      try {\r\n        this.studentNotes = this.studentNotes.filter(n => n.id !== note.id);\r\n        \r\n        this.$store.dispatch('showToast', {\r\n          message: 'Note deleted successfully',\r\n          type: 'success'\r\n        });\r\n      } catch (error) {\r\n        console.error('Error deleting note:', error);\r\n      }\r\n    },\r\n    exportStudentData() {\r\n      // This would initiate a download of student data in CSV format\r\n      // Implementation would need to call an API endpoint\r\n      this.$store.dispatch('showToast', {\r\n        message: 'Exporting student data...',\r\n        type: 'info'\r\n      });\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.student-detail h1 {\r\n  font-size: 1.75rem;\r\n  font-weight: 600;\r\n}\r\n\r\n.card {\r\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\r\n}\r\n\r\n.avatar-placeholder {\r\n  width: 80px;\r\n  height: 80px;\r\n  border-radius: 50%;\r\n  background-color: #f8f9fa;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 0 auto;\r\n  border: 1px solid #dee2e6;\r\n}\r\n\r\n/* Timeline styling for notes */\r\n.timeline {\r\n  position: relative;\r\n  padding-left: 40px;\r\n}\r\n\r\n.timeline-item {\r\n  position: relative;\r\n  margin-bottom: 20px;\r\n  padding-bottom: 20px;\r\n  border-bottom: 1px solid #e9ecef;\r\n}\r\n\r\n.timeline-item:last-child {\r\n  border-bottom: none;\r\n  padding-bottom: 0;\r\n}\r\n\r\n.timeline-item:before {\r\n  content: \"\";\r\n  position: absolute;\r\n  left: -30px;\r\n  top: 0;\r\n  height: 100%;\r\n  width: 2px;\r\n  background-color: #e9ecef;\r\n}\r\n\r\n.timeline-item:last-child:before {\r\n  height: 50%;\r\n}\r\n\r\n.timeline-item-icon {\r\n  position: absolute;\r\n  left: -38px;\r\n  top: 0;\r\n  width: 16px;\r\n  height: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #fff;\r\n  border: 2px solid #007bff;\r\n  border-radius: 50%;\r\n}\r\n\r\n.timeline-item-icon i {\r\n  font-size: 8px;\r\n  color: #007bff;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}