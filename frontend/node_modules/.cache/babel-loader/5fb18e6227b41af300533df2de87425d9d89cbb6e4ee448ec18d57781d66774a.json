{"ast":null,"code":"import _regenerator from \"C:/Users/ansmu/Desktop/Web/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _asyncToGenerator from \"C:/Users/ansmu/Desktop/Web/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport axios from 'axios';\nexport default {\n  namespaced: true,\n  state: {\n    token: localStorage.getItem('token') || null,\n    user: JSON.parse(localStorage.getItem('user')) || null\n  },\n  getters: {\n    isAuthenticated: function isAuthenticated(state) {\n      return !!state.token;\n    },\n    getUser: function getUser(state) {\n      return state.user;\n    },\n    userRole: function userRole(state) {\n      return state.user ? state.user.role : null;\n    },\n    userId: function userId(state) {\n      return state.user ? state.user.id : null;\n    }\n  },\n  mutations: {\n    SET_TOKEN: function SET_TOKEN(state, token) {\n      state.token = token;\n    },\n    SET_USER: function SET_USER(state, user) {\n      state.user = user;\n    },\n    CLEAR_AUTH: function CLEAR_AUTH(state) {\n      state.token = null;\n      state.user = null;\n    }\n  },\n  actions: {\n    login: function login(_ref, credentials) {\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n        var commit, dispatch, response, _response$data, token, user, _error$response, errorMsg, _t;\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.n) {\n            case 0:\n              commit = _ref.commit, dispatch = _ref.dispatch;\n              _context.p = 1;\n              dispatch('setLoading', true, {\n                root: true\n              });\n              _context.n = 2;\n              return axios.post('/api/auth/login', credentials);\n            case 2:\n              response = _context.v;\n              _response$data = response.data, token = _response$data.token, user = _response$data.user; // Save to localStorage\n              localStorage.setItem('token', token);\n              localStorage.setItem('user', JSON.stringify(user));\n\n              // Update state\n              commit('SET_TOKEN', token);\n              commit('SET_USER', user);\n              return _context.a(2, user);\n            case 3:\n              _context.p = 3;\n              _t = _context.v;\n              errorMsg = ((_error$response = _t.response) === null || _error$response === void 0 || (_error$response = _error$response.data) === null || _error$response === void 0 ? void 0 : _error$response.error) || 'Login failed';\n              dispatch('setError', errorMsg, {\n                root: true\n              });\n              throw new Error(errorMsg);\n            case 4:\n              _context.p = 4;\n              dispatch('setLoading', false, {\n                root: true\n              });\n              return _context.f(4);\n            case 5:\n              return _context.a(2);\n          }\n        }, _callee, null, [[1, 3, 4, 5]]);\n      }))();\n    },\n    studentLogin: function studentLogin(_ref2, credentials) {\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n        var commit, dispatch, response, _response$data2, token, user, _error$response2, errorMsg, _t2;\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              commit = _ref2.commit, dispatch = _ref2.dispatch;\n              _context2.p = 1;\n              dispatch('setLoading', true, {\n                root: true\n              });\n              _context2.n = 2;\n              return axios.post('/api/auth/login', {\n                matricNumber: credentials.matricNumber,\n                pin: credentials.pin\n              });\n            case 2:\n              response = _context2.v;\n              _response$data2 = response.data, token = _response$data2.token, user = _response$data2.user; // Save to localStorage\n              localStorage.setItem('token', token);\n              localStorage.setItem('user', JSON.stringify(user));\n\n              // Update state\n              commit('SET_TOKEN', token);\n              commit('SET_USER', user);\n              return _context2.a(2, user);\n            case 3:\n              _context2.p = 3;\n              _t2 = _context2.v;\n              errorMsg = ((_error$response2 = _t2.response) === null || _error$response2 === void 0 || (_error$response2 = _error$response2.data) === null || _error$response2 === void 0 ? void 0 : _error$response2.error) || 'Login failed';\n              dispatch('setError', errorMsg, {\n                root: true\n              });\n              throw new Error(errorMsg);\n            case 4:\n              _context2.p = 4;\n              dispatch('setLoading', false, {\n                root: true\n              });\n              return _context2.f(4);\n            case 5:\n              return _context2.a(2);\n          }\n        }, _callee2, null, [[1, 3, 4, 5]]);\n      }))();\n    },\n    register: function register(_ref3, userData) {\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {\n        var commit, dispatch, response, _error$response3, errorMsg, _t3;\n        return _regenerator().w(function (_context3) {\n          while (1) switch (_context3.n) {\n            case 0:\n              commit = _ref3.commit, dispatch = _ref3.dispatch;\n              _context3.p = 1;\n              dispatch('setLoading', true, {\n                root: true\n              });\n              _context3.n = 2;\n              return axios.post('/api/auth/register', userData);\n            case 2:\n              response = _context3.v;\n              return _context3.a(2, response.data);\n            case 3:\n              _context3.p = 3;\n              _t3 = _context3.v;\n              errorMsg = ((_error$response3 = _t3.response) === null || _error$response3 === void 0 || (_error$response3 = _error$response3.data) === null || _error$response3 === void 0 ? void 0 : _error$response3.error) || 'Registration failed';\n              dispatch('setError', errorMsg, {\n                root: true\n              });\n              throw new Error(errorMsg);\n            case 4:\n              _context3.p = 4;\n              dispatch('setLoading', false, {\n                root: true\n              });\n              return _context3.f(4);\n            case 5:\n              return _context3.a(2);\n          }\n        }, _callee3, null, [[1, 3, 4, 5]]);\n      }))();\n    },\n    logout: function logout(_ref4) {\n      var commit = _ref4.commit;\n      // Clear localStorage\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n\n      // Update state\n      commit('CLEAR_AUTH');\n    },\n    checkAuth: function checkAuth(_ref5) {\n      var commit = _ref5.commit;\n      var token = localStorage.getItem('token');\n      var user = JSON.parse(localStorage.getItem('user'));\n      if (token && user) {\n        commit('SET_TOKEN', token);\n        commit('SET_USER', user);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","namespaced","state","token","localStorage","getItem","user","JSON","parse","getters","isAuthenticated","getUser","userRole","role","userId","id","mutations","SET_TOKEN","SET_USER","CLEAR_AUTH","actions","login","_ref","credentials","_asyncToGenerator","_regenerator","m","_callee","commit","dispatch","response","_response$data","_error$response","errorMsg","_t","w","_context","n","p","root","post","v","data","setItem","stringify","a","error","Error","f","studentLogin","_ref2","_callee2","_response$data2","_error$response2","_t2","_context2","matricNumber","pin","register","_ref3","userData","_callee3","_error$response3","_t3","_context3","logout","_ref4","removeItem","checkAuth","_ref5"],"sources":["C:/Users/ansmu/Desktop/Web/course-mark-management/frontend/src/store/modules/auth.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state: {\r\n    token: localStorage.getItem('token') || null,\r\n    user: JSON.parse(localStorage.getItem('user')) || null\r\n  },\r\n  getters: {\r\n    isAuthenticated: state => !!state.token,\r\n    getUser: state => state.user,\r\n    userRole: state => state.user ? state.user.role : null,\r\n    userId: state => state.user ? state.user.id : null\r\n  },\r\n  mutations: {\r\n    SET_TOKEN(state, token) {\r\n      state.token = token;\r\n    },\r\n    SET_USER(state, user) {\r\n      state.user = user;\r\n    },\r\n    CLEAR_AUTH(state) {\r\n      state.token = null;\r\n      state.user = null;\r\n    }\r\n  },\r\n  actions: {\r\n    async login({ commit, dispatch }, credentials) {\r\n      try {\r\n        dispatch('setLoading', true, { root: true });\r\n        const response = await axios.post('/api/auth/login', credentials);\r\n        const { token, user } = response.data;\r\n        \r\n        // Save to localStorage\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        \r\n        // Update state\r\n        commit('SET_TOKEN', token);\r\n        commit('SET_USER', user);\r\n        \r\n        return user;\r\n      } catch (error) {\r\n        const errorMsg = error.response?.data?.error || 'Login failed';\r\n        dispatch('setError', errorMsg, { root: true });\r\n        throw new Error(errorMsg);\r\n      } finally {\r\n        dispatch('setLoading', false, { root: true });\r\n      }\r\n    },\r\n    \r\n    async studentLogin({ commit, dispatch }, credentials) {\r\n      try {\r\n        dispatch('setLoading', true, { root: true });\r\n        const response = await axios.post('/api/auth/login', {\r\n          matricNumber: credentials.matricNumber,\r\n          pin: credentials.pin\r\n        });\r\n        const { token, user } = response.data;\r\n        \r\n        // Save to localStorage\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        \r\n        // Update state\r\n        commit('SET_TOKEN', token);\r\n        commit('SET_USER', user);\r\n        \r\n        return user;\r\n      } catch (error) {\r\n        const errorMsg = error.response?.data?.error || 'Login failed';\r\n        dispatch('setError', errorMsg, { root: true });\r\n        throw new Error(errorMsg);\r\n      } finally {\r\n        dispatch('setLoading', false, { root: true });\r\n      }\r\n    },\r\n    \r\n    async register({ commit, dispatch }, userData) {\r\n      try {\r\n        dispatch('setLoading', true, { root: true });\r\n        const response = await axios.post('/api/auth/register', userData);\r\n        return response.data;\r\n      } catch (error) {\r\n        const errorMsg = error.response?.data?.error || 'Registration failed';\r\n        dispatch('setError', errorMsg, { root: true });\r\n        throw new Error(errorMsg);\r\n      } finally {\r\n        dispatch('setLoading', false, { root: true });\r\n      }\r\n    },\r\n    \r\n    logout({ commit }) {\r\n      // Clear localStorage\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      \r\n      // Update state\r\n      commit('CLEAR_AUTH');\r\n    },\r\n    \r\n    checkAuth({ commit }) {\r\n      const token = localStorage.getItem('token');\r\n      const user = JSON.parse(localStorage.getItem('user'));\r\n      \r\n      if (token && user) {\r\n        commit('SET_TOKEN', token);\r\n        commit('SET_USER', user);\r\n      }\r\n    }\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}