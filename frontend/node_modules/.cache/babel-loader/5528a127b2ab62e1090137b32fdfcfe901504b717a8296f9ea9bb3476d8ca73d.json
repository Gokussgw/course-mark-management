{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"course-marks\"\n};\nconst _hoisted_2 = {\n  class: \"d-flex justify-content-between align-items-center mb-4\"\n};\nconst _hoisted_3 = {\n  \"aria-label\": \"breadcrumb\"\n};\nconst _hoisted_4 = {\n  class: \"breadcrumb\"\n};\nconst _hoisted_5 = {\n  class: \"breadcrumb-item\"\n};\nconst _hoisted_6 = {\n  class: \"breadcrumb-item active\",\n  \"aria-current\": \"page\"\n};\nconst _hoisted_7 = {\n  class: \"mb-2\"\n};\nconst _hoisted_8 = {\n  class: \"text-muted\"\n};\nconst _hoisted_9 = {\n  class: \"btn-group\"\n};\nconst _hoisted_10 = {\n  key: 0,\n  class: \"text-center my-5\"\n};\nconst _hoisted_11 = {\n  key: 1,\n  class: \"alert alert-danger\"\n};\nconst _hoisted_12 = {\n  key: 2,\n  class: \"row\"\n};\nconst _hoisted_13 = {\n  class: \"col-md-4 mb-4\"\n};\nconst _hoisted_14 = {\n  class: \"card h-100\"\n};\nconst _hoisted_15 = {\n  class: \"card-body\"\n};\nconst _hoisted_16 = {\n  class: \"mb-4 text-center\"\n};\nconst _hoisted_17 = {\n  class: \"progress-info mb-3\"\n};\nconst _hoisted_18 = {\n  class: \"d-flex justify-content-between align-items-center\"\n};\nconst _hoisted_19 = {\n  class: \"text-muted\"\n};\nconst _hoisted_20 = {\n  class: \"progress\",\n  style: {\n    \"height\": \"8px\"\n  }\n};\nconst _hoisted_21 = [\"aria-valuenow\"];\nconst _hoisted_22 = {\n  class: \"text-muted\"\n};\nconst _hoisted_23 = {\n  class: \"table table-sm\"\n};\nconst _hoisted_24 = {\n  class: \"col-md-8 mb-4\"\n};\nconst _hoisted_25 = {\n  class: \"card mb-4\"\n};\nconst _hoisted_26 = {\n  class: \"card-header bg-light d-flex justify-content-between align-items-center\"\n};\nconst _hoisted_27 = {\n  class: \"dropdown\"\n};\nconst _hoisted_28 = {\n  class: \"dropdown-menu\",\n  \"aria-labelledby\": \"sortDropdown\"\n};\nconst _hoisted_29 = {\n  class: \"card-body\"\n};\nconst _hoisted_30 = {\n  key: 0,\n  class: \"text-center py-4\"\n};\nconst _hoisted_31 = {\n  key: 1\n};\nconst _hoisted_32 = {\n  class: \"mb-4\"\n};\nconst _hoisted_33 = {\n  class: \"progress\",\n  style: {\n    \"height\": \"30px\"\n  }\n};\nconst _hoisted_34 = [\"title\"];\nconst _hoisted_35 = {\n  class: \"table-responsive\"\n};\nconst _hoisted_36 = {\n  class: \"table table-hover\"\n};\nconst _hoisted_37 = {\n  key: 0,\n  class: \"small text-muted\"\n};\nconst _hoisted_38 = {\n  class: \"small text-muted\"\n};\nconst _hoisted_39 = {\n  key: 1,\n  class: \"text-muted\"\n};\nconst _hoisted_40 = {\n  key: 1,\n  class: \"text-muted\"\n};\nconst _hoisted_41 = {\n  key: 0,\n  class: \"remarks-row\"\n};\nconst _hoisted_42 = {\n  colspan: \"6\",\n  class: \"table-light\"\n};\nconst _hoisted_43 = {\n  class: \"card\"\n};\nconst _hoisted_44 = {\n  class: \"card-body\"\n};\nconst _hoisted_45 = {\n  key: 0,\n  class: \"text-center py-4\"\n};\nconst _hoisted_46 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", null, [_createElementVNode(\"nav\", _hoisted_3, [_createElementVNode(\"ol\", _hoisted_4, [_createElementVNode(\"li\", _hoisted_5, [_createVNode(_component_router_link, {\n    to: \"/student/dashboard\"\n  }, {\n    default: _withCtx(() => _cache[5] || (_cache[5] = [_createTextVNode(\"Dashboard\")])),\n    _: 1 /* STABLE */,\n    __: [5]\n  })]), _createElementVNode(\"li\", _hoisted_6, _toDisplayString(_ctx.course?.code) + \" - \" + _toDisplayString(_ctx.course?.name), 1 /* TEXT */)])]), _createElementVNode(\"h1\", _hoisted_7, _toDisplayString(_ctx.course?.name), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_8, _toDisplayString(_ctx.course?.code) + \" | \" + _toDisplayString(_ctx.course?.semester || 'No semester specified'), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"button\", {\n    class: \"btn btn-outline-primary\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.downloadMarks && $options.downloadMarks(...args))\n  }, _cache[6] || (_cache[6] = [_createElementVNode(\"i\", {\n    class: \"fas fa-download me-2\"\n  }, null, -1 /* CACHED */), _createTextVNode(\" Download \")])), _createVNode(_component_router_link, {\n    to: `/student/simulation/${$data.courseId}`,\n    class: \"btn btn-outline-primary\"\n  }, {\n    default: _withCtx(() => _cache[7] || (_cache[7] = [_createElementVNode(\"i\", {\n      class: \"fas fa-calculator me-2\"\n    }, null, -1 /* CACHED */), _createTextVNode(\" Grade Simulator \")])),\n    _: 1 /* STABLE */,\n    __: [7]\n  }, 8 /* PROPS */, [\"to\"])])]), _ctx.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, _cache[8] || (_cache[8] = [_createElementVNode(\"div\", {\n    class: \"spinner-border text-primary\",\n    role: \"status\"\n  }, [_createElementVNode(\"span\", {\n    class: \"visually-hidden\"\n  }, \"Loading...\")], -1 /* CACHED */)]))) : !_ctx.course ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, \" Course not found or you don't have access to this course. \")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [_cache[16] || (_cache[16] = _createElementVNode(\"div\", {\n    class: \"card-header bg-light\"\n  }, [_createElementVNode(\"h5\", {\n    class: \"mb-0\"\n  }, \"Course Summary\")], -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"display-4 fw-bold\", $options.getOverallMarkClass])\n  }, _toDisplayString($options.overallMark) + \"% \", 3 /* TEXT, CLASS */), _cache[9] || (_cache[9] = _createElementVNode(\"p\", {\n    class: \"text-muted\"\n  }, \"Overall Mark\", -1 /* CACHED */)), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"badge\", $options.getOverallGradeBadgeClass])\n  }, _toDisplayString($options.overallGrade), 3 /* TEXT, CLASS */)]), _createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"div\", _hoisted_18, [_cache[10] || (_cache[10] = _createElementVNode(\"span\", null, \"Course Completion\", -1 /* CACHED */)), _createElementVNode(\"span\", _hoisted_19, _toDisplayString($options.completionPercentage) + \"%\", 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"div\", {\n    class: \"progress-bar bg-info\",\n    role: \"progressbar\",\n    style: _normalizeStyle(`width: ${$options.completionPercentage}%`),\n    \"aria-valuenow\": $options.completionPercentage,\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\"\n  }, null, 12 /* STYLE, PROPS */, _hoisted_21)]), _createElementVNode(\"small\", _hoisted_22, _toDisplayString($options.completedAssessments) + \" of \" + _toDisplayString($options.totalAssessments) + \" assessments completed \", 1 /* TEXT */)]), _createElementVNode(\"table\", _hoisted_23, [_createElementVNode(\"tbody\", null, [_createElementVNode(\"tr\", null, [_cache[11] || (_cache[11] = _createElementVNode(\"th\", null, \"Course:\", -1 /* CACHED */)), _createElementVNode(\"td\", null, _toDisplayString(_ctx.course?.name), 1 /* TEXT */)]), _createElementVNode(\"tr\", null, [_cache[12] || (_cache[12] = _createElementVNode(\"th\", null, \"Code:\", -1 /* CACHED */)), _createElementVNode(\"td\", null, _toDisplayString(_ctx.course?.code), 1 /* TEXT */)]), _createElementVNode(\"tr\", null, [_cache[13] || (_cache[13] = _createElementVNode(\"th\", null, \"Semester:\", -1 /* CACHED */)), _createElementVNode(\"td\", null, _toDisplayString(_ctx.course?.semester || 'Not specified'), 1 /* TEXT */)]), _createElementVNode(\"tr\", null, [_cache[14] || (_cache[14] = _createElementVNode(\"th\", null, \"Credits:\", -1 /* CACHED */)), _createElementVNode(\"td\", null, _toDisplayString(_ctx.course?.credits || 'Not specified'), 1 /* TEXT */)]), _createElementVNode(\"tr\", null, [_cache[15] || (_cache[15] = _createElementVNode(\"th\", null, \"Lecturer:\", -1 /* CACHED */)), _createElementVNode(\"td\", null, _toDisplayString(_ctx.course?.lecturer_name || 'Not specified'), 1 /* TEXT */)])])])])])]), _createElementVNode(\"div\", _hoisted_24, [_createElementVNode(\"div\", _hoisted_25, [_createElementVNode(\"div\", _hoisted_26, [_cache[18] || (_cache[18] = _createElementVNode(\"h5\", {\n    class: \"mb-0\"\n  }, \"Mark Breakdown\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_27, [_cache[17] || (_cache[17] = _createElementVNode(\"button\", {\n    class: \"btn btn-sm btn-outline-secondary dropdown-toggle\",\n    type: \"button\",\n    id: \"sortDropdown\",\n    \"data-bs-toggle\": \"dropdown\",\n    \"aria-expanded\": \"false\"\n  }, \" Sort by \", -1 /* CACHED */)), _createElementVNode(\"ul\", _hoisted_28, [_createElementVNode(\"li\", null, [_createElementVNode(\"a\", {\n    class: \"dropdown-item\",\n    href: \"#\",\n    onClick: _cache[1] || (_cache[1] = _withModifiers($event => $options.sortMarks('date'), [\"prevent\"]))\n  }, \"Date\")]), _createElementVNode(\"li\", null, [_createElementVNode(\"a\", {\n    class: \"dropdown-item\",\n    href: \"#\",\n    onClick: _cache[2] || (_cache[2] = _withModifiers($event => $options.sortMarks('name'), [\"prevent\"]))\n  }, \"Name\")]), _createElementVNode(\"li\", null, [_createElementVNode(\"a\", {\n    class: \"dropdown-item\",\n    href: \"#\",\n    onClick: _cache[3] || (_cache[3] = _withModifiers($event => $options.sortMarks('weight'), [\"prevent\"]))\n  }, \"Weightage\")]), _createElementVNode(\"li\", null, [_createElementVNode(\"a\", {\n    class: \"dropdown-item\",\n    href: \"#\",\n    onClick: _cache[4] || (_cache[4] = _withModifiers($event => $options.sortMarks('mark'), [\"prevent\"]))\n  }, \"Mark\")])])])]), _createElementVNode(\"div\", _hoisted_29, [_ctx.marks.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_30, _cache[19] || (_cache[19] = [_createElementVNode(\"p\", null, \"No marks have been recorded for this course yet.\", -1 /* CACHED */), _createElementVNode(\"div\", {\n    class: \"alert alert-info\"\n  }, [_createElementVNode(\"i\", {\n    class: \"fas fa-info-circle me-2\"\n  }), _createTextVNode(\" Marks will appear here once your assessments have been graded. \")], -1 /* CACHED */)]))) : (_openBlock(), _createElementBlock(\"div\", _hoisted_31, [_createElementVNode(\"div\", _hoisted_32, [_cache[20] || (_cache[20] = _createElementVNode(\"h6\", null, \"Assessment Distribution\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_33, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.sortedAssessments, (assessment, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: assessment.id,\n      class: _normalizeClass([\"progress-bar\", $options.getAssessmentTypeClass(assessment.type)]),\n      style: _normalizeStyle(`width: ${assessment.weightage}%`),\n      title: `${assessment.name} (${assessment.weightage}%)`\n    }, _toDisplayString(assessment.weightage) + \"% \", 15 /* TEXT, CLASS, STYLE, PROPS */, _hoisted_34);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", _hoisted_35, [_createElementVNode(\"table\", _hoisted_36, [_cache[23] || (_cache[23] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Assessment\"), _createElementVNode(\"th\", null, \"Type\"), _createElementVNode(\"th\", null, \"Weight\"), _createElementVNode(\"th\", null, \"Due Date\"), _createElementVNode(\"th\", null, \"Mark\"), _createElementVNode(\"th\", null, \"Grade\")])], -1 /* CACHED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.sortedAssessments, assessment => {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: assessment.id\n    }, [_createElementVNode(\"tr\", null, [_createElementVNode(\"td\", null, [_createElementVNode(\"strong\", null, _toDisplayString(assessment.name), 1 /* TEXT */), assessment.description ? (_openBlock(), _createElementBlock(\"div\", _hoisted_37, _toDisplayString(assessment.description), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"td\", null, [_createElementVNode(\"span\", {\n      class: _normalizeClass([\"badge\", $options.getAssessmentTypeBadgeClass(assessment.type)])\n    }, _toDisplayString(assessment.type), 3 /* TEXT, CLASS */)]), _createElementVNode(\"td\", null, _toDisplayString(assessment.weightage) + \"%\", 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatDate(assessment.due_date)), 1 /* TEXT */), _createElementVNode(\"td\", null, [$options.hasMarkForAssessment(assessment.id) ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 0\n    }, [_createElementVNode(\"strong\", null, _toDisplayString($options.getMarkForAssessment(assessment.id).mark), 1 /* TEXT */), _createTextVNode(\" / \" + _toDisplayString(assessment.max_mark) + \" \", 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_38, \" (\" + _toDisplayString($options.calculatePercentage($options.getMarkForAssessment(assessment.id).mark, assessment.max_mark)) + \"%) \", 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(\"span\", _hoisted_39, \"Pending\"))]), _createElementVNode(\"td\", null, [$options.hasMarkForAssessment(assessment.id) ? (_openBlock(), _createElementBlock(\"span\", {\n      key: 0,\n      class: _normalizeClass($options.getGradeClass($options.calculatePercentage($options.getMarkForAssessment(assessment.id).mark, assessment.max_mark)))\n    }, _toDisplayString($options.calculateGrade($options.calculatePercentage($options.getMarkForAssessment(assessment.id).mark, assessment.max_mark))), 3 /* TEXT, CLASS */)) : (_openBlock(), _createElementBlock(\"span\", _hoisted_40, \"-\"))])]), $options.hasMarkForAssessment(assessment.id) && $options.getMarkForAssessment(assessment.id).remarks ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_41, [_createElementVNode(\"td\", _hoisted_42, [_cache[21] || (_cache[21] = _createElementVNode(\"i\", {\n      class: \"fas fa-comment-alt me-2 text-muted\"\n    }, null, -1 /* CACHED */)), _cache[22] || (_cache[22] = _createElementVNode(\"span\", {\n      class: \"text-muted\"\n    }, \"Feedback: \", -1 /* CACHED */)), _createTextVNode(\" \" + _toDisplayString($options.getMarkForAssessment(assessment.id).remarks), 1 /* TEXT */)])])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n  }), 128 /* KEYED_FRAGMENT */))])])])]))])]), _createElementVNode(\"div\", _hoisted_43, [_cache[27] || (_cache[27] = _createElementVNode(\"div\", {\n    class: \"card-header bg-light\"\n  }, [_createElementVNode(\"h5\", {\n    class: \"mb-0\"\n  }, \"Performance Analysis\")], -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_44, [_ctx.marks.length < 2 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_45, _cache[24] || (_cache[24] = [_createElementVNode(\"p\", null, \"Not enough data to show performance analysis.\", -1 /* CACHED */), _createElementVNode(\"div\", {\n    class: \"alert alert-info\"\n  }, [_createElementVNode(\"i\", {\n    class: \"fas fa-info-circle me-2\"\n  }), _createTextVNode(\" Performance trends will be displayed after more assessments are completed. \")], -1 /* CACHED */)]))) : (_openBlock(), _createElementBlock(\"div\", _hoisted_46, [_createCommentVNode(\" This is where we would integrate a chart.js component \"), _cache[25] || (_cache[25] = _createElementVNode(\"div\", {\n    class: \"chart-container\",\n    style: {\n      \"height\": \"250px\"\n    }\n  }, [_createElementVNode(\"canvas\", {\n    id: \"performanceChart\"\n  })], -1 /* CACHED */)), _cache[26] || (_cache[26] = _createElementVNode(\"div\", {\n    class: \"mt-3 text-center text-muted small\"\n  }, [_createElementVNode(\"i\", {\n    class: \"fas fa-info-circle me-1\"\n  }), _createTextVNode(\" Chart shows your performance relative to class average (when available). \")], -1 /* CACHED */))]))])])])]))]);\n}","map":{"version":3,"names":["class","style","colspan","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_createVNode","_component_router_link","to","_cache","_hoisted_6","_toDisplayString","_ctx","course","code","name","_hoisted_7","_hoisted_8","semester","_hoisted_9","onClick","args","$options","downloadMarks","$data","courseId","isLoading","_hoisted_10","role","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_normalizeClass","getOverallMarkClass","overallMark","getOverallGradeBadgeClass","overallGrade","_hoisted_17","_hoisted_18","_hoisted_19","completionPercentage","_hoisted_20","_normalizeStyle","_hoisted_22","completedAssessments","totalAssessments","_hoisted_23","credits","lecturer_name","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","type","id","_hoisted_28","href","_withModifiers","$event","sortMarks","_hoisted_29","marks","length","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_Fragment","_renderList","sortedAssessments","assessment","index","key","getAssessmentTypeClass","weightage","title","_hoisted_34","_hoisted_35","_hoisted_36","description","_hoisted_37","getAssessmentTypeBadgeClass","formatDate","due_date","hasMarkForAssessment","getMarkForAssessment","mark","max_mark","_hoisted_38","calculatePercentage","_hoisted_39","getGradeClass","calculateGrade","_hoisted_40","remarks","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_createCommentVNode"],"sources":["C:\\Users\\ansmu\\Desktop\\Web\\course-mark-management\\frontend\\src\\views\\student\\CourseMarks.vue"],"sourcesContent":["<template>\r\n  <div class=\"course-marks\">\r\n    <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n      <div>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol class=\"breadcrumb\">\r\n            <li class=\"breadcrumb-item\">\r\n              <router-link to=\"/student/dashboard\">Dashboard</router-link>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\" aria-current=\"page\">\r\n              {{ course?.code }} - {{ course?.name }}\r\n            </li>\r\n          </ol>\r\n        </nav>\r\n        <h1 class=\"mb-2\">{{ course?.name }}</h1>\r\n        <p class=\"text-muted\">\r\n          {{ course?.code }} | {{ course?.semester || 'No semester specified' }}\r\n        </p>\r\n      </div>\r\n      <div class=\"btn-group\">\r\n        <button class=\"btn btn-outline-primary\" @click=\"downloadMarks\">\r\n          <i class=\"fas fa-download me-2\"></i> Download\r\n        </button>\r\n        <router-link :to=\"`/student/simulation/${courseId}`\" class=\"btn btn-outline-primary\">\r\n          <i class=\"fas fa-calculator me-2\"></i> Grade Simulator\r\n        </router-link>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"isLoading\" class=\"text-center my-5\">\r\n      <div class=\"spinner-border text-primary\" role=\"status\">\r\n        <span class=\"visually-hidden\">Loading...</span>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-else-if=\"!course\" class=\"alert alert-danger\">\r\n      Course not found or you don't have access to this course.\r\n    </div>\r\n\r\n    <div v-else class=\"row\">\r\n      <div class=\"col-md-4 mb-4\">\r\n        <div class=\"card h-100\">\r\n          <div class=\"card-header bg-light\">\r\n            <h5 class=\"mb-0\">Course Summary</h5>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div class=\"mb-4 text-center\">\r\n              <div class=\"display-4 fw-bold\" :class=\"getOverallMarkClass\">\r\n                {{ overallMark }}%\r\n              </div>\r\n              <p class=\"text-muted\">Overall Mark</p>\r\n              <div class=\"badge\" :class=\"getOverallGradeBadgeClass\">\r\n                {{ overallGrade }}\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"progress-info mb-3\">\r\n              <div class=\"d-flex justify-content-between align-items-center\">\r\n                <span>Course Completion</span>\r\n                <span class=\"text-muted\">{{ completionPercentage }}%</span>\r\n              </div>\r\n              <div class=\"progress\" style=\"height: 8px;\">\r\n                <div \r\n                  class=\"progress-bar bg-info\" \r\n                  role=\"progressbar\" \r\n                  :style=\"`width: ${completionPercentage}%`\"\r\n                  :aria-valuenow=\"completionPercentage\" \r\n                  aria-valuemin=\"0\" \r\n                  aria-valuemax=\"100\">\r\n                </div>\r\n              </div>\r\n              <small class=\"text-muted\">\r\n                {{ completedAssessments }} of {{ totalAssessments }} assessments completed\r\n              </small>\r\n            </div>\r\n\r\n            <table class=\"table table-sm\">\r\n              <tbody>\r\n                <tr>\r\n                  <th>Course:</th>\r\n                  <td>{{ course?.name }}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Code:</th>\r\n                  <td>{{ course?.code }}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Semester:</th>\r\n                  <td>{{ course?.semester || 'Not specified' }}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Credits:</th>\r\n                  <td>{{ course?.credits || 'Not specified' }}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Lecturer:</th>\r\n                  <td>{{ course?.lecturer_name || 'Not specified' }}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-md-8 mb-4\">\r\n        <div class=\"card mb-4\">\r\n          <div class=\"card-header bg-light d-flex justify-content-between align-items-center\">\r\n            <h5 class=\"mb-0\">Mark Breakdown</h5>\r\n            <div class=\"dropdown\">\r\n              <button \r\n                class=\"btn btn-sm btn-outline-secondary dropdown-toggle\" \r\n                type=\"button\" \r\n                id=\"sortDropdown\" \r\n                data-bs-toggle=\"dropdown\" \r\n                aria-expanded=\"false\"\r\n              >\r\n                Sort by\r\n              </button>\r\n              <ul class=\"dropdown-menu\" aria-labelledby=\"sortDropdown\">\r\n                <li><a class=\"dropdown-item\" href=\"#\" @click.prevent=\"sortMarks('date')\">Date</a></li>\r\n                <li><a class=\"dropdown-item\" href=\"#\" @click.prevent=\"sortMarks('name')\">Name</a></li>\r\n                <li><a class=\"dropdown-item\" href=\"#\" @click.prevent=\"sortMarks('weight')\">Weightage</a></li>\r\n                <li><a class=\"dropdown-item\" href=\"#\" @click.prevent=\"sortMarks('mark')\">Mark</a></li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div v-if=\"marks.length === 0\" class=\"text-center py-4\">\r\n              <p>No marks have been recorded for this course yet.</p>\r\n              <div class=\"alert alert-info\">\r\n                <i class=\"fas fa-info-circle me-2\"></i>\r\n                Marks will appear here once your assessments have been graded.\r\n              </div>\r\n            </div>\r\n            <div v-else>\r\n              <div class=\"mb-4\">\r\n                <h6>Assessment Distribution</h6>\r\n                <div class=\"progress\" style=\"height: 30px;\">\r\n                  <div v-for=\"(assessment, index) in sortedAssessments\" \r\n                       :key=\"assessment.id\"\r\n                       class=\"progress-bar\" \r\n                       :class=\"getAssessmentTypeClass(assessment.type)\"\r\n                       :style=\"`width: ${assessment.weightage}%`\"\r\n                       :title=\"`${assessment.name} (${assessment.weightage}%)`\">\r\n                    {{ assessment.weightage }}%\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table table-hover\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Assessment</th>\r\n                      <th>Type</th>\r\n                      <th>Weight</th>\r\n                      <th>Due Date</th>\r\n                      <th>Mark</th>\r\n                      <th>Grade</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <template v-for=\"assessment in sortedAssessments\" :key=\"assessment.id\">\r\n                      <tr>\r\n                        <td>\r\n                          <strong>{{ assessment.name }}</strong>\r\n                          <div v-if=\"assessment.description\" class=\"small text-muted\">\r\n                            {{ assessment.description }}\r\n                          </div>\r\n                        </td>\r\n                        <td>\r\n                          <span class=\"badge\" :class=\"getAssessmentTypeBadgeClass(assessment.type)\">\r\n                            {{ assessment.type }}\r\n                          </span>\r\n                        </td>\r\n                        <td>{{ assessment.weightage }}%</td>\r\n                        <td>{{ formatDate(assessment.due_date) }}</td>\r\n                        <td>\r\n                          <template v-if=\"hasMarkForAssessment(assessment.id)\">\r\n                            <strong>{{ getMarkForAssessment(assessment.id).mark }}</strong> / {{ assessment.max_mark }}\r\n                            <div class=\"small text-muted\">\r\n                              ({{ calculatePercentage(getMarkForAssessment(assessment.id).mark, assessment.max_mark) }}%)\r\n                            </div>\r\n                          </template>\r\n                          <template v-else>\r\n                            <span class=\"text-muted\">Pending</span>\r\n                          </template>\r\n                        </td>\r\n                        <td>\r\n                          <template v-if=\"hasMarkForAssessment(assessment.id)\">\r\n                            <span :class=\"getGradeClass(calculatePercentage(getMarkForAssessment(assessment.id).mark, assessment.max_mark))\">\r\n                              {{ calculateGrade(calculatePercentage(getMarkForAssessment(assessment.id).mark, assessment.max_mark)) }}\r\n                            </span>\r\n                          </template>\r\n                          <template v-else>\r\n                            <span class=\"text-muted\">-</span>\r\n                          </template>\r\n                        </td>\r\n                      </tr>\r\n                      <tr v-if=\"hasMarkForAssessment(assessment.id) && getMarkForAssessment(assessment.id).remarks\" class=\"remarks-row\">\r\n                        <td colspan=\"6\" class=\"table-light\">\r\n                          <i class=\"fas fa-comment-alt me-2 text-muted\"></i>\r\n                          <span class=\"text-muted\">Feedback: </span>\r\n                          {{ getMarkForAssessment(assessment.id).remarks }}\r\n                        </td>\r\n                      </tr>\r\n                    </template>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"card\">\r\n          <div class=\"card-header bg-light\">\r\n            <h5 class=\"mb-0\">Performance Analysis</h5>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div v-if=\"marks.length < 2\" class=\"text-center py-4\">\r\n              <p>Not enough data to show performance analysis.</p>\r\n              <div class=\"alert alert-info\">\r\n                <i class=\"fas fa-info-circle me-2\"></i>\r\n                Performance trends will be displayed after more assessments are completed.\r\n              </div>\r\n            </div>\r\n            <div v-else>\r\n              <!-- This is where we would integrate a chart.js component -->\r\n              <div class=\"chart-container\" style=\"height: 250px;\">\r\n                <canvas id=\"performanceChart\"></canvas>\r\n              </div>\r\n              <div class=\"mt-3 text-center text-muted small\">\r\n                <i class=\"fas fa-info-circle me-1\"></i>\r\n                Chart shows your performance relative to class average (when available).\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapGetters, mapActions } from 'vuex'\r\n// Uncomment in real implementation\r\n// import Chart from 'chart.js/auto'\r\n\r\nexport default {\r\n  name: 'CourseMarks',\r\n  data() {\r\n    return {\r\n      courseId: null,\r\n      sortOrder: 'date',\r\n      performanceChart: null\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      isLoading: state => state.loading,\r\n      course: state => state.courses.course,\r\n      marks: state => state.marks.marks,\r\n      userId: state => state.auth.userId\r\n    }),\r\n    ...mapGetters({\r\n      getCourseAssessments: 'assessments/getCourseAssessments'\r\n    }),\r\n    courseAssessments() {\r\n      return this.getCourseAssessments(this.courseId) || [];\r\n    },\r\n    sortedAssessments() {\r\n      const assessments = [...this.courseAssessments];\r\n      \r\n      switch(this.sortOrder) {\r\n        case 'name':\r\n          return assessments.sort((a, b) => a.name.localeCompare(b.name));\r\n        case 'weight':\r\n          return assessments.sort((a, b) => b.weightage - a.weightage);\r\n        case 'mark':\r\n          return assessments.sort((a, b) => {\r\n            const markA = this.hasMarkForAssessment(a.id) ? \r\n              this.calculatePercentage(this.getMarkForAssessment(a.id).mark, a.max_mark) : -1;\r\n            const markB = this.hasMarkForAssessment(b.id) ? \r\n              this.calculatePercentage(this.getMarkForAssessment(b.id).mark, b.max_mark) : -1;\r\n            return markB - markA;\r\n          });\r\n        case 'date':\r\n        default:\r\n          return assessments.sort((a, b) => {\r\n            if (!a.due_date) return 1;\r\n            if (!b.due_date) return -1;\r\n            return new Date(a.due_date) - new Date(b.due_date);\r\n          });\r\n      }\r\n    },\r\n    studentMarks() {\r\n      return this.marks.filter(mark => \r\n        mark.student_id === this.userId && \r\n        mark.course_id === parseInt(this.courseId)\r\n      );\r\n    },\r\n    totalAssessments() {\r\n      return this.courseAssessments.length;\r\n    },\r\n    completedAssessments() {\r\n      return this.studentMarks.length;\r\n    },\r\n    completionPercentage() {\r\n      if (this.totalAssessments === 0) return 0;\r\n      return Math.round((this.completedAssessments / this.totalAssessments) * 100);\r\n    },\r\n    overallMark() {\r\n      if (!this.studentMarks.length) return 0;\r\n      \r\n      let weightedSum = 0;\r\n      let totalWeight = 0;\r\n      \r\n      this.studentMarks.forEach(mark => {\r\n        const assessment = this.courseAssessments.find(a => a.id === mark.assessment_id);\r\n        if (!assessment) return;\r\n        \r\n        const percentage = this.calculatePercentage(mark.mark, assessment.max_mark);\r\n        weightedSum += percentage * assessment.weightage;\r\n        totalWeight += parseInt(assessment.weightage);\r\n      });\r\n      \r\n      if (totalWeight === 0) return 0;\r\n      return Math.round(weightedSum / totalWeight);\r\n    },\r\n    overallGrade() {\r\n      return this.calculateGrade(this.overallMark);\r\n    },\r\n    getOverallMarkClass() {\r\n      if (this.overallMark >= 70) return 'text-success';\r\n      if (this.overallMark >= 50) return 'text-warning';\r\n      return 'text-danger';\r\n    },\r\n    getOverallGradeBadgeClass() {\r\n      if (this.overallMark >= 70) return 'bg-success';\r\n      if (this.overallMark >= 50) return 'bg-warning';\r\n      return 'bg-danger';\r\n    }\r\n  },\r\n  async created() {\r\n    this.courseId = parseInt(this.$route.params.id);\r\n    \r\n    try {\r\n      // Fetch course details\r\n      await this.fetchCourse(this.courseId);\r\n      \r\n      // Fetch assessments for this course\r\n      await this.fetchAssessments({ courseId: this.courseId });\r\n      \r\n      // Fetch marks for this student in this course\r\n      await this.fetchMarks({ \r\n        studentId: this.userId,\r\n        courseId: this.courseId\r\n      });\r\n    } catch (error) {\r\n      console.error('Error loading course marks:', error);\r\n    }\r\n  },\r\n  mounted() {\r\n    // Initialize performance chart once data is loaded\r\n    this.$nextTick(() => {\r\n      if (this.marks.length >= 2) {\r\n        this.initPerformanceChart();\r\n      }\r\n    });\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      fetchCourse: 'courses/fetchCourse',\r\n      fetchAssessments: 'assessments/fetchAssessments',\r\n      fetchMarks: 'marks/fetchMarks'\r\n    }),\r\n    formatDate(dateString) {\r\n      if (!dateString) return 'Not set';\r\n      return new Date(dateString).toLocaleDateString();\r\n    },\r\n    hasMarkForAssessment(assessmentId) {\r\n      return this.studentMarks.some(mark => mark.assessment_id === assessmentId);\r\n    },\r\n    getMarkForAssessment(assessmentId) {\r\n      return this.studentMarks.find(mark => mark.assessment_id === assessmentId);\r\n    },\r\n    calculatePercentage(mark, maxMark) {\r\n      if (!maxMark) return 0;\r\n      return Math.round((mark / maxMark) * 100);\r\n    },\r\n    getAssessmentTypeClass(type) {\r\n      const types = {\r\n        'exam': 'bg-danger',\r\n        'midterm': 'bg-warning',\r\n        'quiz': 'bg-info',\r\n        'assignment': 'bg-success',\r\n        'project': 'bg-primary',\r\n        'lab': 'bg-secondary'\r\n      };\r\n      return types[type.toLowerCase()] || 'bg-secondary';\r\n    },\r\n    getAssessmentTypeBadgeClass(type) {\r\n      const types = {\r\n        'exam': 'bg-danger',\r\n        'midterm': 'bg-warning',\r\n        'quiz': 'bg-info',\r\n        'assignment': 'bg-success',\r\n        'project': 'bg-primary',\r\n        'lab': 'bg-secondary'\r\n      };\r\n      return types[type.toLowerCase()] || 'bg-secondary';\r\n    },\r\n    calculateGrade(percentage) {\r\n      if (percentage >= 90) return 'A+';\r\n      if (percentage >= 80) return 'A';\r\n      if (percentage >= 75) return 'B+';\r\n      if (percentage >= 70) return 'B';\r\n      if (percentage >= 65) return 'C+';\r\n      if (percentage >= 60) return 'C';\r\n      if (percentage >= 55) return 'D+';\r\n      if (percentage >= 50) return 'D';\r\n      return 'F';\r\n    },\r\n    getGradeClass(percentage) {\r\n      if (percentage >= 70) return 'text-success fw-bold';\r\n      if (percentage >= 50) return 'text-warning';\r\n      return 'text-danger';\r\n    },\r\n    sortMarks(order) {\r\n      this.sortOrder = order;\r\n    },\r\n    downloadMarks() {\r\n      // This would initiate a download of marks in CSV format\r\n      // Implementation would need to call an API endpoint\r\n      this.$store.dispatch('showToast', {\r\n        message: 'Downloading marks...',\r\n        type: 'info'\r\n      });\r\n    },\r\n    initPerformanceChart() {\r\n      // This would be implemented with Chart.js in a real application\r\n      /* Uncomment in real implementation\r\n      const ctx = document.getElementById('performanceChart');\r\n      \r\n      // Sort marks by date\r\n      const sortedMarks = [...this.studentMarks].sort((a, b) => {\r\n        const assessmentA = this.courseAssessments.find(assessment => assessment.id === a.assessment_id);\r\n        const assessmentB = this.courseAssessments.find(assessment => assessment.id === b.assessment_id);\r\n        if (!assessmentA || !assessmentA.due_date) return -1;\r\n        if (!assessmentB || !assessmentB.due_date) return 1;\r\n        return new Date(assessmentA.due_date) - new Date(assessmentB.due_date);\r\n      });\r\n      \r\n      const labels = sortedMarks.map(mark => {\r\n        const assessment = this.courseAssessments.find(a => a.id === mark.assessment_id);\r\n        return assessment ? assessment.name : 'Unknown';\r\n      });\r\n      \r\n      const data = sortedMarks.map(mark => {\r\n        const assessment = this.courseAssessments.find(a => a.id === mark.assessment_id);\r\n        if (!assessment) return 0;\r\n        return this.calculatePercentage(mark.mark, assessment.max_mark);\r\n      });\r\n      \r\n      // Sample class averages (would come from API in real implementation)\r\n      const classAverages = sortedMarks.map(() => Math.floor(Math.random() * 30) + 50);\r\n      \r\n      this.performanceChart = new Chart(ctx, {\r\n        type: 'line',\r\n        data: {\r\n          labels: labels,\r\n          datasets: [\r\n            {\r\n              label: 'Your Marks',\r\n              data: data,\r\n              borderColor: '#0d6efd',\r\n              backgroundColor: 'rgba(13, 110, 253, 0.1)',\r\n              borderWidth: 2,\r\n              tension: 0.1,\r\n              fill: true\r\n            },\r\n            {\r\n              label: 'Class Average',\r\n              data: classAverages,\r\n              borderColor: '#6c757d',\r\n              borderWidth: 2,\r\n              borderDash: [5, 5],\r\n              tension: 0.1,\r\n              fill: false\r\n            }\r\n          ]\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          scales: {\r\n            y: {\r\n              beginAtZero: true,\r\n              max: 100,\r\n              title: {\r\n                display: true,\r\n                text: 'Mark (%)'\r\n              }\r\n            }\r\n          },\r\n          plugins: {\r\n            legend: {\r\n              position: 'top',\r\n            },\r\n            tooltip: {\r\n              callbacks: {\r\n                label: function(context) {\r\n                  return `${context.dataset.label}: ${context.raw}%`;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n      */\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.course-marks h1 {\r\n  font-size: 1.75rem;\r\n  font-weight: 600;\r\n}\r\n\r\n.card {\r\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.progress {\r\n  border-radius: 0.25rem;\r\n  overflow: hidden;\r\n}\r\n\r\n.display-4 {\r\n  font-size: 3rem;\r\n}\r\n\r\n.remarks-row {\r\n  font-style: italic;\r\n  font-size: 0.9em;\r\n}\r\n\r\n.chart-container {\r\n  position: relative;\r\n  width: 100%;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .display-4 {\r\n    font-size: 2.5rem;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}