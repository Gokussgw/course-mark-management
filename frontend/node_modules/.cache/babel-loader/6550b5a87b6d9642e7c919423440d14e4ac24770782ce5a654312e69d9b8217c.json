{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.parse-float.js\";\nimport { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, normalizeStyle as _normalizeStyle } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"mark-simulation\"\n};\nvar _hoisted_2 = {\n  \"class\": \"d-flex justify-content-between align-items-center mb-4\"\n};\nvar _hoisted_3 = {\n  \"aria-label\": \"breadcrumb\"\n};\nvar _hoisted_4 = {\n  \"class\": \"breadcrumb\"\n};\nvar _hoisted_5 = {\n  \"class\": \"breadcrumb-item\"\n};\nvar _hoisted_6 = {\n  \"class\": \"breadcrumb-item\"\n};\nvar _hoisted_7 = {\n  \"class\": \"text-muted\"\n};\nvar _hoisted_8 = {\n  key: 0,\n  \"class\": \"text-center my-5\"\n};\nvar _hoisted_9 = {\n  key: 1,\n  \"class\": \"alert alert-danger\"\n};\nvar _hoisted_10 = {\n  key: 2,\n  \"class\": \"row\"\n};\nvar _hoisted_11 = {\n  \"class\": \"col-md-8 mb-4\"\n};\nvar _hoisted_12 = {\n  \"class\": \"card\"\n};\nvar _hoisted_13 = {\n  \"class\": \"card-body\"\n};\nvar _hoisted_14 = {\n  \"class\": \"table-responsive\"\n};\nvar _hoisted_15 = {\n  \"class\": \"table table-hover\"\n};\nvar _hoisted_16 = {\n  style: {\n    \"width\": \"180px\"\n  }\n};\nvar _hoisted_17 = {\n  key: 0\n};\nvar _hoisted_18 = {\n  \"class\": \"input-group input-group-sm disabled\"\n};\nvar _hoisted_19 = [\"value\"];\nvar _hoisted_20 = {\n  \"class\": \"input-group-text\"\n};\nvar _hoisted_21 = {\n  \"class\": \"text-muted\"\n};\nvar _hoisted_22 = {\n  key: 1\n};\nvar _hoisted_23 = {\n  \"class\": \"input-group input-group-sm\"\n};\nvar _hoisted_24 = [\"onUpdate:modelValue\", \"max\", \"onInput\"];\nvar _hoisted_25 = {\n  \"class\": \"input-group-text\"\n};\nvar _hoisted_26 = {\n  key: 0,\n  \"class\": \"text-muted\"\n};\nvar _hoisted_27 = {\n  key: 1,\n  \"class\": \"text-muted\"\n};\nvar _hoisted_28 = {\n  \"class\": \"d-flex justify-content-end mt-3\"\n};\nvar _hoisted_29 = {\n  \"class\": \"dropdown\"\n};\nvar _hoisted_30 = {\n  \"class\": \"dropdown-menu\",\n  \"aria-labelledby\": \"presetDropdown\"\n};\nvar _hoisted_31 = {\n  \"class\": \"col-md-4 mb-4\"\n};\nvar _hoisted_32 = {\n  \"class\": \"card mb-4\"\n};\nvar _hoisted_33 = {\n  \"class\": \"card-body text-center\"\n};\nvar _hoisted_34 = {\n  \"class\": \"mb-4\"\n};\nvar _hoisted_35 = {\n  \"class\": \"comparison mb-3\"\n};\nvar _hoisted_36 = {\n  \"class\": \"row\"\n};\nvar _hoisted_37 = {\n  \"class\": \"col-6 text-start\"\n};\nvar _hoisted_38 = {\n  \"class\": \"col-6 text-end\"\n};\nvar _hoisted_39 = {\n  \"class\": \"card\"\n};\nvar _hoisted_40 = {\n  \"class\": \"card-body\"\n};\nvar _hoisted_41 = {\n  \"class\": \"required-mark-row\"\n};\nvar _hoisted_42 = {\n  \"class\": \"d-flex justify-content-between mb-2\"\n};\nvar _hoisted_43 = {\n  \"class\": \"progress mb-3\",\n  style: {\n    \"height\": \"8px\"\n  }\n};\nvar _hoisted_44 = [\"aria-valuenow\"];\nvar _hoisted_45 = {\n  \"class\": \"required-mark-row\"\n};\nvar _hoisted_46 = {\n  \"class\": \"d-flex justify-content-between mb-2\"\n};\nvar _hoisted_47 = {\n  \"class\": \"progress mb-3\",\n  style: {\n    \"height\": \"8px\"\n  }\n};\nvar _hoisted_48 = [\"aria-valuenow\"];\nvar _hoisted_49 = {\n  \"class\": \"required-mark-row\"\n};\nvar _hoisted_50 = {\n  \"class\": \"d-flex justify-content-between mb-2\"\n};\nvar _hoisted_51 = {\n  \"class\": \"progress mb-3\",\n  style: {\n    \"height\": \"8px\"\n  }\n};\nvar _hoisted_52 = [\"aria-valuenow\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _$data$course3, _$data$course4;\n  var _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", null, [_createElementVNode(\"nav\", _hoisted_3, [_createElementVNode(\"ol\", _hoisted_4, [_createElementVNode(\"li\", _hoisted_5, [_createVNode(_component_router_link, {\n    to: \"/student/dashboard\"\n  }, {\n    \"default\": _withCtx(function () {\n      return _cache[5] || (_cache[5] = [_createTextVNode(\"Dashboard\")]);\n    }),\n    _: 1 /* STABLE */,\n    __: [5]\n  })]), _createElementVNode(\"li\", _hoisted_6, [_createVNode(_component_router_link, {\n    to: \"/student/course/\".concat($data.courseId)\n  }, {\n    \"default\": _withCtx(function () {\n      var _$data$course, _$data$course2;\n      return [_createTextVNode(_toDisplayString((_$data$course = $data.course) === null || _$data$course === void 0 ? void 0 : _$data$course.code) + \" - \" + _toDisplayString((_$data$course2 = $data.course) === null || _$data$course2 === void 0 ? void 0 : _$data$course2.name), 1 /* TEXT */)];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"to\"])]), _cache[6] || (_cache[6] = _createElementVNode(\"li\", {\n    \"class\": \"breadcrumb-item active\",\n    \"aria-current\": \"page\"\n  }, \" Grade Simulator \", -1 /* CACHED */))])]), _cache[7] || (_cache[7] = _createElementVNode(\"h1\", {\n    \"class\": \"mb-2\"\n  }, \"Grade Simulator\", -1 /* CACHED */)), _createElementVNode(\"p\", _hoisted_7, _toDisplayString((_$data$course3 = $data.course) === null || _$data$course3 === void 0 ? void 0 : _$data$course3.code) + \" | \" + _toDisplayString((_$data$course4 = $data.course) === null || _$data$course4 === void 0 ? void 0 : _$data$course4.name), 1 /* TEXT */)])]), $data.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, _cache[8] || (_cache[8] = [_createElementVNode(\"div\", {\n    \"class\": \"spinner-border text-primary\",\n    role: \"status\"\n  }, [_createElementVNode(\"span\", {\n    \"class\": \"visually-hidden\"\n  }, \"Loading...\")], -1 /* CACHED */)]))) : !$data.course ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, \" Course not found or you don't have access to this course. \")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_cache[12] || (_cache[12] = _createElementVNode(\"div\", {\n    \"class\": \"card-header bg-light\"\n  }, [_createElementVNode(\"h5\", {\n    \"class\": \"mb-0\"\n  }, \"Assessment Marks\"), _createElementVNode(\"p\", {\n    \"class\": \"text-muted small mb-0\"\n  }, \" Enter hypothetical marks for assessments to simulate your final grade \")], -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_13, [_cache[11] || (_cache[11] = _createElementVNode(\"div\", {\n    \"class\": \"alert alert-info mb-4\"\n  }, [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-info-circle me-2\"\n  }), _createTextVNode(\" Enter the marks you expect to get for assessments that haven't been graded yet. Your actual marks are pre-filled where available. \")], -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"table\", _hoisted_15, [_cache[9] || (_cache[9] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Assessment\"), _createElementVNode(\"th\", null, \"Type\"), _createElementVNode(\"th\", null, \"Weight\"), _createElementVNode(\"th\", null, \"Status\"), _createElementVNode(\"th\", null, \"Mark\")])], -1 /* CACHED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.sortedAssessments, function (assessment) {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: assessment.assessment_type\n    }, [_createElementVNode(\"td\", null, [_createElementVNode(\"strong\", null, _toDisplayString(assessment.assessment_type), 1 /* TEXT */)]), _createElementVNode(\"td\", null, [_createElementVNode(\"span\", {\n      \"class\": _normalizeClass([\"badge\", $options.getAssessmentTypeBadgeClass(assessment.assessment_type)])\n    }, _toDisplayString(assessment.assessment_type), 3 /* TEXT, CLASS */)]), _createElementVNode(\"td\", null, _toDisplayString(assessment.weightage) + \"%\", 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"span\", {\n      \"class\": _normalizeClass([\"badge\", assessment.mark_id ? 'bg-success' : 'bg-secondary'])\n    }, _toDisplayString(assessment.mark_id ? 'Completed' : 'Pending'), 3 /* TEXT, CLASS */)]), _createElementVNode(\"td\", _hoisted_16, [$options.hasMarkForAssessment(assessment.assessment_type) && !$options.isSimulatedAssessment(assessment.assessment_type) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [_createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"input\", {\n      type: \"number\",\n      \"class\": \"form-control bg-light\",\n      value: assessment.mark,\n      disabled: \"\"\n    }, null, 8 /* PROPS */, _hoisted_19), _createElementVNode(\"span\", _hoisted_20, \"/ \" + _toDisplayString(assessment.max_mark), 1 /* TEXT */)]), _createElementVNode(\"small\", _hoisted_21, \"Actual mark (\" + _toDisplayString($options.calculatePercentage(parseFloat(assessment.mark), parseFloat(assessment.max_mark))) + \"%)\", 1 /* TEXT */)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_22, [_createElementVNode(\"div\", _hoisted_23, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"number\",\n      \"class\": \"form-control\",\n      \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n        return $data.simulatedMarks[assessment.assessment_type] = $event;\n      },\n      min: 0,\n      max: assessment.max_mark,\n      onInput: function onInput($event) {\n        return $options.updateSimulatedMark(assessment.assessment_type, $event.target.value);\n      }\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_24), [[_vModelText, $data.simulatedMarks[assessment.assessment_type], void 0, {\n      number: true\n    }]]), _createElementVNode(\"span\", _hoisted_25, \"/ \" + _toDisplayString(assessment.max_mark), 1 /* TEXT */)]), $data.simulatedMarks[assessment.assessment_type] !== null && $data.simulatedMarks[assessment.assessment_type] !== undefined ? (_openBlock(), _createElementBlock(\"small\", _hoisted_26, \" Simulated (\" + _toDisplayString($options.calculatePercentage($data.simulatedMarks[assessment.assessment_type], parseFloat(assessment.max_mark))) + \"%) \", 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"small\", _hoisted_27, \" Enter expected mark \"))]))])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]), _createElementVNode(\"div\", _hoisted_28, [_createElementVNode(\"button\", {\n    \"class\": \"btn btn-outline-secondary me-2\",\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $options.clearSimulation && $options.clearSimulation.apply($options, arguments);\n    })\n  }, \" Clear Simulation \"), _createElementVNode(\"div\", _hoisted_29, [_cache[10] || (_cache[10] = _createElementVNode(\"button\", {\n    \"class\": \"btn btn-outline-primary dropdown-toggle\",\n    type: \"button\",\n    id: \"presetDropdown\",\n    \"data-bs-toggle\": \"dropdown\",\n    \"aria-expanded\": \"false\"\n  }, \" Apply Preset \", -1 /* CACHED */)), _createElementVNode(\"ul\", _hoisted_30, [_createElementVNode(\"li\", null, [_createElementVNode(\"a\", {\n    \"class\": \"dropdown-item\",\n    href: \"#\",\n    onClick: _cache[1] || (_cache[1] = _withModifiers(function ($event) {\n      return $options.applyPreset('best');\n    }, [\"prevent\"]))\n  }, \"Best Case (90%)\")]), _createElementVNode(\"li\", null, [_createElementVNode(\"a\", {\n    \"class\": \"dropdown-item\",\n    href: \"#\",\n    onClick: _cache[2] || (_cache[2] = _withModifiers(function ($event) {\n      return $options.applyPreset('good');\n    }, [\"prevent\"]))\n  }, \"Good Case (75%)\")]), _createElementVNode(\"li\", null, [_createElementVNode(\"a\", {\n    \"class\": \"dropdown-item\",\n    href: \"#\",\n    onClick: _cache[3] || (_cache[3] = _withModifiers(function ($event) {\n      return $options.applyPreset('average');\n    }, [\"prevent\"]))\n  }, \"Average Case (65%)\")]), _createElementVNode(\"li\", null, [_createElementVNode(\"a\", {\n    \"class\": \"dropdown-item\",\n    href: \"#\",\n    onClick: _cache[4] || (_cache[4] = _withModifiers(function ($event) {\n      return $options.applyPreset('minimal');\n    }, [\"prevent\"]))\n  }, \"Minimal Pass (50%)\")])])])])])])]), _createElementVNode(\"div\", _hoisted_31, [_createElementVNode(\"div\", _hoisted_32, [_cache[20] || (_cache[20] = _createElementVNode(\"div\", {\n    \"class\": \"card-header bg-light\"\n  }, [_createElementVNode(\"h5\", {\n    \"class\": \"mb-0\"\n  }, \"Simulation Results\")], -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_33, [_createElementVNode(\"div\", _hoisted_34, [_createElementVNode(\"div\", {\n    \"class\": _normalizeClass([\"display-4 fw-bold\", $options.getSimulatedMarkClass])\n  }, _toDisplayString($options.simulatedOverallMark) + \"% \", 3 /* TEXT, CLASS */), _createElementVNode(\"div\", {\n    \"class\": _normalizeClass([\"badge fs-6 my-2\", $options.getSimulatedGradeBadgeClass])\n  }, _toDisplayString($options.simulatedGrade), 3 /* TEXT, CLASS */), _cache[13] || (_cache[13] = _createElementVNode(\"p\", {\n    \"class\": \"text-muted\"\n  }, \"Projected Final Grade\", -1 /* CACHED */))]), _cache[17] || (_cache[17] = _createElementVNode(\"hr\", {\n    \"class\": \"my-4\"\n  }, null, -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_35, [_createElementVNode(\"div\", _hoisted_36, [_createElementVNode(\"div\", _hoisted_37, [_cache[14] || (_cache[14] = _createElementVNode(\"p\", {\n    \"class\": \"mb-1 small text-muted\"\n  }, \"Current Mark\", -1 /* CACHED */)), _createElementVNode(\"h4\", {\n    \"class\": _normalizeClass($options.getCurrentMarkClass)\n  }, _toDisplayString($options.currentOverallMark) + \"%\", 3 /* TEXT, CLASS */)]), _createElementVNode(\"div\", _hoisted_38, [_cache[15] || (_cache[15] = _createElementVNode(\"p\", {\n    \"class\": \"mb-1 small text-muted\"\n  }, \"Change\", -1 /* CACHED */)), _createElementVNode(\"h4\", {\n    \"class\": _normalizeClass($options.getMarkChangeClass)\n  }, _toDisplayString($options.markChange > 0 ? '+' : '') + _toDisplayString($options.markChange) + \"% \", 3 /* TEXT, CLASS */)])])]), _cache[18] || (_cache[18] = _createElementVNode(\"div\", {\n    \"class\": \"progress mb-3\",\n    style: {\n      \"height\": \"10px\"\n    }\n  }, [_createElementVNode(\"div\", {\n    \"class\": \"progress-bar bg-danger\",\n    role: \"progressbar\",\n    style: \"width: 50%\",\n    \"aria-valuenow\": \"50\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\"\n  })], -1 /* CACHED */)), _cache[19] || (_cache[19] = _createElementVNode(\"div\", {\n    \"class\": \"d-flex justify-content-between\"\n  }, [_createElementVNode(\"small\", null, \"Fail\"), _createElementVNode(\"small\", null, \"Pass\"), _createElementVNode(\"small\", null, \"Distinction\")], -1 /* CACHED */)), _createElementVNode(\"div\", {\n    \"class\": \"position-indicator\",\n    style: _normalizeStyle(\"left: \".concat(Math.min(Math.max($options.simulatedOverallMark, 0), 100), \"%\"))\n  }, _cache[16] || (_cache[16] = [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-caret-down\"\n  }, null, -1 /* CACHED */)]), 4 /* STYLE */)])]), _createElementVNode(\"div\", _hoisted_39, [_cache[26] || (_cache[26] = _createElementVNode(\"div\", {\n    \"class\": \"card-header bg-light\"\n  }, [_createElementVNode(\"h5\", {\n    \"class\": \"mb-0\"\n  }, \"Required Marks\")], -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_40, [_cache[24] || (_cache[24] = _createElementVNode(\"p\", {\n    \"class\": \"text-muted small mb-3\"\n  }, \" Marks required on remaining assessments to achieve these grades: \", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_41, [_createElementVNode(\"div\", _hoisted_42, [_cache[21] || (_cache[21] = _createElementVNode(\"span\", {\n    \"class\": \"badge bg-warning\"\n  }, \"A+ Grade (80%+)\", -1 /* CACHED */)), _createElementVNode(\"span\", {\n    \"class\": _normalizeClass({\n      'text-success': $data.requiredMarks.a_grade <= 100,\n      'text-danger': $data.requiredMarks.a_grade > 100\n    })\n  }, _toDisplayString($options.formatRequiredMark($data.requiredMarks.a_grade)), 3 /* TEXT, CLASS */)]), _createElementVNode(\"div\", _hoisted_43, [_createElementVNode(\"div\", {\n    \"class\": \"progress-bar bg-warning\",\n    role: \"progressbar\",\n    style: _normalizeStyle(\"width: \".concat(Math.min($data.requiredMarks.a_grade, 100), \"%\")),\n    \"aria-valuenow\": Math.min($data.requiredMarks.a_grade, 100),\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\"\n  }, null, 12 /* STYLE, PROPS */, _hoisted_44)])]), _createElementVNode(\"div\", _hoisted_45, [_createElementVNode(\"div\", _hoisted_46, [_cache[22] || (_cache[22] = _createElementVNode(\"span\", {\n    \"class\": \"badge bg-success\"\n  }, \"Distinction (70%+)\", -1 /* CACHED */)), _createElementVNode(\"span\", {\n    \"class\": _normalizeClass({\n      'text-success': $data.requiredMarks.distinction <= 100,\n      'text-danger': $data.requiredMarks.distinction > 100\n    })\n  }, _toDisplayString($options.formatRequiredMark($data.requiredMarks.distinction)), 3 /* TEXT, CLASS */)]), _createElementVNode(\"div\", _hoisted_47, [_createElementVNode(\"div\", {\n    \"class\": \"progress-bar bg-success\",\n    role: \"progressbar\",\n    style: _normalizeStyle(\"width: \".concat(Math.min($data.requiredMarks.distinction, 100), \"%\")),\n    \"aria-valuenow\": Math.min($data.requiredMarks.distinction, 100),\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\"\n  }, null, 12 /* STYLE, PROPS */, _hoisted_48)])]), _createElementVNode(\"div\", _hoisted_49, [_createElementVNode(\"div\", _hoisted_50, [_cache[23] || (_cache[23] = _createElementVNode(\"span\", {\n    \"class\": \"badge bg-primary\"\n  }, \"Pass (50%+)\", -1 /* CACHED */)), _createElementVNode(\"span\", {\n    \"class\": _normalizeClass({\n      'text-success': $data.requiredMarks.pass <= 100,\n      'text-danger': $data.requiredMarks.pass > 100\n    })\n  }, _toDisplayString($options.formatRequiredMark($data.requiredMarks.pass)), 3 /* TEXT, CLASS */)]), _createElementVNode(\"div\", _hoisted_51, [_createElementVNode(\"div\", {\n    \"class\": \"progress-bar bg-primary\",\n    role: \"progressbar\",\n    style: _normalizeStyle(\"width: \".concat(Math.min($data.requiredMarks.pass, 100), \"%\")),\n    \"aria-valuenow\": Math.min($data.requiredMarks.pass, 100),\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\"\n  }, null, 12 /* STYLE, PROPS */, _hoisted_52)])]), _cache[25] || (_cache[25] = _createElementVNode(\"div\", {\n    \"class\": \"alert alert-secondary mt-3 small\"\n  }, [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-info-circle me-2\"\n  }), _createTextVNode(\" These calculations show the average mark needed on all remaining assessments to achieve the target grade. \")], -1 /* CACHED */))])])])]))]);\n}","map":{"version":3,"names":["style","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_createVNode","_component_router_link","to","_cache","_hoisted_6","concat","$data","courseId","_$data$course","_$data$course2","course","code","_toDisplayString","name","_hoisted_7","_$data$course3","_$data$course4","isLoading","_hoisted_8","role","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_Fragment","_renderList","$options","sortedAssessments","assessment","key","assessment_type","_normalizeClass","getAssessmentTypeBadgeClass","weightage","mark_id","_hoisted_16","hasMarkForAssessment","isSimulatedAssessment","_hoisted_17","_hoisted_18","type","value","mark","disabled","_hoisted_20","max_mark","_hoisted_21","calculatePercentage","parseFloat","_hoisted_22","_hoisted_23","simulatedMarks","$event","min","max","onInput","updateSimulatedMark","target","number","_hoisted_25","undefined","_hoisted_26","_hoisted_27","_hoisted_28","onClick","clearSimulation","apply","arguments","_hoisted_29","id","_hoisted_30","href","_withModifiers","applyPreset","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","getSimulatedMarkClass","simulatedOverallMark","getSimulatedGradeBadgeClass","simulatedGrade","_hoisted_35","_hoisted_36","_hoisted_37","getCurrentMarkClass","currentOverallMark","_hoisted_38","getMarkChangeClass","markChange","_normalizeStyle","Math","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","requiredMarks","a_grade","formatRequiredMark","_hoisted_43","_hoisted_45","_hoisted_46","distinction","_hoisted_47","_hoisted_49","_hoisted_50","pass","_hoisted_51"],"sources":["C:\\Users\\ansmu\\Desktop\\Web\\NEW\\course-mark-management\\frontend\\src\\views\\student\\MarkSimulation.vue"],"sourcesContent":["<template>\r\n  <div class=\"mark-simulation\">\r\n    <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n      <div>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol class=\"breadcrumb\">\r\n            <li class=\"breadcrumb-item\">\r\n              <router-link to=\"/student/dashboard\">Dashboard</router-link>\r\n            </li>\r\n            <li class=\"breadcrumb-item\">\r\n              <router-link :to=\"`/student/course/${courseId}`\">\r\n                {{ course?.code }} - {{ course?.name }}\r\n              </router-link>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\" aria-current=\"page\">\r\n              Grade Simulator\r\n            </li>\r\n          </ol>\r\n        </nav>\r\n        <h1 class=\"mb-2\">Grade Simulator</h1>\r\n        <p class=\"text-muted\">\r\n          {{ course?.code }} | {{ course?.name }}\r\n        </p>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"isLoading\" class=\"text-center my-5\">\r\n      <div class=\"spinner-border text-primary\" role=\"status\">\r\n        <span class=\"visually-hidden\">Loading...</span>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-else-if=\"!course\" class=\"alert alert-danger\">\r\n      Course not found or you don't have access to this course.\r\n    </div>\r\n\r\n    <div v-else class=\"row\">\r\n      <div class=\"col-md-8 mb-4\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header bg-light\">\r\n            <h5 class=\"mb-0\">Assessment Marks</h5>\r\n            <p class=\"text-muted small mb-0\">\r\n              Enter hypothetical marks for assessments to simulate your final grade\r\n            </p>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div class=\"alert alert-info mb-4\">\r\n              <i class=\"fas fa-info-circle me-2\"></i>\r\n              Enter the marks you expect to get for assessments that haven't been graded yet. Your actual marks are pre-filled where available.\r\n            </div>\r\n\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Assessment</th>\r\n                    <th>Type</th>\r\n                    <th>Weight</th>\r\n                    <th>Status</th>\r\n                    <th>Mark</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr v-for=\"assessment in sortedAssessments\" :key=\"assessment.assessment_type\">\r\n                    <td>\r\n                      <strong>{{ assessment.assessment_type }}</strong>\r\n                    </td>\r\n                    <td>\r\n                      <span class=\"badge\" :class=\"getAssessmentTypeBadgeClass(assessment.assessment_type)\">\r\n                        {{ assessment.assessment_type }}\r\n                      </span>\r\n                    </td>\r\n                    <td>{{ assessment.weightage }}%</td>\r\n                    <td>\r\n                      <span \r\n                        class=\"badge\" \r\n                        :class=\"assessment.mark_id ? 'bg-success' : 'bg-secondary'\"\r\n                      >\r\n                        {{ assessment.mark_id ? 'Completed' : 'Pending' }}\r\n                      </span>\r\n                    </td>\r\n                    <td style=\"width: 180px;\">\r\n                      <div v-if=\"hasMarkForAssessment(assessment.assessment_type) && !isSimulatedAssessment(assessment.assessment_type)\">\r\n                        <div class=\"input-group input-group-sm disabled\">\r\n                          <input \r\n                            type=\"number\" \r\n                            class=\"form-control bg-light\"\r\n                            :value=\"assessment.mark\"\r\n                            disabled\r\n                          >\r\n                          <span class=\"input-group-text\">/ {{ assessment.max_mark }}</span>\r\n                        </div>\r\n                        <small class=\"text-muted\">Actual mark ({{ calculatePercentage(parseFloat(assessment.mark), parseFloat(assessment.max_mark)) }}%)</small>\r\n                      </div>\r\n                      <div v-else>\r\n                        <div class=\"input-group input-group-sm\">\r\n                          <input \r\n                            type=\"number\" \r\n                            class=\"form-control\"\r\n                            v-model.number=\"simulatedMarks[assessment.assessment_type]\"\r\n                            :min=\"0\" \r\n                            :max=\"assessment.max_mark\"\r\n                            @input=\"updateSimulatedMark(assessment.assessment_type, $event.target.value)\"\r\n                          >\r\n                          <span class=\"input-group-text\">/ {{ assessment.max_mark }}</span>\r\n                        </div>\r\n                        <small class=\"text-muted\" v-if=\"simulatedMarks[assessment.assessment_type] !== null && simulatedMarks[assessment.assessment_type] !== undefined\">\r\n                          Simulated ({{ calculatePercentage(simulatedMarks[assessment.assessment_type], parseFloat(assessment.max_mark)) }}%)\r\n                        </small>\r\n                        <small class=\"text-muted\" v-else>\r\n                          Enter expected mark\r\n                        </small>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n            <div class=\"d-flex justify-content-end mt-3\">\r\n              <button class=\"btn btn-outline-secondary me-2\" @click=\"clearSimulation\">\r\n                Clear Simulation\r\n              </button>\r\n              <div class=\"dropdown\">\r\n                <button \r\n                  class=\"btn btn-outline-primary dropdown-toggle\" \r\n                  type=\"button\" \r\n                  id=\"presetDropdown\" \r\n                  data-bs-toggle=\"dropdown\" \r\n                  aria-expanded=\"false\"\r\n                >\r\n                  Apply Preset\r\n                </button>\r\n                <ul class=\"dropdown-menu\" aria-labelledby=\"presetDropdown\">\r\n                  <li><a class=\"dropdown-item\" href=\"#\" @click.prevent=\"applyPreset('best')\">Best Case (90%)</a></li>\r\n                  <li><a class=\"dropdown-item\" href=\"#\" @click.prevent=\"applyPreset('good')\">Good Case (75%)</a></li>\r\n                  <li><a class=\"dropdown-item\" href=\"#\" @click.prevent=\"applyPreset('average')\">Average Case (65%)</a></li>\r\n                  <li><a class=\"dropdown-item\" href=\"#\" @click.prevent=\"applyPreset('minimal')\">Minimal Pass (50%)</a></li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-md-4 mb-4\">\r\n        <div class=\"card mb-4\">\r\n          <div class=\"card-header bg-light\">\r\n            <h5 class=\"mb-0\">Simulation Results</h5>\r\n          </div>\r\n          <div class=\"card-body text-center\">\r\n            <div class=\"mb-4\">\r\n              <div class=\"display-4 fw-bold\" :class=\"getSimulatedMarkClass\">\r\n                {{ simulatedOverallMark }}%\r\n              </div>\r\n              <div class=\"badge fs-6 my-2\" :class=\"getSimulatedGradeBadgeClass\">\r\n                {{ simulatedGrade }}\r\n              </div>\r\n              <p class=\"text-muted\">Projected Final Grade</p>\r\n            </div>\r\n            \r\n            <hr class=\"my-4\">\r\n            \r\n            <div class=\"comparison mb-3\">\r\n              <div class=\"row\">\r\n                <div class=\"col-6 text-start\">\r\n                  <p class=\"mb-1 small text-muted\">Current Mark</p>\r\n                  <h4 :class=\"getCurrentMarkClass\">{{ currentOverallMark }}%</h4>\r\n                </div>\r\n                <div class=\"col-6 text-end\">\r\n                  <p class=\"mb-1 small text-muted\">Change</p>\r\n                  <h4 :class=\"getMarkChangeClass\">\r\n                    {{ markChange > 0 ? '+' : '' }}{{ markChange }}%\r\n                  </h4>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"progress mb-3\" style=\"height: 10px;\">\r\n              <div \r\n                class=\"progress-bar bg-danger\" \r\n                role=\"progressbar\" \r\n                :style=\"`width: 50%`\"\r\n                aria-valuenow=\"50\" \r\n                aria-valuemin=\"0\" \r\n                aria-valuemax=\"100\">\r\n              </div>\r\n            </div>\r\n            <div class=\"d-flex justify-content-between\">\r\n              <small>Fail</small>\r\n              <small>Pass</small>\r\n              <small>Distinction</small>\r\n            </div>\r\n            \r\n            <div \r\n              class=\"position-indicator\" \r\n              :style=\"`left: ${Math.min(Math.max(simulatedOverallMark, 0), 100)}%`\"\r\n            >\r\n              <i class=\"fas fa-caret-down\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"card\">\r\n          <div class=\"card-header bg-light\">\r\n            <h5 class=\"mb-0\">Required Marks</h5>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <p class=\"text-muted small mb-3\">\r\n              Marks required on remaining assessments to achieve these grades:\r\n            </p>\r\n            \r\n            <div class=\"required-mark-row\">\r\n              <div class=\"d-flex justify-content-between mb-2\">\r\n                <span class=\"badge bg-warning\">A+ Grade (80%+)</span>\r\n                <span \r\n                  :class=\"{ 'text-success': requiredMarks.a_grade <= 100, 'text-danger': requiredMarks.a_grade > 100 }\"\r\n                >\r\n                  {{ formatRequiredMark(requiredMarks.a_grade) }}\r\n                </span>\r\n              </div>\r\n              <div class=\"progress mb-3\" style=\"height: 8px;\">\r\n                <div \r\n                  class=\"progress-bar bg-warning\" \r\n                  role=\"progressbar\" \r\n                  :style=\"`width: ${Math.min(requiredMarks.a_grade, 100)}%`\"\r\n                  :aria-valuenow=\"Math.min(requiredMarks.a_grade, 100)\"\r\n                  aria-valuemin=\"0\" \r\n                  aria-valuemax=\"100\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"required-mark-row\">\r\n              <div class=\"d-flex justify-content-between mb-2\">\r\n                <span class=\"badge bg-success\">Distinction (70%+)</span>\r\n                <span \r\n                  :class=\"{ 'text-success': requiredMarks.distinction <= 100, 'text-danger': requiredMarks.distinction > 100 }\"\r\n                >\r\n                  {{ formatRequiredMark(requiredMarks.distinction) }}\r\n                </span>\r\n              </div>\r\n              <div class=\"progress mb-3\" style=\"height: 8px;\">\r\n                <div \r\n                  class=\"progress-bar bg-success\" \r\n                  role=\"progressbar\" \r\n                  :style=\"`width: ${Math.min(requiredMarks.distinction, 100)}%`\"\r\n                  :aria-valuenow=\"Math.min(requiredMarks.distinction, 100)\"\r\n                  aria-valuemin=\"0\" \r\n                  aria-valuemax=\"100\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"required-mark-row\">\r\n              <div class=\"d-flex justify-content-between mb-2\">\r\n                <span class=\"badge bg-primary\">Pass (50%+)</span>\r\n                <span\r\n                  :class=\"{ 'text-success': requiredMarks.pass <= 100, 'text-danger': requiredMarks.pass > 100 }\"\r\n                >\r\n                  {{ formatRequiredMark(requiredMarks.pass) }}\r\n                </span>\r\n              </div>\r\n              <div class=\"progress mb-3\" style=\"height: 8px;\">\r\n                <div \r\n                  class=\"progress-bar bg-primary\" \r\n                  role=\"progressbar\" \r\n                  :style=\"`width: ${Math.min(requiredMarks.pass, 100)}%`\"\r\n                  :aria-valuenow=\"Math.min(requiredMarks.pass, 100)\"\r\n                  aria-valuemin=\"0\" \r\n                  aria-valuemax=\"100\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"alert alert-secondary mt-3 small\">\r\n              <i class=\"fas fa-info-circle me-2\"></i>\r\n              These calculations show the average mark needed on all remaining assessments to achieve the target grade.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\n\r\nexport default {\r\n  name: 'MarkSimulation',\r\n  data() {\r\n    return {\r\n      courseId: null,\r\n      isLoading: true,\r\n      course: null,\r\n      assessments: [],\r\n      performance: null,\r\n      simulatedMarks: {}, // assessment_type -> simulated_mark\r\n      requiredMarks: {\r\n        pass: 0,\r\n        distinction: 0,\r\n        a_grade: 0\r\n      },\r\n      error: null\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(\"auth\", [\"getUser\"]),\r\n    userId() {\r\n      return this.getUser ? this.getUser.id : null;\r\n    },\r\n    sortedAssessments() {\r\n      return [...this.assessments].sort((a, b) => {\r\n        // Sort by weightage (highest first)\r\n        return b.weightage - a.weightage;\r\n      });\r\n    },\r\n    currentOverallMark() {\r\n      return this.performance ? this.performance.overall_percentage : 0;\r\n    },\r\n    simulatedOverallMark() {\r\n      let weightedSum = 0;\r\n      let totalWeight = 0;\r\n      \r\n      this.assessments.forEach(assessment => {\r\n        const simulatedMark = this.simulatedMarks[assessment.assessment_type];\r\n        const actualMark = parseFloat(assessment.mark) || 0;\r\n        const weight = parseFloat(assessment.weightage);\r\n        \r\n        // Use simulated mark if available, otherwise use actual mark\r\n        const markToUse = simulatedMark !== undefined ? simulatedMark : actualMark;\r\n        \r\n        const percentage = this.calculatePercentage(markToUse, parseFloat(assessment.max_mark));\r\n        weightedSum += percentage * weight;\r\n        totalWeight += weight;\r\n      });\r\n      \r\n      if (totalWeight === 0) return 0;\r\n      return Math.round(weightedSum / totalWeight);\r\n    },\r\n    simulatedGrade() {\r\n      return this.calculateGrade(this.simulatedOverallMark);\r\n    },\r\n    simulatedGPA() {\r\n      return this.calculateGPA(this.simulatedOverallMark);\r\n    },\r\n    markChange() {\r\n      return this.simulatedOverallMark - this.currentOverallMark;\r\n    },\r\n    getSimulatedMarkClass() {\r\n      if (this.simulatedOverallMark >= 80) return 'text-success';\r\n      if (this.simulatedOverallMark >= 70) return 'text-primary';\r\n      if (this.simulatedOverallMark >= 60) return 'text-warning';\r\n      return 'text-danger';\r\n    },\r\n    getSimulatedGradeBadgeClass() {\r\n      const grade = this.simulatedGrade;\r\n      if (['A+', 'A', 'A-'].includes(grade)) return 'bg-success';\r\n      if (['B+', 'B', 'B-'].includes(grade)) return 'bg-primary';\r\n      if (['C+', 'C', 'C-'].includes(grade)) return 'bg-warning';\r\n      if (['D+', 'D'].includes(grade)) return 'bg-orange';\r\n      return 'bg-danger';\r\n    },\r\n    getCurrentMarkClass() {\r\n      if (this.currentOverallMark >= 80) return 'text-success';\r\n      if (this.currentOverallMark >= 70) return 'text-primary';\r\n      if (this.currentOverallMark >= 60) return 'text-warning';\r\n      return 'text-danger';\r\n    },\r\n    getMarkChangeClass() {\r\n      if (this.markChange > 0) return 'text-success';\r\n      if (this.markChange < 0) return 'text-danger';\r\n      return 'text-muted';\r\n    },\r\n    unassessedItems() {\r\n      return this.assessments.filter(assessment => \r\n        assessment.mark_id === null || this.isSimulatedAssessment(assessment.assessment_type)\r\n      );\r\n    },\r\n    totalRemainingWeight() {\r\n      return this.unassessedItems.reduce((sum, assessment) => \r\n        sum + parseFloat(assessment.weightage), 0\r\n      );\r\n    }\r\n  },\r\n  async created() {\r\n    this.courseId = parseInt(this.$route.params.id);\r\n    \r\n    console.log('MarkSimulation created, getUser:', this.getUser);\r\n    \r\n    // Wait a bit for authentication to be ready, then try to load data\r\n    setTimeout(() => {\r\n      console.log('After timeout, getUser:', this.getUser);\r\n      if (this.getUser) {\r\n        this.loadCourseData();\r\n      } else {\r\n        this.error = 'Please log in to access the grade simulator';\r\n        this.isLoading = false;\r\n      }\r\n    }, 100);\r\n  },\r\n  methods: {\r\n    async loadCourseData() {\r\n      this.isLoading = true;\r\n      this.error = null;\r\n      \r\n      if (!this.userId) {\r\n        this.error = 'User not authenticated';\r\n        this.isLoading = false;\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        const requestData = {\r\n          student_id: this.userId,\r\n          course_id: this.courseId\r\n        };\r\n        \r\n        const response = await fetch('http://localhost:8000/api/marks/student_course_detail', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(requestData)\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const errorText = await response.text();\r\n          throw new Error(`HTTP error! status: ${response.status}, body: ${errorText}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        \r\n        if (data.success) {\r\n          this.course = data.course;\r\n          this.assessments = data.assessments;\r\n          this.performance = data.performance;\r\n          \r\n          // Initialize simulation\r\n          this.initializeSimulation();\r\n          this.calculateRequiredMarks();\r\n        } else {\r\n          this.error = data.error || 'Failed to load course data';\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading course data:', error);\r\n        this.error = 'Failed to load course data. Please try again later.';\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n    initializeSimulation() {\r\n      // Initialize simulated marks for assessments\r\n      this.simulatedMarks = {};\r\n      this.assessments.forEach(assessment => {\r\n        // Only allow simulation if the assessment is not yet marked\r\n        if (assessment.mark_id === null) {\r\n          this.simulatedMarks[assessment.assessment_type] = null;\r\n        }\r\n      });\r\n    },\r\n    hasMarkForAssessment(assessmentType) {\r\n      const assessment = this.assessments.find(a => a.assessment_type === assessmentType);\r\n      return assessment && assessment.mark_id !== null;\r\n    },\r\n    isSimulatedAssessment(assessmentType) {\r\n      return assessmentType in this.simulatedMarks;\r\n    },\r\n    calculatePercentage(mark, maxMark) {\r\n      if (!mark || !maxMark) return 0;\r\n      return Math.round((mark / maxMark) * 100);\r\n    },\r\n    calculateGrade(percentage) {\r\n      if (percentage >= 90) return 'A+';\r\n      if (percentage >= 85) return 'A';\r\n      if (percentage >= 80) return 'A-';\r\n      if (percentage >= 75) return 'B+';\r\n      if (percentage >= 70) return 'B';\r\n      if (percentage >= 65) return 'B-';\r\n      if (percentage >= 60) return 'C+';\r\n      if (percentage >= 55) return 'C';\r\n      if (percentage >= 50) return 'C-';\r\n      if (percentage >= 45) return 'D+';\r\n      if (percentage >= 40) return 'D';\r\n      return 'F';\r\n    },\r\n    calculateGPA(percentage) {\r\n      if (percentage >= 90) return 4.3;\r\n      if (percentage >= 85) return 4.0;\r\n      if (percentage >= 80) return 3.7;\r\n      if (percentage >= 75) return 3.3;\r\n      if (percentage >= 70) return 3.0;\r\n      if (percentage >= 65) return 2.7;\r\n      if (percentage >= 60) return 2.3;\r\n      if (percentage >= 55) return 2.0;\r\n      if (percentage >= 50) return 1.7;\r\n      if (percentage >= 45) return 1.3;\r\n      if (percentage >= 40) return 1.0;\r\n      return 0.0;\r\n    },\r\n    calculateRequiredMarks() {\r\n      this.requiredMarks.pass = this.calculateRequiredMarkForGrade(50);\r\n      this.requiredMarks.distinction = this.calculateRequiredMarkForGrade(70);\r\n      this.requiredMarks.a_grade = this.calculateRequiredMarkForGrade(80);\r\n    },\r\n    calculateRequiredMarkForGrade(targetPercentage) {\r\n      // Calculate current assessed weight and marks\r\n      let assessedWeightedMarks = 0;\r\n      let totalAssessedWeight = 0;\r\n      \r\n      this.assessments.forEach(assessment => {\r\n        // Skip if this assessment is being simulated or not yet marked\r\n        if (this.isSimulatedAssessment(assessment.assessment_type) || assessment.mark_id === null) {\r\n          return;\r\n        }\r\n        \r\n        const percentage = this.calculatePercentage(parseFloat(assessment.mark), parseFloat(assessment.max_mark));\r\n        assessedWeightedMarks += percentage * parseFloat(assessment.weightage);\r\n        totalAssessedWeight += parseFloat(assessment.weightage);\r\n      });\r\n      \r\n      // If no remaining assessments, return 0\r\n      if (this.totalRemainingWeight === 0) return 0;\r\n      \r\n      // Calculate required weighted marks from remaining assessments\r\n      const totalRequiredWeightedMarks = targetPercentage * 100; // 100% total weight\r\n      const requiredFromRemaining = totalRequiredWeightedMarks - assessedWeightedMarks;\r\n      \r\n      // Calculate required percentage on remaining assessments\r\n      const requiredPercentage = requiredFromRemaining / this.totalRemainingWeight;\r\n      \r\n      return Math.max(0, Math.round(requiredPercentage));\r\n    },\r\n    updateSimulatedMark(assessmentType, value) {\r\n      if (value === '' || value === null) {\r\n        this.$delete(this.simulatedMarks, assessmentType);\r\n      } else {\r\n        this.$set(this.simulatedMarks, assessmentType, parseFloat(value));\r\n      }\r\n      this.calculateRequiredMarks();\r\n    },\r\n    clearSimulation() {\r\n      this.simulatedMarks = {};\r\n      this.assessments.forEach(assessment => {\r\n        if (assessment.mark_id === null) {\r\n          this.simulatedMarks[assessment.assessment_type] = null;\r\n        }\r\n      });\r\n      this.calculateRequiredMarks();\r\n    },\r\n    applyPreset(type) {\r\n      this.unassessedItems.forEach(assessment => {\r\n        let targetMark;\r\n        const maxMark = parseFloat(assessment.max_mark);\r\n        \r\n        switch(type) {\r\n          case 'best':\r\n            targetMark = maxMark;\r\n            break;\r\n          case 'good':\r\n            targetMark = maxMark * 0.85;\r\n            break;\r\n          case 'average':\r\n            targetMark = maxMark * 0.70;\r\n            break;\r\n          case 'minimal':\r\n            targetMark = maxMark * 0.50;\r\n            break;\r\n          default:\r\n            targetMark = 0;\r\n        }\r\n        \r\n        this.simulatedMarks[assessment.assessment_type] = Math.round(targetMark);\r\n      });\r\n      \r\n      this.calculateRequiredMarks();\r\n    },\r\n    getCurrentMarkForAssessment(assessmentType) {\r\n      const assessment = this.assessments.find(a => a.assessment_type === assessmentType);\r\n      return assessment && assessment.mark ? parseFloat(assessment.mark) : null;\r\n    },\r\n    getMaxMarkForAssessment(assessmentType) {\r\n      const assessment = this.assessments.find(a => a.assessment_type === assessmentType);\r\n      return assessment ? parseFloat(assessment.max_mark) : 0;\r\n    },\r\n    getAssessmentWeight(assessmentType) {\r\n      const assessment = this.assessments.find(a => a.assessment_type === assessmentType);\r\n      return assessment ? parseFloat(assessment.weightage) : 0;\r\n    },\r\n    getAssessmentTypeBadgeClass(type) {\r\n      const types = {\r\n        'Assignment': 'bg-success',\r\n        'Quiz': 'bg-info',\r\n        'Test': 'bg-warning',\r\n        'Final Exam': 'bg-danger',\r\n        'Project': 'bg-primary',\r\n        'Lab': 'bg-secondary'\r\n      };\r\n      return types[type] || 'bg-secondary';\r\n    },\r\n    formatRequiredMark(value) {\r\n      if (value <= 0) return 'Already achieved';\r\n      if (value > 100) return 'Not possible';\r\n      return `${value}% needed`;\r\n    },\r\n    formatDate(dateString) {\r\n      if (!dateString) return 'Not set';\r\n      return new Date(dateString).toLocaleDateString();\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.mark-simulation h1 {\r\n  font-size: 1.75rem;\r\n  font-weight: 600;\r\n}\r\n\r\n.card {\r\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.progress {\r\n  border-radius: 0.25rem;\r\n  overflow: hidden;\r\n}\r\n\r\n.display-4 {\r\n  font-size: 3rem;\r\n}\r\n\r\n.position-indicator {\r\n  position: relative;\r\n  width: 0;\r\n  height: 0;\r\n  margin-top: -24px;\r\n  z-index: 2;\r\n  color: #343a40;\r\n  font-size: 1.5rem;\r\n  transform: translateX(-50%);\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .display-4 {\r\n    font-size: 2.5rem;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}