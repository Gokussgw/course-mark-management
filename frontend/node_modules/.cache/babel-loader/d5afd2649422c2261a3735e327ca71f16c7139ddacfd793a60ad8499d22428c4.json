{"ast":null,"code":"import _toConsumableArray from \"C:/Users/ansmu/Desktop/Web/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"C:/Users/ansmu/Desktop/Web/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _regenerator from \"C:/Users/ansmu/Desktop/Web/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _asyncToGenerator from \"C:/Users/ansmu/Desktop/Web/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"C:/Users/ansmu/Desktop/Web/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.date.to-iso-string.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url.to-json.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { mapGetters } from 'vuex';\nimport * as bootstrap from 'bootstrap';\nexport default {\n  name: 'MarksManagement',\n  data: function data() {\n    return {\n      courseId: this.$route.params.courseId || '',\n      course: null,\n      students: [],\n      lecturerCourses: [],\n      isLoading: false,\n      unsavedChanges: false\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters('auth', ['getUser', 'userId'])), {}, {\n    currentUser: function currentUser() {\n      return this.getUser;\n    }\n  }),\n  created: function created() {\n    var _this = this;\n    return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n      return _regenerator().w(function (_context) {\n        while (1) switch (_context.n) {\n          case 0:\n            console.log('MarksManagement component created');\n            console.log('Initial auth state:', {\n              user: _this.getUser,\n              userId: _this.userId,\n              isAuthenticated: _this.$store.getters['auth/isAuthenticated']\n            });\n\n            // Wait a bit for auth to be initialized if needed\n            _context.n = 1;\n            return _this.$nextTick();\n          case 1:\n            _context.n = 2;\n            return _this.loadLecturerCourses();\n          case 2:\n            if (!_this.courseId) {\n              _context.n = 3;\n              break;\n            }\n            _context.n = 3;\n            return _this.loadCourseData();\n          case 3:\n            return _context.a(2);\n        }\n      }, _callee);\n    }))();\n  },\n  methods: {\n    loadLecturerCourses: function loadLecturerCourses() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n        var lecturerId, response, data, _t;\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              _context2.p = 0;\n              console.log('Loading lecturer courses...');\n              console.log('User ID:', _this2.userId);\n              console.log('Current user:', _this2.currentUser);\n              if (_this2.userId) {\n                _context2.n = 1;\n                break;\n              }\n              throw new Error('User not authenticated');\n            case 1:\n              lecturerId = _this2.userId;\n              _context2.n = 2;\n              return fetch(\"http://localhost/marks-api.php?action=lecturer_courses&lecturer_id=\".concat(lecturerId), {\n                method: 'GET',\n                credentials: 'include',\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n            case 2:\n              response = _context2.v;\n              console.log('API Response status:', response.status);\n              if (response.ok) {\n                _context2.n = 3;\n                break;\n              }\n              throw new Error(\"HTTP error! status: \".concat(response.status));\n            case 3:\n              _context2.n = 4;\n              return response.json();\n            case 4:\n              data = _context2.v;\n              console.log('API Response data:', data);\n              if (!data.error) {\n                _context2.n = 5;\n                break;\n              }\n              throw new Error(data.error);\n            case 5:\n              _this2.lecturerCourses = data.courses || [];\n              console.log('Loaded lecturer courses:', _this2.lecturerCourses);\n              _context2.n = 7;\n              break;\n            case 6:\n              _context2.p = 6;\n              _t = _context2.v;\n              console.error('Error loading lecturer courses:', _t);\n              _this2.$store.dispatch('showToast', {\n                message: 'Error loading courses: ' + _t.message,\n                type: 'error'\n              });\n              _this2.lecturerCourses = [];\n            case 7:\n              return _context2.a(2);\n          }\n        }, _callee2, null, [[0, 6]]);\n      }))();\n    },\n    loadCourseData: function loadCourseData() {\n      var _this3 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {\n        var _t2;\n        return _regenerator().w(function (_context3) {\n          while (1) switch (_context3.n) {\n            case 0:\n              if (_this3.courseId) {\n                _context3.n = 1;\n                break;\n              }\n              return _context3.a(2);\n            case 1:\n              _this3.isLoading = true;\n              _context3.p = 2;\n              // Find the selected course\n              _this3.course = _this3.lecturerCourses.find(function (c) {\n                return c.id == _this3.courseId;\n              });\n\n              // Load students for this course with their marks\n              _context3.n = 3;\n              return _this3.loadStudentsWithMarks();\n            case 3:\n              _context3.n = 5;\n              break;\n            case 4:\n              _context3.p = 4;\n              _t2 = _context3.v;\n              console.error('Error loading course data:', _t2);\n              _this3.$store.dispatch('showToast', {\n                message: 'Error loading course data',\n                type: 'error'\n              });\n            case 5:\n              _context3.p = 5;\n              _this3.isLoading = false;\n              return _context3.f(5);\n            case 6:\n              return _context3.a(2);\n          }\n        }, _callee3, null, [[2, 4, 5, 6]]);\n      }))();\n    },\n    loadStudentsWithMarks: function loadStudentsWithMarks() {\n      var _this4 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4() {\n        var response, data, _t3;\n        return _regenerator().w(function (_context4) {\n          while (1) switch (_context4.n) {\n            case 0:\n              _context4.p = 0;\n              _context4.n = 1;\n              return fetch(\"http://localhost/marks-api.php?action=course_students_marks&course_id=\".concat(_this4.courseId), {\n                method: 'GET',\n                credentials: 'include',\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n            case 1:\n              response = _context4.v;\n              if (response.ok) {\n                _context4.n = 2;\n                break;\n              }\n              throw new Error(\"HTTP error! status: \".concat(response.status));\n            case 2:\n              _context4.n = 3;\n              return response.json();\n            case 3:\n              data = _context4.v;\n              if (!data.error) {\n                _context4.n = 4;\n                break;\n              }\n              throw new Error(data.error);\n            case 4:\n              // Map the API response to the expected format\n              _this4.students = data.students.map(function (student) {\n                return {\n                  id: student.student_id,\n                  name: student.student_name,\n                  email: student.email || 'N/A',\n                  matric_number: student.matric_number,\n                  marks: {\n                    assignment: student.assignment_mark || 0,\n                    quiz: student.quiz_mark || 0,\n                    test: student.test_mark || 0,\n                    final_exam: student.final_exam_mark || 0,\n                    final_mark: student.final_grade || 0,\n                    grade: student.letter_grade || 'F'\n                  }\n                };\n              });\n\n              // Calculate final marks for all students to ensure they're up to date\n              _this4.students.forEach(function (student) {\n                _this4.calculateFinalMark(student);\n              });\n              console.log('Loaded students with marks:', _this4.students);\n              _context4.n = 6;\n              break;\n            case 5:\n              _context4.p = 5;\n              _t3 = _context4.v;\n              console.error('Error loading students with marks:', _t3);\n              _this4.$store.dispatch('showToast', {\n                message: 'Error loading student marks: ' + _t3.message,\n                type: 'error'\n              });\n\n              // Fallback to empty array\n              _this4.students = [];\n            case 6:\n              return _context4.a(2);\n          }\n        }, _callee4, null, [[0, 5]]);\n      }))();\n    },\n    calculateFinalMark: function calculateFinalMark(student) {\n      var marks = student.marks;\n\n      // Check if all marks are entered\n      var assignment = marks.assignment || 0;\n      var quiz = marks.quiz || 0;\n      var test = marks.test || 0;\n      var finalExam = marks.final_exam || 0;\n\n      // Calculate final mark: Components (70%) + Final Exam (30%)\n      // Components breakdown: Assignment (25%) + Quiz (20%) + Test (25%)\n      var componentMark = assignment * 0.25 + quiz * 0.20 + test * 0.25;\n      var finalMark = componentMark + finalExam * 0.30;\n      marks.final_mark = finalMark;\n      marks.grade = this.calculateGrade(finalMark);\n      this.unsavedChanges = true;\n    },\n    calculateGrade: function calculateGrade(finalMark) {\n      if (finalMark >= 80) return 'A';\n      if (finalMark >= 70) return 'B';\n      if (finalMark >= 60) return 'C';\n      if (finalMark >= 50) return 'D';\n      return 'F';\n    },\n    calculateAllFinalMarks: function calculateAllFinalMarks() {\n      var _this5 = this;\n      this.students.forEach(function (student) {\n        _this5.calculateFinalMark(student);\n      });\n      this.$store.dispatch('showToast', {\n        message: 'Final marks calculated for all students',\n        type: 'success'\n      });\n    },\n    saveStudentMarks: function saveStudentMarks(student) {\n      var _this6 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee5() {\n        var lecturerId, requestData, response, data, _t4;\n        return _regenerator().w(function (_context5) {\n          while (1) switch (_context5.n) {\n            case 0:\n              _context5.p = 0;\n              if (_this6.userId) {\n                _context5.n = 1;\n                break;\n              }\n              throw new Error('User not authenticated');\n            case 1:\n              lecturerId = _this6.userId;\n              requestData = {\n                action: 'save_marks',\n                student_id: student.id,\n                course_id: _this6.courseId,\n                lecturer_id: lecturerId,\n                marks: {\n                  assignment: student.marks.assignment || 0,\n                  quiz: student.marks.quiz || 0,\n                  test: student.marks.test || 0,\n                  final_exam: student.marks.final_exam || 0\n                }\n              };\n              _context5.n = 2;\n              return fetch('http://localhost/marks-api.php', {\n                method: 'POST',\n                credentials: 'include',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(requestData)\n              });\n            case 2:\n              response = _context5.v;\n              if (response.ok) {\n                _context5.n = 3;\n                break;\n              }\n              throw new Error(\"HTTP error! status: \".concat(response.status));\n            case 3:\n              _context5.n = 4;\n              return response.json();\n            case 4:\n              data = _context5.v;\n              if (!data.error) {\n                _context5.n = 5;\n                break;\n              }\n              throw new Error(data.error);\n            case 5:\n              console.log('Marks saved successfully for student:', student.name);\n              _this6.$store.dispatch('showToast', {\n                message: \"Marks saved for \".concat(student.name),\n                type: 'success'\n              });\n              _context5.n = 7;\n              break;\n            case 6:\n              _context5.p = 6;\n              _t4 = _context5.v;\n              console.error('Error saving student marks:', _t4);\n              _this6.$store.dispatch('showToast', {\n                message: \"Error saving marks for \".concat(student.name, \": \").concat(_t4.message),\n                type: 'error'\n              });\n              throw _t4;\n            case 7:\n              return _context5.a(2);\n          }\n        }, _callee5, null, [[0, 6]]);\n      }))();\n    },\n    saveAllMarks: function saveAllMarks() {\n      var _this7 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee6() {\n        var _iterator, _step, student, _t5, _t6;\n        return _regenerator().w(function (_context6) {\n          while (1) switch (_context6.n) {\n            case 0:\n              if (_this7.unsavedChanges) {\n                _context6.n = 1;\n                break;\n              }\n              _this7.$store.dispatch('showToast', {\n                message: 'No changes to save',\n                type: 'info'\n              });\n              return _context6.a(2);\n            case 1:\n              _this7.isLoading = true;\n              _context6.p = 2;\n              // Save all student marks to API\n              _iterator = _createForOfIteratorHelper(_this7.students);\n              _context6.p = 3;\n              _iterator.s();\n            case 4:\n              if ((_step = _iterator.n()).done) {\n                _context6.n = 6;\n                break;\n              }\n              student = _step.value;\n              _context6.n = 5;\n              return _this7.saveStudentMarks(student);\n            case 5:\n              _context6.n = 4;\n              break;\n            case 6:\n              _context6.n = 8;\n              break;\n            case 7:\n              _context6.p = 7;\n              _t5 = _context6.v;\n              _iterator.e(_t5);\n            case 8:\n              _context6.p = 8;\n              _iterator.f();\n              return _context6.f(8);\n            case 9:\n              _this7.unsavedChanges = false;\n              _this7.$store.dispatch('showToast', {\n                message: 'All marks saved successfully',\n                type: 'success'\n              });\n              _context6.n = 11;\n              break;\n            case 10:\n              _context6.p = 10;\n              _t6 = _context6.v;\n              console.error('Error saving all marks:', _t6);\n              _this7.$store.dispatch('showToast', {\n                message: 'Error saving marks',\n                type: 'error'\n              });\n            case 11:\n              _context6.p = 11;\n              _this7.isLoading = false;\n              return _context6.f(11);\n            case 12:\n              return _context6.a(2);\n          }\n        }, _callee6, null, [[3, 7, 8, 9], [2, 10, 11, 12]]);\n      }))();\n    },\n    exportMarksCSV: function exportMarksCSV() {\n      var _this8 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee7() {\n        var _this8$course, _this8$course2, _this8$course3, _this8$course4, _this8$course5, timestamp, filename, escapeCSV, csvLines, validFinalMarks, average, highest, lowest, csvContent, blob, url, link;\n        return _regenerator().w(function (_context7) {\n          while (1) switch (_context7.n) {\n            case 0:\n              console.log('Export CSV clicked');\n\n              // Validation checks\n              if (_this8.courseId) {\n                _context7.n = 1;\n                break;\n              }\n              _this8.$store.dispatch('showToast', {\n                message: 'Please select a course first',\n                type: 'warning'\n              });\n              return _context7.a(2);\n            case 1:\n              if (_this8.userId) {\n                _context7.n = 2;\n                break;\n              }\n              _this8.$store.dispatch('showToast', {\n                message: 'User authentication required',\n                type: 'error'\n              });\n              return _context7.a(2);\n            case 2:\n              if (!(!_this8.students || _this8.students.length === 0)) {\n                _context7.n = 3;\n                break;\n              }\n              _this8.$store.dispatch('showToast', {\n                message: 'No student data available to export',\n                type: 'warning'\n              });\n              return _context7.a(2);\n            case 3:\n              try {\n                console.log('Creating CSV export...');\n\n                // Generate filename\n                timestamp = new Date().toISOString().split('T')[0];\n                filename = \"\".concat(((_this8$course = _this8.course) === null || _this8$course === void 0 ? void 0 : _this8$course.code) || 'Course', \"_Marks_\").concat(timestamp, \".csv\"); // Helper function to escape CSV values\n                escapeCSV = function escapeCSV(value) {\n                  if (value === null || value === undefined) return '';\n                  var stringValue = String(value);\n                  if (stringValue.includes(',') || stringValue.includes('\"') || stringValue.includes('\\n')) {\n                    return '\"' + stringValue.replace(/\"/g, '\"\"') + '\"';\n                  }\n                  return stringValue;\n                }; // Build CSV content\n                csvLines = []; // Course information header\n                csvLines.push('Course Information');\n                csvLines.push(\"Course Code,\".concat(escapeCSV(((_this8$course2 = _this8.course) === null || _this8$course2 === void 0 ? void 0 : _this8$course2.code) || '')));\n                csvLines.push(\"Course Name,\".concat(escapeCSV(((_this8$course3 = _this8.course) === null || _this8$course3 === void 0 ? void 0 : _this8$course3.name) || '')));\n                csvLines.push(\"Academic Year,\".concat(escapeCSV(((_this8$course4 = _this8.course) === null || _this8$course4 === void 0 ? void 0 : _this8$course4.academic_year) || '')));\n                csvLines.push(\"Semester,\".concat(escapeCSV(((_this8$course5 = _this8.course) === null || _this8$course5 === void 0 ? void 0 : _this8$course5.semester) || '')));\n                csvLines.push(\"Export Date,\".concat(new Date().toLocaleDateString()));\n                csvLines.push(\"Export Time,\".concat(new Date().toLocaleTimeString()));\n                csvLines.push(\"Total Students,\".concat(_this8.students.length));\n                csvLines.push(''); // Empty line\n\n                // Column headers\n                csvLines.push('Student Name,Matric Number,Assignment (25%),Quiz (20%),Test (25%),Final Exam (30%),Final Mark,Letter Grade');\n\n                // Student data\n                _this8.students.forEach(function (student) {\n                  var marks = student.marks || {};\n                  var row = [escapeCSV(student.name), escapeCSV(student.matric_number || 'N/A'), marks.assignment || '', marks.quiz || '', marks.test || '', marks.final_exam || '', marks.final_mark ? marks.final_mark.toFixed(2) : '', escapeCSV(marks.grade || '')];\n                  csvLines.push(row.join(','));\n                });\n\n                // Add summary statistics if we have marks\n                validFinalMarks = _this8.students.map(function (s) {\n                  var _s$marks;\n                  return (_s$marks = s.marks) === null || _s$marks === void 0 ? void 0 : _s$marks.final_mark;\n                }).filter(function (mark) {\n                  return mark !== null && mark !== undefined && !isNaN(mark);\n                });\n                if (validFinalMarks.length > 0) {\n                  average = validFinalMarks.reduce(function (sum, mark) {\n                    return sum + mark;\n                  }, 0) / validFinalMarks.length;\n                  highest = Math.max.apply(Math, _toConsumableArray(validFinalMarks));\n                  lowest = Math.min.apply(Math, _toConsumableArray(validFinalMarks));\n                  csvLines.push(''); // Empty line\n                  csvLines.push('SUMMARY STATISTICS');\n                  csvLines.push(\"Students with Marks,\".concat(validFinalMarks.length));\n                  csvLines.push(\"Class Average,\".concat(average.toFixed(2)));\n                  csvLines.push(\"Highest Mark,\".concat(highest.toFixed(2)));\n                  csvLines.push(\"Lowest Mark,\".concat(lowest.toFixed(2)));\n                }\n\n                // Create CSV content\n                csvContent = csvLines.join('\\n');\n                console.log('CSV content created, length:', csvContent.length);\n                console.log('CSV preview:', csvContent.substring(0, 200));\n\n                // Create and download file\n                blob = new Blob([csvContent], {\n                  type: 'text/csv;charset=utf-8'\n                });\n                console.log('Blob created, size:', blob.size);\n\n                // Create download link\n                url = window.URL.createObjectURL(blob);\n                link = document.createElement('a');\n                link.href = url;\n                link.download = filename;\n                link.style.display = 'none';\n\n                // Add to document, click, and remove\n                document.body.appendChild(link);\n                console.log('Triggering download...');\n                link.click();\n                document.body.removeChild(link);\n\n                // Clean up\n                setTimeout(function () {\n                  window.URL.revokeObjectURL(url);\n                }, 100);\n                console.log('Download completed');\n                _this8.$store.dispatch('showToast', {\n                  message: \"Marks exported successfully as \".concat(filename),\n                  type: 'success'\n                });\n              } catch (error) {\n                console.error('Export error:', error);\n                _this8.$store.dispatch('showToast', {\n                  message: 'Error exporting marks: ' + error.message,\n                  type: 'error'\n                });\n              }\n            case 4:\n              return _context7.a(2);\n          }\n        }, _callee7);\n      }))();\n    },\n    exportMarksServer: function exportMarksServer() {\n      var _this9 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee8() {\n        var _this9$course, exportUrl, response, contentType, errorText, contentDisposition, filename, filenameMatch, blob, url, a, _t7;\n        return _regenerator().w(function (_context8) {\n          while (1) switch (_context8.n) {\n            case 0:\n              if (_this9.courseId) {\n                _context8.n = 1;\n                break;\n              }\n              _this9.$store.dispatch('showToast', {\n                message: 'Please select a course first',\n                type: 'warning'\n              });\n              return _context8.a(2);\n            case 1:\n              if (_this9.userId) {\n                _context8.n = 2;\n                break;\n              }\n              _this9.$store.dispatch('showToast', {\n                message: 'User authentication required',\n                type: 'error'\n              });\n              return _context8.a(2);\n            case 2:\n              _context8.p = 2;\n              _this9.$store.dispatch('setLoading', true);\n\n              // Create URL for server-side CSV export\n              exportUrl = \"http://localhost/marks-api.php?action=export_marks_csv&course_id=\".concat(_this9.courseId, \"&lecturer_id=\").concat(_this9.userId);\n              console.log('Exporting from URL:', exportUrl);\n\n              // Fetch the CSV data\n              _context8.n = 3;\n              return fetch(exportUrl, {\n                method: 'GET',\n                credentials: 'include',\n                headers: {\n                  'Accept': 'text/csv'\n                }\n              });\n            case 3:\n              response = _context8.v;\n              console.log('Export response:', response.status, response.statusText);\n              if (response.ok) {\n                _context8.n = 4;\n                break;\n              }\n              throw new Error(\"HTTP error! status: \".concat(response.status));\n            case 4:\n              // Check if response is actually CSV\n              contentType = response.headers.get('content-type');\n              if (!(!contentType || !contentType.includes('text/csv'))) {\n                _context8.n = 6;\n                break;\n              }\n              _context8.n = 5;\n              return response.text();\n            case 5:\n              errorText = _context8.v;\n              throw new Error('Server did not return CSV data: ' + errorText);\n            case 6:\n              // Get the filename from Content-Disposition header\n              contentDisposition = response.headers.get('content-disposition');\n              filename = \"\".concat(((_this9$course = _this9.course) === null || _this9$course === void 0 ? void 0 : _this9$course.code) || 'Course', \"_Marks_\").concat(new Date().toISOString().split('T')[0], \".csv\");\n              if (contentDisposition) {\n                filenameMatch = contentDisposition.match(/filename=\"(.+)\"/);\n                if (filenameMatch) {\n                  filename = filenameMatch[1];\n                }\n              }\n\n              // Create blob and download\n              _context8.n = 7;\n              return response.blob();\n            case 7:\n              blob = _context8.v;\n              url = window.URL.createObjectURL(blob);\n              a = document.createElement('a');\n              a.href = url;\n              a.download = filename;\n              a.style.display = 'none';\n              document.body.appendChild(a);\n              a.click();\n              document.body.removeChild(a);\n              window.URL.revokeObjectURL(url);\n              _this9.$store.dispatch('showToast', {\n                message: \"Detailed marks exported successfully as \".concat(filename),\n                type: 'success'\n              });\n              _context8.n = 9;\n              break;\n            case 8:\n              _context8.p = 8;\n              _t7 = _context8.v;\n              console.error('Error exporting marks:', _t7);\n              _this9.$store.dispatch('showToast', {\n                message: 'Error exporting marks: ' + _t7.message,\n                type: 'error'\n              });\n            case 9:\n              _context8.p = 9;\n              _this9.$store.dispatch('setLoading', false);\n              return _context8.f(9);\n            case 10:\n              return _context8.a(2);\n          }\n        }, _callee8, null, [[2, 8, 9, 10]]);\n      }))();\n    },\n    showMarkingGuide: function showMarkingGuide() {\n      var modal = new bootstrap.Modal(document.getElementById('markingGuideModal'));\n      modal.show();\n    },\n    viewStudentDetails: function viewStudentDetails(student) {\n      this.$router.push(\"/lecturer/student/\".concat(student.id));\n    },\n    getStudentInitials: function getStudentInitials(name) {\n      return name.split(' ').map(function (n) {\n        return n.charAt(0);\n      }).join('').toUpperCase();\n    },\n    getGradeBadgeClass: function getGradeBadgeClass(grade) {\n      var gradeClasses = {\n        'A': 'bg-success',\n        'B': 'bg-info',\n        'C': 'bg-warning text-dark',\n        'D': 'bg-secondary',\n        'F': 'bg-danger'\n      };\n      return gradeClasses[grade] || 'bg-light text-dark';\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","bootstrap","name","data","courseId","$route","params","course","students","lecturerCourses","isLoading","unsavedChanges","computed","_objectSpread","currentUser","getUser","created","_this","_asyncToGenerator","_regenerator","m","_callee","w","_context","n","console","log","user","userId","isAuthenticated","$store","getters","$nextTick","loadLecturerCourses","loadCourseData","a","methods","_this2","_callee2","lecturerId","response","_t","_context2","p","Error","fetch","concat","method","credentials","headers","v","status","ok","json","error","courses","dispatch","message","type","_this3","_callee3","_t2","_context3","find","c","id","loadStudentsWithMarks","f","_this4","_callee4","_t3","_context4","map","student","student_id","student_name","email","matric_number","marks","assignment","assignment_mark","quiz","quiz_mark","test","test_mark","final_exam","final_exam_mark","final_mark","final_grade","grade","letter_grade","forEach","calculateFinalMark","finalExam","componentMark","finalMark","calculateGrade","calculateAllFinalMarks","_this5","saveStudentMarks","_this6","_callee5","requestData","_t4","_context5","action","course_id","lecturer_id","body","JSON","stringify","saveAllMarks","_this7","_callee6","_iterator","_step","_t5","_t6","_context6","_createForOfIteratorHelper","s","done","value","e","exportMarksCSV","_this8","_callee7","_this8$course","_this8$course2","_this8$course3","_this8$course4","_this8$course5","timestamp","filename","escapeCSV","csvLines","validFinalMarks","average","highest","lowest","csvContent","blob","url","link","_context7","length","Date","toISOString","split","code","undefined","stringValue","String","includes","replace","push","academic_year","semester","toLocaleDateString","toLocaleTimeString","row","toFixed","join","_s$marks","filter","mark","isNaN","reduce","sum","Math","max","apply","_toConsumableArray","min","substring","Blob","size","window","URL","createObjectURL","document","createElement","href","download","style","display","appendChild","click","removeChild","setTimeout","revokeObjectURL","exportMarksServer","_this9","_callee8","_this9$course","exportUrl","contentType","errorText","contentDisposition","filenameMatch","_t7","_context8","statusText","get","text","match","showMarkingGuide","modal","Modal","getElementById","show","viewStudentDetails","$router","getStudentInitials","charAt","toUpperCase","getGradeBadgeClass","gradeClasses"],"sources":["C:\\Users\\ansmu\\Desktop\\Web\\course-mark-management\\frontend\\src\\views\\lecturer\\MarksManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"marks-management\">\r\n    <!-- Header -->\r\n    <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n      <div>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol class=\"breadcrumb\">\r\n            <li class=\"breadcrumb-item\">\r\n              <router-link to=\"/lecturer/dashboard\">Dashboard</router-link>\r\n            </li>\r\n            <li class=\"breadcrumb-item\">\r\n              <router-link :to=\"`/lecturer/course/${courseId}`\">{{ course?.code }}</router-link>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\" aria-current=\"page\">Marks Management</li>\r\n          </ol>\r\n        </nav>\r\n        <h1 class=\"mb-2\">Marks Management</h1>\r\n        <p class=\"text-muted\">\r\n          {{ course?.code }} - {{ course?.name }} | {{ course?.semester }}\r\n        </p>\r\n      </div>\r\n      <div class=\"btn-group\">\r\n        <button class=\"btn btn-success\" @click=\"saveAllMarks\" :disabled=\"isLoading\">\r\n          <i class=\"fas fa-save me-2\"></i>Save All Changes\r\n        </button>\r\n        <button class=\"btn btn-outline-primary\" @click=\"exportMarksCSV\" :disabled=\"isLoading || !courseId\">\r\n          <i class=\"fas fa-file-export me-2\"></i>Export Marks CSV\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Course Selection -->\r\n    <div class=\"card mb-4\">\r\n      <div class=\"card-body\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-6\">\r\n            <label for=\"courseSelect\" class=\"form-label\">Select Course:</label>\r\n            <select \r\n              id=\"courseSelect\" \r\n              v-model=\"courseId\" \r\n              @change=\"loadCourseData\"\r\n              class=\"form-select\"\r\n            >\r\n              <option value=\"\">Select a course...</option>\r\n              <option \r\n                v-for=\"course in lecturerCourses\" \r\n                :key=\"course.id\" \r\n                :value=\"course.id\"\r\n              >\r\n                {{ course.code }} - {{ course.name }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <label class=\"form-label\">Assessment Breakdown:</label>\r\n            <div class=\"d-flex gap-3\">\r\n              <div class=\"badge bg-primary p-2\">\r\n                <i class=\"fas fa-tasks me-2\"></i>Components: 70%\r\n              </div>\r\n              <div class=\"badge bg-warning p-2\">\r\n                <i class=\"fas fa-graduation-cap me-2\"></i>Final Exam: 30%\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"isLoading\" class=\"text-center my-5\">\r\n      <div class=\"spinner-border text-primary\" role=\"status\">\r\n        <span class=\"visually-hidden\">Loading...</span>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-else-if=\"!courseId\" class=\"text-center my-5\">\r\n      <i class=\"fas fa-book-open text-muted mb-3\" style=\"font-size: 3rem;\"></i>\r\n      <h5 class=\"text-muted\">Select a Course</h5>\r\n      <p class=\"text-muted\">Choose a course from the dropdown above to manage student marks.</p>\r\n    </div>\r\n\r\n    <div v-else-if=\"students.length === 0\" class=\"text-center my-5\">\r\n      <i class=\"fas fa-users text-muted mb-3\" style=\"font-size: 3rem;\"></i>\r\n      <h5 class=\"text-muted\">No Students Enrolled</h5>\r\n      <p class=\"text-muted\">There are no students enrolled in this course yet.</p>\r\n    </div>\r\n\r\n    <!-- Marks Table -->\r\n    <div v-else class=\"card\">\r\n      <div class=\"card-header bg-light\">\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n          <h5 class=\"mb-0\">Student Marks</h5>\r\n          <div class=\"d-flex gap-2\">\r\n            <button class=\"btn btn-sm btn-outline-success\" @click=\"calculateAllFinalMarks\">\r\n              <i class=\"fas fa-calculator me-2\"></i>Calculate Final Marks\r\n            </button>\r\n            <button class=\"btn btn-sm btn-outline-info\" @click=\"showMarkingGuide\">\r\n              <i class=\"fas fa-info-circle me-2\"></i>Marking Guide\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body p-0\">\r\n        <div class=\"table-responsive\">\r\n          <table class=\"table table-hover mb-0\">\r\n            <thead class=\"table-light\">\r\n              <tr>\r\n                <th rowspan=\"2\" class=\"align-middle\">Student</th>\r\n                <th rowspan=\"2\" class=\"align-middle\">Matric No.</th>\r\n                <th colspan=\"3\" class=\"text-center bg-primary text-white\">Components (70%)</th>\r\n                <th rowspan=\"2\" class=\"align-middle bg-warning text-dark\">Final Exam (30%)</th>\r\n                <th rowspan=\"2\" class=\"align-middle bg-success text-white\">Final Mark</th>\r\n                <th rowspan=\"2\" class=\"align-middle\">Grade</th>\r\n                <th rowspan=\"2\" class=\"align-middle\">Actions</th>\r\n              </tr>\r\n              <tr>\r\n                <th class=\"bg-primary text-white\">Assignment</th>\r\n                <th class=\"bg-primary text-white\">Quiz</th>\r\n                <th class=\"bg-primary text-white\">Test</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr v-for=\"student in students\" :key=\"student.id\">\r\n                <td>\r\n                  <div class=\"d-flex align-items-center\">\r\n                    <div class=\"avatar avatar-sm me-3\">\r\n                      {{ getStudentInitials(student.name) }}\r\n                    </div>\r\n                    <div>\r\n                      <strong>{{ student.name }}</strong>\r\n                      <br>\r\n                      <small class=\"text-muted\">{{ student.email }}</small>\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n                <td>{{ student.matric_number || 'N/A' }}</td>\r\n                \r\n                <!-- Component Marks (70%) -->\r\n                <td>\r\n                  <input \r\n                    type=\"number\" \r\n                    class=\"form-control form-control-sm\"\r\n                    v-model.number=\"student.marks.assignment\"\r\n                    @input=\"calculateFinalMark(student)\"\r\n                    min=\"0\" \r\n                    max=\"100\"\r\n                    placeholder=\"0-100\"\r\n                  >\r\n                </td>\r\n                <td>\r\n                  <input \r\n                    type=\"number\" \r\n                    class=\"form-control form-control-sm\"\r\n                    v-model.number=\"student.marks.quiz\"\r\n                    @input=\"calculateFinalMark(student)\"\r\n                    min=\"0\" \r\n                    max=\"100\"\r\n                    placeholder=\"0-100\"\r\n                  >\r\n                </td>\r\n                <td>\r\n                  <input \r\n                    type=\"number\" \r\n                    class=\"form-control form-control-sm\"\r\n                    v-model.number=\"student.marks.test\"\r\n                    @input=\"calculateFinalMark(student)\"\r\n                    min=\"0\" \r\n                    max=\"100\"\r\n                    placeholder=\"0-100\"\r\n                  >\r\n                </td>\r\n                \r\n                <!-- Final Exam (30%) -->\r\n                <td>\r\n                  <input \r\n                    type=\"number\" \r\n                    class=\"form-control form-control-sm\"\r\n                    v-model.number=\"student.marks.final_exam\"\r\n                    @input=\"calculateFinalMark(student)\"\r\n                    min=\"0\" \r\n                    max=\"100\"\r\n                    placeholder=\"0-100\"\r\n                  >\r\n                </td>\r\n                \r\n                <!-- Final Mark -->\r\n                <td>\r\n                  <span class=\"badge bg-success fs-6\">\r\n                    {{ student.marks.final_mark ? student.marks.final_mark.toFixed(1) : 'N/A' }}\r\n                  </span>\r\n                </td>\r\n                \r\n                <!-- Grade -->\r\n                <td>\r\n                  <span class=\"badge\" :class=\"getGradeBadgeClass(student.marks.grade)\">\r\n                    {{ student.marks.grade || 'N/A' }}\r\n                  </span>\r\n                </td>\r\n                \r\n                <!-- Actions -->\r\n                <td>\r\n                  <div class=\"btn-group btn-group-sm\">\r\n                    <button \r\n                      class=\"btn btn-outline-primary\"\r\n                      @click=\"viewStudentDetails(student)\"\r\n                      title=\"View Details\"\r\n                    >\r\n                      <i class=\"fas fa-eye\"></i>\r\n                    </button>\r\n                    <button \r\n                      class=\"btn btn-outline-success\"\r\n                      @click=\"saveStudentMarks(student)\"\r\n                      title=\"Save Marks\"\r\n                    >\r\n                      <i class=\"fas fa-save\"></i>\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Marking Guide Modal -->\r\n    <div class=\"modal fade\" id=\"markingGuideModal\" tabindex=\"-1\" aria-labelledby=\"markingGuideModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"markingGuideModalLabel\">Marking Guide</h5>\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <h6>Assessment Breakdown</h6>\r\n                <ul class=\"list-group list-group-flush\">\r\n                  <li class=\"list-group-item d-flex justify-content-between\">\r\n                    <span>Assignment</span>\r\n                    <span class=\"badge bg-primary\">25%</span>\r\n                  </li>\r\n                  <li class=\"list-group-item d-flex justify-content-between\">\r\n                    <span>Quiz</span>\r\n                    <span class=\"badge bg-primary\">20%</span>\r\n                  </li>\r\n                  <li class=\"list-group-item d-flex justify-content-between\">\r\n                    <span>Test</span>\r\n                    <span class=\"badge bg-primary\">25%</span>\r\n                  </li>\r\n                  <li class=\"list-group-item d-flex justify-content-between\">\r\n                    <span><strong>Components Total</strong></span>\r\n                    <span class=\"badge bg-primary\"><strong>70%</strong></span>\r\n                  </li>\r\n                  <li class=\"list-group-item d-flex justify-content-between\">\r\n                    <span><strong>Final Exam</strong></span>\r\n                    <span class=\"badge bg-warning text-dark\"><strong>30%</strong></span>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <h6>Grading Scale</h6>\r\n                <ul class=\"list-group list-group-flush\">\r\n                  <li class=\"list-group-item d-flex justify-content-between\">\r\n                    <span>A</span>\r\n                    <span>80-100</span>\r\n                  </li>\r\n                  <li class=\"list-group-item d-flex justify-content-between\">\r\n                    <span>B</span>\r\n                    <span>70-79</span>\r\n                  </li>\r\n                  <li class=\"list-group-item d-flex justify-content-between\">\r\n                    <span>C</span>\r\n                    <span>60-69</span>\r\n                  </li>\r\n                  <li class=\"list-group-item d-flex justify-content-between\">\r\n                    <span>D</span>\r\n                    <span>50-59</span>\r\n                  </li>\r\n                  <li class=\"list-group-item d-flex justify-content-between\">\r\n                    <span>F</span>\r\n                    <span>0-49</span>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div class=\"mt-3\">\r\n              <h6>Calculation Formula</h6>\r\n              <div class=\"alert alert-info\">\r\n                <strong>Final Grade = (Assignment × 25%) + (Quiz × 20%) + (Test × 25%) + (Final Exam × 30%)</strong>\r\n                <br><small class=\"text-muted\">Components (Assignment + Quiz + Test) contribute 70% total, Final Exam contributes 30%</small>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex';\r\nimport * as bootstrap from 'bootstrap';\r\n\r\nexport default {\r\n  name: 'MarksManagement',\r\n  data() {\r\n    return {\r\n      courseId: this.$route.params.courseId || '',\r\n      course: null,\r\n      students: [],\r\n      lecturerCourses: [],\r\n      isLoading: false,\r\n      unsavedChanges: false\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters('auth', ['getUser', 'userId']),\r\n    currentUser() {\r\n      return this.getUser;\r\n    }\r\n  },\r\n  async created() {\r\n    console.log('MarksManagement component created');\r\n    console.log('Initial auth state:', {\r\n      user: this.getUser,\r\n      userId: this.userId,\r\n      isAuthenticated: this.$store.getters['auth/isAuthenticated']\r\n    });\r\n    \r\n    // Wait a bit for auth to be initialized if needed\r\n    await this.$nextTick();\r\n    \r\n    await this.loadLecturerCourses();\r\n    if (this.courseId) {\r\n      await this.loadCourseData();\r\n    }\r\n  },\r\n  methods: {\r\n    async loadLecturerCourses() {\r\n      try {\r\n        console.log('Loading lecturer courses...');\r\n        console.log('User ID:', this.userId);\r\n        console.log('Current user:', this.currentUser);\r\n        \r\n        if (!this.userId) {\r\n          throw new Error('User not authenticated');\r\n        }\r\n        \r\n        const lecturerId = this.userId;\r\n        \r\n        const response = await fetch(`http://localhost/marks-api.php?action=lecturer_courses&lecturer_id=${lecturerId}`, {\r\n          method: 'GET',\r\n          credentials: 'include',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n\r\n        console.log('API Response status:', response.status);\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log('API Response data:', data);\r\n        \r\n        if (data.error) {\r\n          throw new Error(data.error);\r\n        }\r\n\r\n        this.lecturerCourses = data.courses || [];\r\n        console.log('Loaded lecturer courses:', this.lecturerCourses);\r\n\r\n      } catch (error) {\r\n        console.error('Error loading lecturer courses:', error);\r\n        this.$store.dispatch('showToast', {\r\n          message: 'Error loading courses: ' + error.message,\r\n          type: 'error'\r\n        });\r\n        this.lecturerCourses = [];\r\n      }\r\n    },\r\n\r\n    async loadCourseData() {\r\n      if (!this.courseId) return;\r\n      \r\n      this.isLoading = true;\r\n      try {\r\n        // Find the selected course\r\n        this.course = this.lecturerCourses.find(c => c.id == this.courseId);\r\n        \r\n        // Load students for this course with their marks\r\n        await this.loadStudentsWithMarks();\r\n        \r\n      } catch (error) {\r\n        console.error('Error loading course data:', error);\r\n        this.$store.dispatch('showToast', {\r\n          message: 'Error loading course data',\r\n          type: 'error'\r\n        });\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n\r\n    async loadStudentsWithMarks() {\r\n      try {\r\n        // Make API call to get students with marks for this course\r\n        const response = await fetch(`http://localhost/marks-api.php?action=course_students_marks&course_id=${this.courseId}`, {\r\n          method: 'GET',\r\n          credentials: 'include',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        \r\n        if (data.error) {\r\n          throw new Error(data.error);\r\n        }\r\n\r\n        // Map the API response to the expected format\r\n        this.students = data.students.map(student => ({\r\n          id: student.student_id,\r\n          name: student.student_name,\r\n          email: student.email || 'N/A',\r\n          matric_number: student.matric_number,\r\n          marks: {\r\n            assignment: student.assignment_mark || 0,\r\n            quiz: student.quiz_mark || 0,\r\n            test: student.test_mark || 0,\r\n            final_exam: student.final_exam_mark || 0,\r\n            final_mark: student.final_grade || 0,\r\n            grade: student.letter_grade || 'F'\r\n          }\r\n        }));\r\n\r\n        // Calculate final marks for all students to ensure they're up to date\r\n        this.students.forEach(student => {\r\n          this.calculateFinalMark(student);\r\n        });\r\n\r\n        console.log('Loaded students with marks:', this.students);\r\n\r\n      } catch (error) {\r\n        console.error('Error loading students with marks:', error);\r\n        this.$store.dispatch('showToast', {\r\n          message: 'Error loading student marks: ' + error.message,\r\n          type: 'error'\r\n        });\r\n        \r\n        // Fallback to empty array\r\n        this.students = [];\r\n      }\r\n    },\r\n\r\n    calculateFinalMark(student) {\r\n      const marks = student.marks;\r\n      \r\n      // Check if all marks are entered\r\n      const assignment = marks.assignment || 0;\r\n      const quiz = marks.quiz || 0;\r\n      const test = marks.test || 0;\r\n      const finalExam = marks.final_exam || 0;\r\n      \r\n      // Calculate final mark: Components (70%) + Final Exam (30%)\r\n      // Components breakdown: Assignment (25%) + Quiz (20%) + Test (25%)\r\n      const componentMark = (assignment * 0.25) + (quiz * 0.20) + (test * 0.25);\r\n      const finalMark = componentMark + (finalExam * 0.30);\r\n      \r\n      marks.final_mark = finalMark;\r\n      marks.grade = this.calculateGrade(finalMark);\r\n      \r\n      this.unsavedChanges = true;\r\n    },\r\n\r\n    calculateGrade(finalMark) {\r\n      if (finalMark >= 80) return 'A';\r\n      if (finalMark >= 70) return 'B';\r\n      if (finalMark >= 60) return 'C';\r\n      if (finalMark >= 50) return 'D';\r\n      return 'F';\r\n    },\r\n\r\n    calculateAllFinalMarks() {\r\n      this.students.forEach(student => {\r\n        this.calculateFinalMark(student);\r\n      });\r\n      \r\n      this.$store.dispatch('showToast', {\r\n        message: 'Final marks calculated for all students',\r\n        type: 'success'\r\n      });\r\n    },\r\n\r\n    async saveStudentMarks(student) {\r\n      try {\r\n        if (!this.userId) {\r\n          throw new Error('User not authenticated');\r\n        }\r\n        \r\n        const lecturerId = this.userId;\r\n        \r\n        const requestData = {\r\n          action: 'save_marks',\r\n          student_id: student.id,\r\n          course_id: this.courseId,\r\n          lecturer_id: lecturerId,\r\n          marks: {\r\n            assignment: student.marks.assignment || 0,\r\n            quiz: student.marks.quiz || 0,\r\n            test: student.marks.test || 0,\r\n            final_exam: student.marks.final_exam || 0\r\n          }\r\n        };\r\n\r\n        const response = await fetch('http://localhost/marks-api.php', {\r\n          method: 'POST',\r\n          credentials: 'include',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(requestData)\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        \r\n        if (data.error) {\r\n          throw new Error(data.error);\r\n        }\r\n\r\n        console.log('Marks saved successfully for student:', student.name);\r\n        \r\n        this.$store.dispatch('showToast', {\r\n          message: `Marks saved for ${student.name}`,\r\n          type: 'success'\r\n        });\r\n\r\n      } catch (error) {\r\n        console.error('Error saving student marks:', error);\r\n        this.$store.dispatch('showToast', {\r\n          message: `Error saving marks for ${student.name}: ${error.message}`,\r\n          type: 'error'\r\n        });\r\n        throw error; // Re-throw so saveAllMarks can handle it\r\n      }\r\n    },\r\n\r\n    async saveAllMarks() {\r\n      if (!this.unsavedChanges) {\r\n        this.$store.dispatch('showToast', {\r\n          message: 'No changes to save',\r\n          type: 'info'\r\n        });\r\n        return;\r\n      }\r\n\r\n      this.isLoading = true;\r\n      try {\r\n        // Save all student marks to API\r\n        for (const student of this.students) {\r\n          await this.saveStudentMarks(student);\r\n        }\r\n        \r\n        this.unsavedChanges = false;\r\n        this.$store.dispatch('showToast', {\r\n          message: 'All marks saved successfully',\r\n          type: 'success'\r\n        });\r\n      } catch (error) {\r\n        console.error('Error saving all marks:', error);\r\n        this.$store.dispatch('showToast', {\r\n          message: 'Error saving marks',\r\n          type: 'error'\r\n        });\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n\r\n    async exportMarksCSV() {\r\n      console.log('Export CSV clicked');\r\n      \r\n      // Validation checks\r\n      if (!this.courseId) {\r\n        this.$store.dispatch('showToast', {\r\n          message: 'Please select a course first',\r\n          type: 'warning'\r\n        });\r\n        return;\r\n      }\r\n\r\n      if (!this.userId) {\r\n        this.$store.dispatch('showToast', {\r\n          message: 'User authentication required',\r\n          type: 'error'\r\n        });\r\n        return;\r\n      }\r\n\r\n      if (!this.students || this.students.length === 0) {\r\n        this.$store.dispatch('showToast', {\r\n          message: 'No student data available to export',\r\n          type: 'warning'\r\n        });\r\n        return;\r\n      }\r\n\r\n      try {\r\n        console.log('Creating CSV export...');\r\n        \r\n        // Generate filename\r\n        const timestamp = new Date().toISOString().split('T')[0];\r\n        const filename = `${this.course?.code || 'Course'}_Marks_${timestamp}.csv`;\r\n        \r\n        // Helper function to escape CSV values\r\n        const escapeCSV = (value) => {\r\n          if (value === null || value === undefined) return '';\r\n          const stringValue = String(value);\r\n          if (stringValue.includes(',') || stringValue.includes('\"') || stringValue.includes('\\n')) {\r\n            return '\"' + stringValue.replace(/\"/g, '\"\"') + '\"';\r\n          }\r\n          return stringValue;\r\n        };\r\n\r\n        // Build CSV content\r\n        const csvLines = [];\r\n        \r\n        // Course information header\r\n        csvLines.push('Course Information');\r\n        csvLines.push(`Course Code,${escapeCSV(this.course?.code || '')}`);\r\n        csvLines.push(`Course Name,${escapeCSV(this.course?.name || '')}`);\r\n        csvLines.push(`Academic Year,${escapeCSV(this.course?.academic_year || '')}`);\r\n        csvLines.push(`Semester,${escapeCSV(this.course?.semester || '')}`);\r\n        csvLines.push(`Export Date,${new Date().toLocaleDateString()}`);\r\n        csvLines.push(`Export Time,${new Date().toLocaleTimeString()}`);\r\n        csvLines.push(`Total Students,${this.students.length}`);\r\n        csvLines.push(''); // Empty line\r\n        \r\n        // Column headers\r\n        csvLines.push('Student Name,Matric Number,Assignment (25%),Quiz (20%),Test (25%),Final Exam (30%),Final Mark,Letter Grade');\r\n        \r\n        // Student data\r\n        this.students.forEach(student => {\r\n          const marks = student.marks || {};\r\n          const row = [\r\n            escapeCSV(student.name),\r\n            escapeCSV(student.matric_number || 'N/A'),\r\n            marks.assignment || '',\r\n            marks.quiz || '',\r\n            marks.test || '',\r\n            marks.final_exam || '',\r\n            marks.final_mark ? marks.final_mark.toFixed(2) : '',\r\n            escapeCSV(marks.grade || '')\r\n          ];\r\n          csvLines.push(row.join(','));\r\n        });\r\n\r\n        // Add summary statistics if we have marks\r\n        const validFinalMarks = this.students\r\n          .map(s => s.marks?.final_mark)\r\n          .filter(mark => mark !== null && mark !== undefined && !isNaN(mark));\r\n        \r\n        if (validFinalMarks.length > 0) {\r\n          const average = validFinalMarks.reduce((sum, mark) => sum + mark, 0) / validFinalMarks.length;\r\n          const highest = Math.max(...validFinalMarks);\r\n          const lowest = Math.min(...validFinalMarks);\r\n          \r\n          csvLines.push(''); // Empty line\r\n          csvLines.push('SUMMARY STATISTICS');\r\n          csvLines.push(`Students with Marks,${validFinalMarks.length}`);\r\n          csvLines.push(`Class Average,${average.toFixed(2)}`);\r\n          csvLines.push(`Highest Mark,${highest.toFixed(2)}`);\r\n          csvLines.push(`Lowest Mark,${lowest.toFixed(2)}`);\r\n        }\r\n\r\n        // Create CSV content\r\n        const csvContent = csvLines.join('\\n');\r\n        \r\n        console.log('CSV content created, length:', csvContent.length);\r\n        console.log('CSV preview:', csvContent.substring(0, 200));\r\n        \r\n        // Create and download file\r\n        const blob = new Blob([csvContent], { \r\n          type: 'text/csv;charset=utf-8' \r\n        });\r\n        \r\n        console.log('Blob created, size:', blob.size);\r\n        \r\n        // Create download link\r\n        const url = window.URL.createObjectURL(blob);\r\n        const link = document.createElement('a');\r\n        link.href = url;\r\n        link.download = filename;\r\n        link.style.display = 'none';\r\n        \r\n        // Add to document, click, and remove\r\n        document.body.appendChild(link);\r\n        console.log('Triggering download...');\r\n        link.click();\r\n        document.body.removeChild(link);\r\n        \r\n        // Clean up\r\n        setTimeout(() => {\r\n          window.URL.revokeObjectURL(url);\r\n        }, 100);\r\n        \r\n        console.log('Download completed');\r\n        \r\n        this.$store.dispatch('showToast', {\r\n          message: `Marks exported successfully as ${filename}`,\r\n          type: 'success'\r\n        });\r\n        \r\n      } catch (error) {\r\n        console.error('Export error:', error);\r\n        this.$store.dispatch('showToast', {\r\n          message: 'Error exporting marks: ' + error.message,\r\n          type: 'error'\r\n        });\r\n      }\r\n    },\r\n\r\n    async exportMarksServer() {\r\n      if (!this.courseId) {\r\n        this.$store.dispatch('showToast', {\r\n          message: 'Please select a course first',\r\n          type: 'warning'\r\n        });\r\n        return;\r\n      }\r\n\r\n      if (!this.userId) {\r\n        this.$store.dispatch('showToast', {\r\n          message: 'User authentication required',\r\n          type: 'error'\r\n        });\r\n        return;\r\n      }\r\n\r\n      try {\r\n        this.$store.dispatch('setLoading', true);\r\n        \r\n        // Create URL for server-side CSV export\r\n        const exportUrl = `http://localhost/marks-api.php?action=export_marks_csv&course_id=${this.courseId}&lecturer_id=${this.userId}`;\r\n        \r\n        console.log('Exporting from URL:', exportUrl);\r\n        \r\n        // Fetch the CSV data\r\n        const response = await fetch(exportUrl, {\r\n          method: 'GET',\r\n          credentials: 'include',\r\n          headers: {\r\n            'Accept': 'text/csv'\r\n          }\r\n        });\r\n\r\n        console.log('Export response:', response.status, response.statusText);\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n\r\n        // Check if response is actually CSV\r\n        const contentType = response.headers.get('content-type');\r\n        if (!contentType || !contentType.includes('text/csv')) {\r\n          const errorText = await response.text();\r\n          throw new Error('Server did not return CSV data: ' + errorText);\r\n        }\r\n\r\n        // Get the filename from Content-Disposition header\r\n        const contentDisposition = response.headers.get('content-disposition');\r\n        let filename = `${this.course?.code || 'Course'}_Marks_${new Date().toISOString().split('T')[0]}.csv`;\r\n        \r\n        if (contentDisposition) {\r\n          const filenameMatch = contentDisposition.match(/filename=\"(.+)\"/);\r\n          if (filenameMatch) {\r\n            filename = filenameMatch[1];\r\n          }\r\n        }\r\n\r\n        // Create blob and download\r\n        const blob = await response.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement('a');\r\n        a.href = url;\r\n        a.download = filename;\r\n        a.style.display = 'none';\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        document.body.removeChild(a);\r\n        window.URL.revokeObjectURL(url);\r\n        \r\n        this.$store.dispatch('showToast', {\r\n          message: `Detailed marks exported successfully as ${filename}`,\r\n          type: 'success'\r\n        });\r\n      } catch (error) {\r\n        console.error('Error exporting marks:', error);\r\n        this.$store.dispatch('showToast', {\r\n          message: 'Error exporting marks: ' + error.message,\r\n          type: 'error'\r\n        });\r\n      } finally {\r\n        this.$store.dispatch('setLoading', false);\r\n      }\r\n    },\r\n\r\n    showMarkingGuide() {\r\n      const modal = new bootstrap.Modal(document.getElementById('markingGuideModal'));\r\n      modal.show();\r\n    },\r\n\r\n    viewStudentDetails(student) {\r\n      this.$router.push(`/lecturer/student/${student.id}`);\r\n    },\r\n\r\n    getStudentInitials(name) {\r\n      return name.split(' ').map(n => n.charAt(0)).join('').toUpperCase();\r\n    },\r\n\r\n    getGradeBadgeClass(grade) {\r\n      const gradeClasses = {\r\n        'A': 'bg-success',\r\n        'B': 'bg-info',\r\n        'C': 'bg-warning text-dark',\r\n        'D': 'bg-secondary',\r\n        'F': 'bg-danger'\r\n      };\r\n      return gradeClasses[grade] || 'bg-light text-dark';\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.marks-management h1 {\r\n  color: #2c3e50;\r\n  font-weight: 700;\r\n}\r\n\r\n.avatar {\r\n  width: 40px;\r\n  height: 40px;\r\n  background: linear-gradient(45deg, #007bff, #0056b3);\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: white;\r\n  font-weight: bold;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.table input.form-control-sm {\r\n  width: 80px;\r\n  text-align: center;\r\n}\r\n\r\n.table th {\r\n  font-weight: 600;\r\n  border-top: none;\r\n}\r\n\r\n.table td {\r\n  vertical-align: middle;\r\n}\r\n\r\n.card {\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  border: none;\r\n  border-radius: 10px;\r\n}\r\n\r\n.breadcrumb-item a {\r\n  text-decoration: none;\r\n  color: #007bff;\r\n}\r\n\r\n.breadcrumb-item a:hover {\r\n  color: #0056b3;\r\n}\r\n\r\n.badge.fs-6 {\r\n  font-size: 0.9rem !important;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}