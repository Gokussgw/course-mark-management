{"ast":null,"code":"import _regenerator from \"C:/Users/ansmu/Desktop/Web/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _asyncToGenerator from \"C:/Users/ansmu/Desktop/Web/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport axios from 'axios';\nexport default {\n  namespaced: true,\n  state: {\n    token: localStorage.getItem('token') || null,\n    user: JSON.parse(localStorage.getItem('user')) || null\n  },\n  getters: {\n    isAuthenticated: function isAuthenticated(state) {\n      return !!state.token;\n    },\n    getUser: function getUser(state) {\n      return state.user;\n    },\n    userRole: function userRole(state) {\n      return state.user ? state.user.role : null;\n    },\n    userId: function userId(state) {\n      return state.user ? state.user.id : null;\n    }\n  },\n  mutations: {\n    SET_TOKEN: function SET_TOKEN(state, token) {\n      state.token = token;\n    },\n    SET_USER: function SET_USER(state, user) {\n      state.user = user;\n    },\n    CLEAR_AUTH: function CLEAR_AUTH(state) {\n      state.token = null;\n      state.user = null;\n    }\n  },\n  actions: {\n    login: function login(_ref, credentials) {\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n        var commit, dispatch, user, token, errorMsg, _t;\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.n) {\n            case 0:\n              commit = _ref.commit, dispatch = _ref.dispatch;\n              _context.p = 1;\n              dispatch('setLoading', true, {\n                root: true\n              });\n\n              // Temporary: simulate successful login for testing\n              console.log('Simulating login for:', credentials.email);\n              if (!(credentials.email === 'admin@example.com' && credentials.password === 'password')) {\n                _context.n = 2;\n                break;\n              }\n              user = {\n                id: 1,\n                name: 'Admin User',\n                email: 'admin@example.com',\n                role: 'admin'\n              };\n              _context.n = 5;\n              break;\n            case 2:\n              if (!(credentials.email === 'lecturer1@example.com' && credentials.password === 'password')) {\n                _context.n = 3;\n                break;\n              }\n              user = {\n                id: 2,\n                name: 'Lecturer One',\n                email: 'lecturer1@example.com',\n                role: 'lecturer'\n              };\n              _context.n = 5;\n              break;\n            case 3:\n              if (!(credentials.email === 'student1@example.com' && credentials.password === 'password')) {\n                _context.n = 4;\n                break;\n              }\n              user = {\n                id: 4,\n                name: 'Student One',\n                email: 'student1@example.com',\n                role: 'student'\n              };\n              _context.n = 5;\n              break;\n            case 4:\n              throw new Error('Invalid email or password');\n            case 5:\n              token = 'temp-token-' + user.id; // Save to localStorage\n              localStorage.setItem('token', token);\n              localStorage.setItem('user', JSON.stringify(user));\n\n              // Update state\n              commit('SET_TOKEN', token);\n              commit('SET_USER', user);\n              return _context.a(2, user);\n            case 6:\n              _context.p = 6;\n              _t = _context.v;\n              errorMsg = _t.message || 'Login failed';\n              dispatch('setError', errorMsg, {\n                root: true\n              });\n              throw new Error(errorMsg);\n            case 7:\n              _context.p = 7;\n              dispatch('setLoading', false, {\n                root: true\n              });\n              return _context.f(7);\n            case 8:\n              return _context.a(2);\n          }\n        }, _callee, null, [[1, 6, 7, 8]]);\n      }))();\n    },\n    register: function register(_ref2, userData) {\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n        var dispatch, response, _error$response, errorMsg, _t2;\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              dispatch = _ref2.dispatch;\n              _context2.p = 1;\n              dispatch('setLoading', true, {\n                root: true\n              });\n              _context2.n = 2;\n              return axios.post('/api/auth/register', userData);\n            case 2:\n              response = _context2.v;\n              return _context2.a(2, response.data);\n            case 3:\n              _context2.p = 3;\n              _t2 = _context2.v;\n              errorMsg = ((_error$response = _t2.response) === null || _error$response === void 0 || (_error$response = _error$response.data) === null || _error$response === void 0 ? void 0 : _error$response.error) || 'Registration failed';\n              dispatch('setError', errorMsg, {\n                root: true\n              });\n              throw new Error(errorMsg);\n            case 4:\n              _context2.p = 4;\n              dispatch('setLoading', false, {\n                root: true\n              });\n              return _context2.f(4);\n            case 5:\n              return _context2.a(2);\n          }\n        }, _callee2, null, [[1, 3, 4, 5]]);\n      }))();\n    },\n    logout: function logout(_ref3) {\n      var commit = _ref3.commit;\n      // Clear localStorage\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n\n      // Update state\n      commit('CLEAR_AUTH');\n    },\n    checkAuth: function checkAuth(_ref4) {\n      var commit = _ref4.commit;\n      var token = localStorage.getItem('token');\n      var user = JSON.parse(localStorage.getItem('user'));\n      if (token && user) {\n        commit('SET_TOKEN', token);\n        commit('SET_USER', user);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","namespaced","state","token","localStorage","getItem","user","JSON","parse","getters","isAuthenticated","getUser","userRole","role","userId","id","mutations","SET_TOKEN","SET_USER","CLEAR_AUTH","actions","login","_ref","credentials","_asyncToGenerator","_regenerator","m","_callee","commit","dispatch","errorMsg","_t","w","_context","n","p","root","console","log","email","password","name","Error","setItem","stringify","a","v","message","f","register","_ref2","userData","_callee2","response","_error$response","_t2","_context2","post","data","error","logout","_ref3","removeItem","checkAuth","_ref4"],"sources":["C:/Users/ansmu/Desktop/Web/course-mark-management/frontend/src/store/modules/auth.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state: {\r\n    token: localStorage.getItem('token') || null,\r\n    user: JSON.parse(localStorage.getItem('user')) || null\r\n  },\r\n  getters: {\r\n    isAuthenticated: state => !!state.token,\r\n    getUser: state => state.user,\r\n    userRole: state => state.user ? state.user.role : null,\r\n    userId: state => state.user ? state.user.id : null\r\n  },\r\n  mutations: {\r\n    SET_TOKEN(state, token) {\r\n      state.token = token;\r\n    },\r\n    SET_USER(state, user) {\r\n      state.user = user;\r\n    },\r\n    CLEAR_AUTH(state) {\r\n      state.token = null;\r\n      state.user = null;\r\n    }\r\n  },\r\n  actions: {\r\n    async login({ commit, dispatch }, credentials) {\r\n      try {\r\n        dispatch('setLoading', true, { root: true });\r\n        \r\n        // Temporary: simulate successful login for testing\r\n        console.log('Simulating login for:', credentials.email);\r\n        \r\n        let user;\r\n        if (credentials.email === 'admin@example.com' && credentials.password === 'password') {\r\n          user = { id: 1, name: 'Admin User', email: 'admin@example.com', role: 'admin' };\r\n        } else if (credentials.email === 'lecturer1@example.com' && credentials.password === 'password') {\r\n          user = { id: 2, name: 'Lecturer One', email: 'lecturer1@example.com', role: 'lecturer' };\r\n        } else if (credentials.email === 'student1@example.com' && credentials.password === 'password') {\r\n          user = { id: 4, name: 'Student One', email: 'student1@example.com', role: 'student' };\r\n        } else {\r\n          throw new Error('Invalid email or password');\r\n        }\r\n        \r\n        const token = 'temp-token-' + user.id;\r\n        \r\n        // Save to localStorage\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        \r\n        // Update state\r\n        commit('SET_TOKEN', token);\r\n        commit('SET_USER', user);\r\n        \r\n        return user;\r\n        \r\n        // TODO: Replace with real API call when backend is fixed\r\n        // const response = await axios.post('/api/auth/login', {\r\n        //   email: credentials.email,\r\n        //   password: credentials.password\r\n        // });\r\n        // const { token, user } = response.data;\r\n      } catch (error) {\r\n        const errorMsg = error.message || 'Login failed';\r\n        dispatch('setError', errorMsg, { root: true });\r\n        throw new Error(errorMsg);\r\n      } finally {\r\n        dispatch('setLoading', false, { root: true });\r\n      }\r\n    },\r\n    \r\n    async register({ dispatch }, userData) {\r\n      try {\r\n        dispatch('setLoading', true, { root: true });\r\n        const response = await axios.post('/api/auth/register', userData);\r\n        return response.data;\r\n      } catch (error) {\r\n        const errorMsg = error.response?.data?.error || 'Registration failed';\r\n        dispatch('setError', errorMsg, { root: true });\r\n        throw new Error(errorMsg);\r\n      } finally {\r\n        dispatch('setLoading', false, { root: true });\r\n      }\r\n    },\r\n    \r\n    logout({ commit }) {\r\n      // Clear localStorage\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      \r\n      // Update state\r\n      commit('CLEAR_AUTH');\r\n    },\r\n    \r\n    checkAuth({ commit }) {\r\n      const token = localStorage.getItem('token');\r\n      const user = JSON.parse(localStorage.getItem('user'));\r\n      \r\n      if (token && user) {\r\n        commit('SET_TOKEN', token);\r\n        commit('SET_USER', user);\r\n      }\r\n    }\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}