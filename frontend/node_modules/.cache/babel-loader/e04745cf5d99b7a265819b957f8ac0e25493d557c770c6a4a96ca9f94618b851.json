{"ast":null,"code":"import { mapGetters } from 'vuex';\nexport default {\n  name: 'Navbar',\n  data() {\n    return {\n      courses: [],\n      newCourse: {\n        code: '',\n        name: '',\n        semester: '',\n        academic_year: ''\n      }\n    };\n  },\n  computed: {\n    ...mapGetters('auth', ['getUser', 'userRole']),\n    userName() {\n      return this.getUser ? this.getUser.name : '';\n    }\n  },\n  created() {\n    this.loadCourses();\n  },\n  methods: {\n    async loadCourses() {\n      try {\n        if (this.userRole === 'lecturer') {\n          // Load courses that this lecturer teaches\n          this.courses = await this.$store.dispatch('courses/fetchCourses', {\n            lecturerId: this.getUser.id\n          });\n        } else if (this.userRole === 'student') {\n          // For students, we need to fetch courses they're enrolled in\n          // This would require a custom endpoint in the backend\n          this.courses = await this.$store.dispatch('courses/fetchCourses');\n        }\n      } catch (error) {\n        console.error('Error loading courses:', error);\n      }\n    },\n    logout() {\n      this.$store.dispatch('auth/logout');\n      this.$router.push('/login');\n    },\n    openCourseModal() {\n      // Reset the form\n      this.newCourse = {\n        code: '',\n        name: '',\n        semester: '',\n        academic_year: ''\n      };\n\n      // Open the modal using Bootstrap's JavaScript\n      const modal = new bootstrap.Modal(document.getElementById('addCourseModal'));\n      modal.show();\n    },\n    async addCourse() {\n      try {\n        // Add lecturer_id to the course data\n        const courseData = {\n          ...this.newCourse,\n          lecturer_id: this.getUser.id\n        };\n        await this.$store.dispatch('courses/createCourse', courseData);\n\n        // Close the modal using Bootstrap's JavaScript\n        const modalElement = document.getElementById('addCourseModal');\n        const modal = bootstrap.Modal.getInstance(modalElement);\n        modal.hide();\n\n        // Reload courses\n        this.loadCourses();\n      } catch (error) {\n        console.error('Error adding course:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","name","data","courses","newCourse","code","semester","academic_year","computed","userName","getUser","created","loadCourses","methods","userRole","$store","dispatch","lecturerId","id","error","console","logout","$router","push","openCourseModal","modal","bootstrap","Modal","document","getElementById","show","addCourse","courseData","lecturer_id","modalElement","getInstance","hide"],"sources":["C:\\Users\\ansmu\\Desktop\\Web\\course-mark-management\\frontend\\src\\components\\layout\\Navbar.vue"],"sourcesContent":["<template>\r\n  <nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n    <div class=\"container-fluid\">\r\n      <router-link class=\"navbar-brand\" to=\"/\">Course Mark Management</router-link>\r\n      \r\n      <button \r\n        class=\"navbar-toggler\" \r\n        type=\"button\" \r\n        data-bs-toggle=\"collapse\" \r\n        data-bs-target=\"#navbarContent\" \r\n        aria-controls=\"navbarContent\" \r\n        aria-expanded=\"false\" \r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      \r\n      <div class=\"collapse navbar-collapse\" id=\"navbarContent\">\r\n        <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <!-- Lecturer navigation -->\r\n          <template v-if=\"userRole === 'lecturer'\">\r\n            <li class=\"nav-item\">\r\n              <router-link class=\"nav-link\" to=\"/lecturer/dashboard\">Dashboard</router-link>\r\n            </li>\r\n            <li class=\"nav-item dropdown\">\r\n              <a \r\n                class=\"nav-link dropdown-toggle\" \r\n                href=\"#\" \r\n                id=\"coursesDropdown\" \r\n                role=\"button\" \r\n                data-bs-toggle=\"dropdown\" \r\n                aria-expanded=\"false\"\r\n              >\r\n                Courses\r\n              </a>\r\n              <ul class=\"dropdown-menu\" aria-labelledby=\"coursesDropdown\">\r\n                <li v-for=\"course in courses\" :key=\"course.id\">\r\n                  <router-link class=\"dropdown-item\" :to=\"`/lecturer/course/${course.id}`\">\r\n                    {{ course.code }} - {{ course.name }}\r\n                  </router-link>\r\n                </li>\r\n                <li><hr class=\"dropdown-divider\"></li>\r\n                <li>\r\n                  <a class=\"dropdown-item\" href=\"#\" @click.prevent=\"openCourseModal\">\r\n                    <i class=\"fas fa-plus-circle\"></i> Add New Course\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <router-link class=\"nav-link\" to=\"/lecturer/students\">Students</router-link>\r\n            </li>\r\n          </template>\r\n          \r\n          <!-- Student navigation -->\r\n          <template v-else-if=\"userRole === 'student'\">\r\n            <li class=\"nav-item\">\r\n              <router-link class=\"nav-link\" to=\"/student/dashboard\">Dashboard</router-link>\r\n            </li>\r\n            <li class=\"nav-item dropdown\">\r\n              <a \r\n                class=\"nav-link dropdown-toggle\" \r\n                href=\"#\" \r\n                id=\"studentCoursesDropdown\" \r\n                role=\"button\" \r\n                data-bs-toggle=\"dropdown\" \r\n                aria-expanded=\"false\"\r\n              >\r\n                My Courses\r\n              </a>\r\n              <ul class=\"dropdown-menu\" aria-labelledby=\"studentCoursesDropdown\">\r\n                <li v-for=\"course in courses\" :key=\"course.id\">\r\n                  <router-link class=\"dropdown-item\" :to=\"`/student/course/${course.id}`\">\r\n                    {{ course.code }} - {{ course.name }}\r\n                  </router-link>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n          </template>\r\n          \r\n          <!-- Advisor navigation -->\r\n          <template v-else-if=\"userRole === 'advisor'\">\r\n            <li class=\"nav-item\">\r\n              <router-link class=\"nav-link\" to=\"/advisor/dashboard\">Dashboard</router-link>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <router-link class=\"nav-link\" to=\"/advisor/advisees\">My Advisees</router-link>\r\n            </li>\r\n          </template>\r\n        </ul>\r\n        \r\n        <div class=\"d-flex\">\r\n          <span class=\"navbar-text me-3\">\r\n            <i class=\"fas fa-user-circle me-1\"></i> {{ userName }}\r\n          </span>\r\n          <button class=\"btn btn-outline-light\" @click=\"logout\">\r\n            <i class=\"fas fa-sign-out-alt\"></i> Logout\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Add Course Modal -->\r\n    <div class=\"modal fade\" id=\"addCourseModal\" tabindex=\"-1\" aria-labelledby=\"addCourseModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"addCourseModalLabel\">Add New Course</h5>\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <form @submit.prevent=\"addCourse\">\r\n              <div class=\"mb-3\">\r\n                <label for=\"courseCode\" class=\"form-label\">Course Code</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"courseCode\" v-model=\"newCourse.code\" required>\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label for=\"courseName\" class=\"form-label\">Course Name</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"courseName\" v-model=\"newCourse.name\" required>\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label for=\"semester\" class=\"form-label\">Semester</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"semester\" v-model=\"newCourse.semester\">\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label for=\"academicYear\" class=\"form-label\">Academic Year</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"academicYear\" v-model=\"newCourse.academic_year\">\r\n              </div>\r\n              <button type=\"submit\" class=\"btn btn-primary\">Save Course</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex';\r\n\r\nexport default {\r\n  name: 'Navbar',\r\n  data() {\r\n    return {\r\n      courses: [],\r\n      newCourse: {\r\n        code: '',\r\n        name: '',\r\n        semester: '',\r\n        academic_year: ''\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters('auth', ['getUser', 'userRole']),\r\n    userName() {\r\n      return this.getUser ? this.getUser.name : '';\r\n    }\r\n  },\r\n  created() {\r\n    this.loadCourses();\r\n  },\r\n  methods: {\r\n    async loadCourses() {\r\n      try {\r\n        if (this.userRole === 'lecturer') {\r\n          // Load courses that this lecturer teaches\r\n          this.courses = await this.$store.dispatch('courses/fetchCourses', {\r\n            lecturerId: this.getUser.id\r\n          });\r\n        } else if (this.userRole === 'student') {\r\n          // For students, we need to fetch courses they're enrolled in\r\n          // This would require a custom endpoint in the backend\r\n          this.courses = await this.$store.dispatch('courses/fetchCourses');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading courses:', error);\r\n      }\r\n    },\r\n    logout() {\r\n      this.$store.dispatch('auth/logout');\r\n      this.$router.push('/login');\r\n    },\r\n    openCourseModal() {\r\n      // Reset the form\r\n      this.newCourse = {\r\n        code: '',\r\n        name: '',\r\n        semester: '',\r\n        academic_year: ''\r\n      };\r\n      \r\n      // Open the modal using Bootstrap's JavaScript\r\n      const modal = new bootstrap.Modal(document.getElementById('addCourseModal'));\r\n      modal.show();\r\n    },\r\n    async addCourse() {\r\n      try {\r\n        // Add lecturer_id to the course data\r\n        const courseData = {\r\n          ...this.newCourse,\r\n          lecturer_id: this.getUser.id\r\n        };\r\n        \r\n        await this.$store.dispatch('courses/createCourse', courseData);\r\n        \r\n        // Close the modal using Bootstrap's JavaScript\r\n        const modalElement = document.getElementById('addCourseModal');\r\n        const modal = bootstrap.Modal.getInstance(modalElement);\r\n        modal.hide();\r\n        \r\n        // Reload courses\r\n        this.loadCourses();\r\n      } catch (error) {\r\n        console.error('Error adding course:', error);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.navbar {\r\n  margin-bottom: 20px;\r\n  background-color: #2c3e50 !important;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.navbar-brand {\r\n  font-weight: 700;\r\n  font-size: 1.5rem;\r\n}\r\n\r\n.nav-link {\r\n  font-weight: 500;\r\n  transition: color 0.3s ease;\r\n}\r\n\r\n.nav-link:hover {\r\n  color: #3498db !important;\r\n}\r\n\r\n.dropdown-menu {\r\n  border: none;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  border-radius: 0.5rem;\r\n}\r\n\r\n.dropdown-item {\r\n  padding: 8px 16px;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.dropdown-item:hover {\r\n  background-color: #f8f9fa;\r\n}\r\n</style>\r\n"],"mappings":"AA0IA,SAASA,UAAS,QAAS,MAAM;AAEjC,eAAe;EACbC,IAAI,EAAE,QAAQ;EACdC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MACXC,SAAS,EAAE;QACTC,IAAI,EAAE,EAAE;QACRJ,IAAI,EAAE,EAAE;QACRK,QAAQ,EAAE,EAAE;QACZC,aAAa,EAAE;MACjB;IACF,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGR,UAAU,CAAC,MAAM,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;IAC9CS,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACC,OAAM,GAAI,IAAI,CAACA,OAAO,CAACT,IAAG,GAAI,EAAE;IAC9C;EACF,CAAC;EACDU,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,WAAW,CAAC,CAAC;EACpB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,IAAI,IAAI,CAACE,QAAO,KAAM,UAAU,EAAE;UAChC;UACA,IAAI,CAACX,OAAM,GAAI,MAAM,IAAI,CAACY,MAAM,CAACC,QAAQ,CAAC,sBAAsB,EAAE;YAChEC,UAAU,EAAE,IAAI,CAACP,OAAO,CAACQ;UAC3B,CAAC,CAAC;QACJ,OAAO,IAAI,IAAI,CAACJ,QAAO,KAAM,SAAS,EAAE;UACtC;UACA;UACA,IAAI,CAACX,OAAM,GAAI,MAAM,IAAI,CAACY,MAAM,CAACC,QAAQ,CAAC,sBAAsB,CAAC;QACnE;MACF,EAAE,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IACDE,MAAMA,CAAA,EAAG;MACP,IAAI,CAACN,MAAM,CAACC,QAAQ,CAAC,aAAa,CAAC;MACnC,IAAI,CAACM,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;IAC7B,CAAC;IACDC,eAAeA,CAAA,EAAG;MAChB;MACA,IAAI,CAACpB,SAAQ,GAAI;QACfC,IAAI,EAAE,EAAE;QACRJ,IAAI,EAAE,EAAE;QACRK,QAAQ,EAAE,EAAE;QACZC,aAAa,EAAE;MACjB,CAAC;;MAED;MACA,MAAMkB,KAAI,GAAI,IAAIC,SAAS,CAACC,KAAK,CAACC,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC,CAAC;MAC5EJ,KAAK,CAACK,IAAI,CAAC,CAAC;IACd,CAAC;IACD,MAAMC,SAASA,CAAA,EAAG;MAChB,IAAI;QACF;QACA,MAAMC,UAAS,GAAI;UACjB,GAAG,IAAI,CAAC5B,SAAS;UACjB6B,WAAW,EAAE,IAAI,CAACvB,OAAO,CAACQ;QAC5B,CAAC;QAED,MAAM,IAAI,CAACH,MAAM,CAACC,QAAQ,CAAC,sBAAsB,EAAEgB,UAAU,CAAC;;QAE9D;QACA,MAAME,YAAW,GAAIN,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC;QAC9D,MAAMJ,KAAI,GAAIC,SAAS,CAACC,KAAK,CAACQ,WAAW,CAACD,YAAY,CAAC;QACvDT,KAAK,CAACW,IAAI,CAAC,CAAC;;QAEZ;QACA,IAAI,CAACxB,WAAW,CAAC,CAAC;MACpB,EAAE,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}