{"ast":null,"code":"import _regenerator from \"C:/Users/ansmu/Desktop/Web/NEW/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _asyncToGenerator from \"C:/Users/ansmu/Desktop/Web/NEW/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"C:/Users/ansmu/Desktop/Web/NEW/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { mapState, mapActions } from 'vuex';\nexport default {\n  name: 'CourseDetail',\n  data: function data() {\n    return {\n      courseId: null,\n      studentSearchQuery: '',\n      isLoadingBreakdown: false,\n      courseBreakdown: {},\n      studentsMarks: [],\n      editFormData: {\n        code: '',\n        name: '',\n        semester: '',\n        credits: '',\n        description: ''\n      }\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapState({\n    isLoading: function isLoading(state) {\n      return state.loading;\n    },\n    course: function course(state) {\n      return state.courses.course;\n    }\n  })), {}, {\n    enrolledStudents: function enrolledStudents() {\n      // This would be populated from a store getter once implemented\n      return this.$store.state.users.courseStudents || [];\n    },\n    studentsWithMarks: function studentsWithMarks() {\n      return this.studentsMarks.filter(function (student) {\n        return student.assignment_mark !== null || student.quiz_mark !== null || student.test_mark !== null || student.final_exam_mark !== null;\n      }).length;\n    },\n    filteredStudents: function filteredStudents() {\n      if (!this.studentSearchQuery) {\n        return this.enrolledStudents;\n      }\n      var query = this.studentSearchQuery.toLowerCase();\n      return this.enrolledStudents.filter(function (student) {\n        return student.name.toLowerCase().includes(query) || student.email.toLowerCase().includes(query) || student.student_id && student.student_id.toString().includes(query);\n      });\n    }\n  }),\n  created: function created() {\n    var _this = this;\n    return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n      var _t;\n      return _regenerator().w(function (_context) {\n        while (1) switch (_context.n) {\n          case 0:\n            _this.courseId = _this.$route.params.id;\n            _context.p = 1;\n            _context.n = 2;\n            return _this.fetchCourse(_this.courseId);\n          case 2:\n            _context.n = 3;\n            return _this.fetchCourseStudents(_this.courseId);\n          case 3:\n            _context.n = 4;\n            return _this.fetchCourseBreakdown();\n          case 4:\n            _context.n = 5;\n            return _this.fetchStudentsMarks();\n          case 5:\n            // Initialize edit form data\n            _this.initializeEditForm();\n            _context.n = 7;\n            break;\n          case 6:\n            _context.p = 6;\n            _t = _context.v;\n            console.error('Error loading course details:', _t);\n          case 7:\n            return _context.a(2);\n        }\n      }, _callee, null, [[1, 6]]);\n    }))();\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    fetchCourse: 'courses/fetchCourse',\n    updateCourse: 'courses/updateCourse'\n  })), {}, {\n    fetchCourseStudents: function fetchCourseStudents(courseId) {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n        var response, data, _t2;\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              _context2.p = 0;\n              _context2.n = 1;\n              return fetch(\"http://localhost:8080/marks-api.php?action=course_students_list&course_id=\".concat(courseId));\n            case 1:\n              response = _context2.v;\n              _context2.n = 2;\n              return response.json();\n            case 2:\n              data = _context2.v;\n              if (data.success) {\n                // Store in Vuex or local data\n                _this2.$store.commit('users/setCourseStudents', data.students || []);\n              } else {\n                console.error('Failed to fetch course students:', data.message);\n              }\n              _context2.n = 4;\n              break;\n            case 3:\n              _context2.p = 3;\n              _t2 = _context2.v;\n              console.error('Error fetching course students:', _t2);\n            case 4:\n              return _context2.a(2);\n          }\n        }, _callee2, null, [[0, 3]]);\n      }))();\n    },\n    fetchCourseBreakdown: function fetchCourseBreakdown() {\n      var _this3 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {\n        var response, data, _data$statistics, componentBreakdown, _t3;\n        return _regenerator().w(function (_context3) {\n          while (1) switch (_context3.n) {\n            case 0:\n              _context3.p = 0;\n              _this3.isLoadingBreakdown = true;\n              _context3.n = 1;\n              return fetch(\"http://localhost:8080/breakdown-api.php?action=course_breakdown&course_id=\".concat(_this3.courseId));\n            case 1:\n              response = _context3.v;\n              _context3.n = 2;\n              return response.json();\n            case 2:\n              data = _context3.v;\n              // Check if the response has an error property (API error response)\n              if (data.error) {\n                console.error('Failed to fetch course breakdown:', data.error);\n              } else {\n                // The API returns data directly, not wrapped in a data property\n                // Create component breakdown from the response\n                componentBreakdown = {};\n                if (data.component_breakdown) {\n                  data.component_breakdown.forEach(function (comp) {\n                    componentBreakdown[comp.type] = {\n                      average: comp.average_percentage,\n                      highest: comp.highest_percentage,\n                      completed: comp.submission_count\n                    };\n                  });\n                }\n                _this3.courseBreakdown = _objectSpread(_objectSpread({}, componentBreakdown), {}, {\n                  class_average: ((_data$statistics = data.statistics) === null || _data$statistics === void 0 ? void 0 : _data$statistics.class_average) || 0\n                });\n              }\n              _context3.n = 4;\n              break;\n            case 3:\n              _context3.p = 3;\n              _t3 = _context3.v;\n              console.error('Error fetching course breakdown:', _t3);\n            case 4:\n              _context3.p = 4;\n              _this3.isLoadingBreakdown = false;\n              return _context3.f(4);\n            case 5:\n              return _context3.a(2);\n          }\n        }, _callee3, null, [[0, 3, 4, 5]]);\n      }))();\n    },\n    fetchStudentsMarks: function fetchStudentsMarks() {\n      var _this4 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4() {\n        var response, data, _t4;\n        return _regenerator().w(function (_context4) {\n          while (1) switch (_context4.n) {\n            case 0:\n              _context4.p = 0;\n              _context4.n = 1;\n              return fetch(\"http://localhost:8080/marks-api.php?action=course_students_with_marks&course_id=\".concat(_this4.courseId));\n            case 1:\n              response = _context4.v;\n              _context4.n = 2;\n              return response.json();\n            case 2:\n              data = _context4.v;\n              if (data.success) {\n                _this4.studentsMarks = data.students || [];\n              } else {\n                console.error('Failed to fetch students marks:', data.message);\n              }\n              _context4.n = 4;\n              break;\n            case 3:\n              _context4.p = 3;\n              _t4 = _context4.v;\n              console.error('Error fetching students marks:', _t4);\n            case 4:\n              return _context4.a(2);\n          }\n        }, _callee4, null, [[0, 3]]);\n      }))();\n    },\n    formatDate: function formatDate(dateString) {\n      if (!dateString) return 'Not set';\n      return new Date(dateString).toLocaleDateString();\n    },\n    getStudentCompletionProgress: function getStudentCompletionProgress(studentId) {\n      // Calculate completion progress based on how many components the student has completed\n      var studentData = this.studentsMarks.find(function (s) {\n        return s.id === studentId;\n      });\n      if (!studentData) return 0;\n      var completedComponents = 0;\n      if (studentData.assignment_mark !== null) completedComponents++;\n      if (studentData.quiz_mark !== null) completedComponents++;\n      if (studentData.test_mark !== null) completedComponents++;\n      if (studentData.final_exam_mark !== null) completedComponents++;\n      return Math.round(completedComponents / 4 * 100);\n    },\n    getStudentFinalGrade: function getStudentFinalGrade(studentId) {\n      // Get final grade from final_marks_custom data\n      var studentData = this.studentsMarks.find(function (s) {\n        return s.id === studentId;\n      });\n      if (!studentData) return 'N/A';\n      return studentData.final_grade || 'N/A';\n    },\n    getMarkClass: function getMarkClass(markString) {\n      if (markString === 'N/A') return 'text-muted';\n\n      // Handle grade strings (A+, A, B+, etc.)\n      if (typeof markString === 'string' && markString.match(/^[A-F][+-]?$/)) {\n        var gradeOrder = ['F', 'D', 'D+', 'C-', 'C', 'C+', 'B-', 'B', 'B+', 'A-', 'A', 'A+'];\n        var gradeIndex = gradeOrder.indexOf(markString);\n        if (gradeIndex >= 8) return 'text-success fw-bold'; // B+ and above\n        if (gradeIndex >= 4) return 'text-warning'; // C and above\n        return 'text-danger'; // Below C\n      }\n\n      // Handle percentage strings\n      var mark = parseInt(markString);\n      if (isNaN(mark)) return 'text-muted';\n      if (mark >= 70) return 'text-success fw-bold';\n      if (mark >= 50) return 'text-warning';\n      return 'text-danger';\n    },\n    navigateToStudentDetail: function navigateToStudentDetail(student) {\n      this.$router.push({\n        name: 'StudentDetail',\n        params: {\n          id: student.id\n        },\n        query: {\n          courseId: this.courseId\n        }\n      });\n    },\n    navigateToStudentMarks: function navigateToStudentMarks(student) {\n      // Navigate to marks management for specific student\n      this.$router.push({\n        path: \"/lecturer/course/\".concat(this.courseId, \"/marks\"),\n        query: {\n          studentId: student.id\n        }\n      });\n    },\n    openEditCourseModal: function openEditCourseModal() {\n      this.initializeEditForm();\n      // In a real implementation, we would use Bootstrap's modal methods\n      // $('#editCourseModal').modal('show');\n    },\n    initializeEditForm: function initializeEditForm() {\n      if (this.course) {\n        this.editFormData = {\n          code: this.course.code || '',\n          name: this.course.name || '',\n          semester: this.course.semester || '',\n          credits: this.course.credits || '',\n          description: this.course.description || ''\n        };\n      }\n    },\n    saveCourseChanges: function saveCourseChanges() {\n      var _this5 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee5() {\n        var _t5;\n        return _regenerator().w(function (_context5) {\n          while (1) switch (_context5.n) {\n            case 0:\n              _context5.p = 0;\n              _context5.n = 1;\n              return _this5.updateCourse(_objectSpread({\n                id: _this5.courseId\n              }, _this5.editFormData));\n            case 1:\n              // Close modal\n              // $('#editCourseModal').modal('hide');\n              _this5.$store.dispatch('showToast', {\n                message: 'Course updated successfully',\n                type: 'success'\n              });\n              _context5.n = 3;\n              break;\n            case 2:\n              _context5.p = 2;\n              _t5 = _context5.v;\n              console.error('Error updating course:', _t5);\n            case 3:\n              return _context5.a(2);\n          }\n        }, _callee5, null, [[0, 2]]);\n      }))();\n    },\n    exportCourseData: function exportCourseData() {\n      // This would initiate a download of course data in CSV format\n      // Implementation would need to call an API endpoint\n      this.$store.dispatch('showToast', {\n        message: 'Exporting course data...',\n        type: 'info'\n      });\n    }\n  })\n};","map":{"version":3,"names":["mapState","mapActions","name","data","courseId","studentSearchQuery","isLoadingBreakdown","courseBreakdown","studentsMarks","editFormData","code","semester","credits","description","computed","_objectSpread","isLoading","state","loading","course","courses","enrolledStudents","$store","users","courseStudents","studentsWithMarks","filter","student","assignment_mark","quiz_mark","test_mark","final_exam_mark","length","filteredStudents","query","toLowerCase","includes","email","student_id","toString","created","_this","_asyncToGenerator","_regenerator","m","_callee","_t","w","_context","n","$route","params","id","p","fetchCourse","fetchCourseStudents","fetchCourseBreakdown","fetchStudentsMarks","initializeEditForm","v","console","error","a","methods","updateCourse","_this2","_callee2","response","_t2","_context2","fetch","concat","json","success","commit","students","message","_this3","_callee3","_data$statistics","componentBreakdown","_t3","_context3","component_breakdown","forEach","comp","type","average","average_percentage","highest","highest_percentage","completed","submission_count","class_average","statistics","f","_this4","_callee4","_t4","_context4","formatDate","dateString","Date","toLocaleDateString","getStudentCompletionProgress","studentId","studentData","find","s","completedComponents","Math","round","getStudentFinalGrade","final_grade","getMarkClass","markString","match","gradeOrder","gradeIndex","indexOf","mark","parseInt","isNaN","navigateToStudentDetail","$router","push","navigateToStudentMarks","path","openEditCourseModal","saveCourseChanges","_this5","_callee5","_t5","_context5","dispatch","exportCourseData"],"sources":["C:\\Users\\ansmu\\Desktop\\Web\\NEW\\course-mark-management\\frontend\\src\\views\\lecturer\\CourseDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"course-detail\">\r\n    <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n      <div>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol class=\"breadcrumb\">\r\n            <li class=\"breadcrumb-item\">\r\n              <router-link to=\"/lecturer/dashboard\">Dashboard</router-link>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\" aria-current=\"page\">\r\n              {{ course?.code }} - {{ course?.name }}\r\n            </li>\r\n          </ol>\r\n        </nav>\r\n        <h1 class=\"mb-2\">{{ course?.name }}</h1>\r\n        <p class=\"text-muted\">\r\n          {{ course?.code }} | {{ course?.semester || 'No semester specified' }}\r\n        </p>\r\n      </div>\r\n      <div>\r\n        <div class=\"btn-group\">\r\n          <router-link \r\n            :to=\"`/lecturer/course/${courseId}/marks`\" \r\n            class=\"btn btn-success\"\r\n          >\r\n            <i class=\"fas fa-graduation-cap me-2\"></i> Manage Marks\r\n          </router-link>\r\n          <button class=\"btn btn-outline-primary\" @click=\"exportCourseData\">\r\n            <i class=\"fas fa-file-export me-2\"></i> Export Data\r\n          </button>\r\n          <button class=\"btn btn-outline-primary\" @click=\"openEditCourseModal\">\r\n            <i class=\"fas fa-edit me-2\"></i> Edit Course\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"isLoading\" class=\"text-center my-5\">\r\n      <div class=\"spinner-border text-primary\" role=\"status\">\r\n        <span class=\"visually-hidden\">Loading...</span>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-else class=\"row\">\r\n      <div class=\"col-md-4 mb-4\">\r\n        <div class=\"card h-100\">\r\n          <div class=\"card-header bg-light d-flex justify-content-between align-items-center\">\r\n            <h5 class=\"mb-0\">Course Information</h5>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <table class=\"table table-sm\">\r\n              <tbody>\r\n                <tr>\r\n                  <th>Code:</th>\r\n                  <td>{{ course?.code }}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Name:</th>\r\n                  <td>{{ course?.name }}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Semester:</th>\r\n                  <td>{{ course?.semester || 'Not specified' }}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Credits:</th>\r\n                  <td>{{ course?.credits || 'Not specified' }}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Students:</th>\r\n                  <td>{{ enrolledStudents.length }}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Students with Marks:</th>\r\n                  <td>{{ studentsWithMarks }}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Class Average:</th>\r\n                  <td>{{ courseBreakdown.class_average || 'N/A' }}%</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            <div v-if=\"course?.description\" class=\"mt-3\">\r\n              <h6>Description</h6>\r\n              <p>{{ course.description }}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-md-8 mb-4\">\r\n        <div class=\"card h-100\">\r\n          <div class=\"card-header bg-light d-flex justify-content-between align-items-center\">\r\n            <h5 class=\"mb-0\">Component Breakdown</h5>\r\n            <router-link :to=\"`/lecturer/breakdown/${courseId}`\" class=\"btn btn-sm btn-primary\">\r\n              <i class=\"fas fa-chart-bar me-2\"></i> View Detailed Analytics\r\n            </router-link>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div v-if=\"isLoadingBreakdown\" class=\"text-center py-4\">\r\n              <div class=\"spinner-border text-primary\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading component data...</span>\r\n              </div>\r\n            </div>\r\n            <div v-else>\r\n              <!-- Component Weightage Progress Bar -->\r\n              <div class=\"mb-4\">\r\n                <div class=\"progress\" style=\"height: 30px;\">\r\n                  <div class=\"progress-bar bg-success\" \r\n                       style=\"width: 25%\"\r\n                       title=\"Assignment (25%)\">\r\n                    Assignment 25%\r\n                  </div>\r\n                  <div class=\"progress-bar bg-info\" \r\n                       style=\"width: 20%\"\r\n                       title=\"Quiz (20%)\">\r\n                    Quiz 20%\r\n                  </div>\r\n                  <div class=\"progress-bar bg-warning\" \r\n                       style=\"width: 25%\"\r\n                       title=\"Test (25%)\">\r\n                    Test 25%\r\n                  </div>\r\n                  <div class=\"progress-bar bg-danger\" \r\n                       style=\"width: 30%\"\r\n                       title=\"Final Exam (30%)\">\r\n                    Final Exam 30%\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <!-- Component Statistics -->\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 mb-3\">\r\n                  <div class=\"card border-light\">\r\n                    <div class=\"card-body p-3\">\r\n                      <h6 class=\"card-title text-success\">\r\n                        <i class=\"fas fa-file-alt me-2\"></i>Assignment (25%)\r\n                      </h6>\r\n                      <div class=\"d-flex justify-content-between\">\r\n                        <span>Class Average:</span>\r\n                        <strong>{{ courseBreakdown.assignment?.average || 'N/A' }}%</strong>\r\n                      </div>\r\n                      <div class=\"d-flex justify-content-between\">\r\n                        <span>Highest Score:</span>\r\n                        <strong>{{ courseBreakdown.assignment?.highest || 'N/A' }}%</strong>\r\n                      </div>\r\n                      <div class=\"d-flex justify-content-between\">\r\n                        <span>Students Completed:</span>\r\n                        <strong>{{ courseBreakdown.assignment?.completed || 0 }}/{{ enrolledStudents.length }}</strong>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div class=\"col-md-6 mb-3\">\r\n                  <div class=\"card border-light\">\r\n                    <div class=\"card-body p-3\">\r\n                      <h6 class=\"card-title text-info\">\r\n                        <i class=\"fas fa-question-circle me-2\"></i>Quiz (20%)\r\n                      </h6>\r\n                      <div class=\"d-flex justify-content-between\">\r\n                        <span>Class Average:</span>\r\n                        <strong>{{ courseBreakdown.quiz?.average || 'N/A' }}%</strong>\r\n                      </div>\r\n                      <div class=\"d-flex justify-content-between\">\r\n                        <span>Highest Score:</span>\r\n                        <strong>{{ courseBreakdown.quiz?.highest || 'N/A' }}%</strong>\r\n                      </div>\r\n                      <div class=\"d-flex justify-content-between\">\r\n                        <span>Students Completed:</span>\r\n                        <strong>{{ courseBreakdown.quiz?.completed || 0 }}/{{ enrolledStudents.length }}</strong>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div class=\"col-md-6 mb-3\">\r\n                  <div class=\"card border-light\">\r\n                    <div class=\"card-body p-3\">\r\n                      <h6 class=\"card-title text-warning\">\r\n                        <i class=\"fas fa-clipboard-check me-2\"></i>Test (25%)\r\n                      </h6>\r\n                      <div class=\"d-flex justify-content-between\">\r\n                        <span>Class Average:</span>\r\n                        <strong>{{ courseBreakdown.test?.average || 'N/A' }}%</strong>\r\n                      </div>\r\n                      <div class=\"d-flex justify-content-between\">\r\n                        <span>Highest Score:</span>\r\n                        <strong>{{ courseBreakdown.test?.highest || 'N/A' }}%</strong>\r\n                      </div>\r\n                      <div class=\"d-flex justify-content-between\">\r\n                        <span>Students Completed:</span>\r\n                        <strong>{{ courseBreakdown.test?.completed || 0 }}/{{ enrolledStudents.length }}</strong>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div class=\"col-md-6 mb-3\">\r\n                  <div class=\"card border-light\">\r\n                    <div class=\"card-body p-3\">\r\n                      <h6 class=\"card-title text-danger\">\r\n                        <i class=\"fas fa-graduation-cap me-2\"></i>Final Exam (30%)\r\n                      </h6>\r\n                      <div class=\"d-flex justify-content-between\">\r\n                        <span>Class Average:</span>\r\n                        <strong>{{ courseBreakdown.final_exam?.average || 'N/A' }}%</strong>\r\n                      </div>\r\n                      <div class=\"d-flex justify-content-between\">\r\n                        <span>Highest Score:</span>\r\n                        <strong>{{ courseBreakdown.final_exam?.highest || 'N/A' }}%</strong>\r\n                      </div>\r\n                      <div class=\"d-flex justify-content-between\">\r\n                        <span>Students Completed:</span>\r\n                        <strong>{{ courseBreakdown.final_exam?.completed || 0 }}/{{ enrolledStudents.length }}</strong>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 mb-4\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header bg-light d-flex justify-content-between align-items-center\">\r\n            <h5 class=\"mb-0\">Enrolled Students</h5>\r\n            <div class=\"input-group w-25\">\r\n              <input \r\n                type=\"text\" \r\n                class=\"form-control\" \r\n                placeholder=\"Search students...\" \r\n                v-model=\"studentSearchQuery\"\r\n              >\r\n              <button class=\"btn btn-outline-secondary\" type=\"button\">\r\n                <i class=\"fas fa-search\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div v-if=\"enrolledStudents.length === 0\" class=\"text-center py-4\">\r\n              <p>No students are enrolled in this course yet.</p>\r\n            </div>\r\n            <div v-else class=\"table-responsive\">\r\n              <table class=\"table table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Student ID</th>\r\n                    <th>Name</th>\r\n                    <th>Email</th>\r\n                    <th>Overall Progress</th>\r\n                    <th>Current Mark</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr v-for=\"student in filteredStudents\" :key=\"student.id\">\r\n                    <td>{{ student.student_id || 'N/A' }}</td>\r\n                    <td>{{ student.name }}</td>\r\n                    <td>{{ student.email }}</td>\r\n                    <td>\r\n                      <div class=\"progress\">\r\n                        <div \r\n                          class=\"progress-bar bg-success\" \r\n                          role=\"progressbar\"\r\n                          :style=\"`width: ${getStudentCompletionProgress(student.id)}%`\"\r\n                          :aria-valuenow=\"getStudentCompletionProgress(student.id)\" \r\n                          aria-valuemin=\"0\" \r\n                          aria-valuemax=\"100\">\r\n                          {{ getStudentCompletionProgress(student.id) }}%\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <span \r\n                        :class=\"getMarkClass(getStudentFinalGrade(student.id))\">\r\n                        {{ getStudentFinalGrade(student.id) }}\r\n                      </span>\r\n                    </td>\r\n                    <td>\r\n                      <div class=\"btn-group btn-group-sm\">\r\n                        <button class=\"btn btn-outline-primary\" @click=\"navigateToStudentDetail(student)\">\r\n                          <i class=\"fas fa-user me-1\"></i> Details\r\n                        </button>\r\n                        <button class=\"btn btn-outline-secondary\" @click=\"navigateToStudentMarks(student)\">\r\n                          <i class=\"fas fa-calculator me-1\"></i> Marks\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Edit Course Modal -->\r\n    <div class=\"modal fade\" id=\"editCourseModal\" tabindex=\"-1\" aria-labelledby=\"editCourseModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"editCourseModalLabel\">Edit Course</h5>\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <!-- Course edit form will go here -->\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\r\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"saveCourseChanges\">Save Changes</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapActions } from 'vuex'\r\n\r\nexport default {\r\n  name: 'CourseDetail',\r\n  data() {\r\n    return {\r\n      courseId: null,\r\n      studentSearchQuery: '',\r\n      isLoadingBreakdown: false,\r\n      courseBreakdown: {},\r\n      studentsMarks: [],\r\n      editFormData: {\r\n        code: '',\r\n        name: '',\r\n        semester: '',\r\n        credits: '',\r\n        description: ''\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      isLoading: state => state.loading,\r\n      course: state => state.courses.course,\r\n    }),\r\n    enrolledStudents() {\r\n      // This would be populated from a store getter once implemented\r\n      return this.$store.state.users.courseStudents || [];\r\n    },\r\n    studentsWithMarks() {\r\n      return this.studentsMarks.filter(student => \r\n        student.assignment_mark !== null || \r\n        student.quiz_mark !== null || \r\n        student.test_mark !== null || \r\n        student.final_exam_mark !== null\r\n      ).length;\r\n    },\r\n    filteredStudents() {\r\n      if (!this.studentSearchQuery) {\r\n        return this.enrolledStudents;\r\n      }\r\n      \r\n      const query = this.studentSearchQuery.toLowerCase();\r\n      return this.enrolledStudents.filter(student => \r\n        student.name.toLowerCase().includes(query) || \r\n        student.email.toLowerCase().includes(query) ||\r\n        (student.student_id && student.student_id.toString().includes(query))\r\n      );\r\n    }\r\n  },\r\n  async created() {\r\n    this.courseId = this.$route.params.id;\r\n    try {\r\n      // Fetch course details\r\n      await this.fetchCourse(this.courseId);\r\n      \r\n      // Fetch enrolled students\r\n      await this.fetchCourseStudents(this.courseId);\r\n      \r\n      // Fetch component breakdown data\r\n      await this.fetchCourseBreakdown();\r\n      \r\n      // Fetch students marks from final_marks_custom\r\n      await this.fetchStudentsMarks();\r\n      \r\n      // Initialize edit form data\r\n      this.initializeEditForm();\r\n    } catch (error) {\r\n      console.error('Error loading course details:', error);\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      fetchCourse: 'courses/fetchCourse',\r\n      updateCourse: 'courses/updateCourse'\r\n    }),\r\n    async fetchCourseStudents(courseId) {\r\n      try {\r\n        const response = await fetch(`http://localhost:8080/marks-api.php?action=course_students_list&course_id=${courseId}`);\r\n        const data = await response.json();\r\n        \r\n        if (data.success) {\r\n          // Store in Vuex or local data\r\n          this.$store.commit('users/setCourseStudents', data.students || []);\r\n        } else {\r\n          console.error('Failed to fetch course students:', data.message);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching course students:', error);\r\n      }\r\n    },\r\n    async fetchCourseBreakdown() {\r\n      try {\r\n        this.isLoadingBreakdown = true;\r\n        const response = await fetch(`http://localhost:8080/breakdown-api.php?action=course_breakdown&course_id=${this.courseId}`);\r\n        const data = await response.json();\r\n        \r\n        // Check if the response has an error property (API error response)\r\n        if (data.error) {\r\n          console.error('Failed to fetch course breakdown:', data.error);\r\n        } else {\r\n          // The API returns data directly, not wrapped in a data property\r\n          // Create component breakdown from the response\r\n          const componentBreakdown = {};\r\n          if (data.component_breakdown) {\r\n            data.component_breakdown.forEach(comp => {\r\n              componentBreakdown[comp.type] = {\r\n                average: comp.average_percentage,\r\n                highest: comp.highest_percentage,\r\n                completed: comp.submission_count\r\n              };\r\n            });\r\n          }\r\n          \r\n          this.courseBreakdown = {\r\n            ...componentBreakdown,\r\n            class_average: data.statistics?.class_average || 0\r\n          };\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching course breakdown:', error);\r\n      } finally {\r\n        this.isLoadingBreakdown = false;\r\n      }\r\n    },\r\n    async fetchStudentsMarks() {\r\n      try {\r\n        const response = await fetch(`http://localhost:8080/marks-api.php?action=course_students_with_marks&course_id=${this.courseId}`);\r\n        const data = await response.json();\r\n        \r\n        if (data.success) {\r\n          this.studentsMarks = data.students || [];\r\n        } else {\r\n          console.error('Failed to fetch students marks:', data.message);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching students marks:', error);\r\n      }\r\n    },\r\n    formatDate(dateString) {\r\n      if (!dateString) return 'Not set';\r\n      return new Date(dateString).toLocaleDateString();\r\n    },\r\n    getStudentCompletionProgress(studentId) {\r\n      // Calculate completion progress based on how many components the student has completed\r\n      const studentData = this.studentsMarks.find(s => s.id === studentId);\r\n      if (!studentData) return 0;\r\n      \r\n      let completedComponents = 0;\r\n      if (studentData.assignment_mark !== null) completedComponents++;\r\n      if (studentData.quiz_mark !== null) completedComponents++;\r\n      if (studentData.test_mark !== null) completedComponents++;\r\n      if (studentData.final_exam_mark !== null) completedComponents++;\r\n      \r\n      return Math.round((completedComponents / 4) * 100);\r\n    },\r\n    getStudentFinalGrade(studentId) {\r\n      // Get final grade from final_marks_custom data\r\n      const studentData = this.studentsMarks.find(s => s.id === studentId);\r\n      if (!studentData) return 'N/A';\r\n      \r\n      return studentData.final_grade || 'N/A';\r\n    },\r\n    getMarkClass(markString) {\r\n      if (markString === 'N/A') return 'text-muted';\r\n      \r\n      // Handle grade strings (A+, A, B+, etc.)\r\n      if (typeof markString === 'string' && markString.match(/^[A-F][+-]?$/)) {\r\n        const gradeOrder = ['F', 'D', 'D+', 'C-', 'C', 'C+', 'B-', 'B', 'B+', 'A-', 'A', 'A+'];\r\n        const gradeIndex = gradeOrder.indexOf(markString);\r\n        if (gradeIndex >= 8) return 'text-success fw-bold'; // B+ and above\r\n        if (gradeIndex >= 4) return 'text-warning'; // C and above\r\n        return 'text-danger'; // Below C\r\n      }\r\n      \r\n      // Handle percentage strings\r\n      const mark = parseInt(markString);\r\n      if (isNaN(mark)) return 'text-muted';\r\n      \r\n      if (mark >= 70) return 'text-success fw-bold';\r\n      if (mark >= 50) return 'text-warning';\r\n      return 'text-danger';\r\n    },\r\n    navigateToStudentDetail(student) {\r\n      this.$router.push({ \r\n        name: 'StudentDetail', \r\n        params: { id: student.id },\r\n        query: { courseId: this.courseId }\r\n      });\r\n    },\r\n    navigateToStudentMarks(student) {\r\n      // Navigate to marks management for specific student\r\n      this.$router.push({ \r\n        path: `/lecturer/course/${this.courseId}/marks`,\r\n        query: { studentId: student.id }\r\n      });\r\n    },\r\n    openEditCourseModal() {\r\n      this.initializeEditForm();\r\n      // In a real implementation, we would use Bootstrap's modal methods\r\n      // $('#editCourseModal').modal('show');\r\n    },\r\n    initializeEditForm() {\r\n      if (this.course) {\r\n        this.editFormData = {\r\n          code: this.course.code || '',\r\n          name: this.course.name || '',\r\n          semester: this.course.semester || '',\r\n          credits: this.course.credits || '',\r\n          description: this.course.description || ''\r\n        };\r\n      }\r\n    },\r\n    async saveCourseChanges() {\r\n      try {\r\n        await this.updateCourse({\r\n          id: this.courseId,\r\n          ...this.editFormData\r\n        });\r\n        // Close modal\r\n        // $('#editCourseModal').modal('hide');\r\n        this.$store.dispatch('showToast', {\r\n          message: 'Course updated successfully',\r\n          type: 'success'\r\n        });\r\n      } catch (error) {\r\n        console.error('Error updating course:', error);\r\n      }\r\n    },\r\n    exportCourseData() {\r\n      // This would initiate a download of course data in CSV format\r\n      // Implementation would need to call an API endpoint\r\n      this.$store.dispatch('showToast', {\r\n        message: 'Exporting course data...',\r\n        type: 'info'\r\n      });\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.course-detail h1 {\r\n  font-size: 2rem;\r\n  font-weight: 600;\r\n}\r\n\r\n.progress {\r\n  height: 20px;\r\n}\r\n\r\n.card {\r\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\r\n}\r\n\r\n.card-header {\r\n  background-color: rgba(0, 0, 0, 0.03);\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.125);\r\n}\r\n\r\n.table th {\r\n  font-weight: 600;\r\n}\r\n\r\n.badge {\r\n  font-weight: 500;\r\n  padding: 0.35em 0.65em;\r\n}\r\n\r\n/* Timeline styling for recent activities */\r\n.timeline {\r\n  position: relative;\r\n  padding-left: 40px;\r\n}\r\n\r\n.timeline-item {\r\n  position: relative;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.timeline-item:before {\r\n  content: \"\";\r\n  position: absolute;\r\n  left: -30px;\r\n  top: 0;\r\n  height: 100%;\r\n  width: 2px;\r\n  background-color: #e9ecef;\r\n}\r\n\r\n.timeline-item:last-child:before {\r\n  height: 50%;\r\n}\r\n\r\n.timeline-item-icon {\r\n  position: absolute;\r\n  left: -38px;\r\n  top: 0;\r\n  width: 16px;\r\n  height: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #fff;\r\n  border: 2px solid #007bff;\r\n  border-radius: 50%;\r\n}\r\n\r\n.timeline-item-icon i {\r\n  font-size: 8px;\r\n  color: #007bff;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}