{"ast":null,"code":"import _regeneratorValues from \"C:/Users/ansmu/Desktop/Web/NEW/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorValues.js\";\nimport _createForOfIteratorHelper from \"C:/Users/ansmu/Desktop/Web/NEW/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _regenerator from \"C:/Users/ansmu/Desktop/Web/NEW/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _asyncToGenerator from \"C:/Users/ansmu/Desktop/Web/NEW/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"C:/Users/ansmu/Desktop/Web/NEW/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.unshift.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url.to-json.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { mapGetters } from 'vuex';\nimport ComponentChart from '@/components/charts/ComponentChart.vue';\nimport MarkDistributionChart from '@/components/charts/MarkDistributionChart.vue';\nimport NotificationPanel from '@/components/notifications/NotificationPanel.vue';\nimport * as bootstrap from 'bootstrap';\nexport default {\n  name: 'LecturerDashboard',\n  components: {\n    ComponentChart: ComponentChart,\n    MarkDistributionChart: MarkDistributionChart,\n    NotificationPanel: NotificationPanel\n  },\n  data: function data() {\n    return {\n      courses: [],\n      courseComponents: [],\n      marks: [],\n      selectedComponent: null,\n      notification: {\n        title: '',\n        message: '',\n        includeMarks: true\n      },\n      showNotificationPanel: false,\n      unreadNotificationCount: 0,\n      standardComponents: [{\n        name: 'Assignment',\n        type: 'assignment',\n        weightage: 25\n      }, {\n        name: 'Quiz',\n        type: 'quiz',\n        weightage: 20\n      }, {\n        name: 'Test',\n        type: 'test',\n        weightage: 25\n      }, {\n        name: 'Final Exam',\n        type: 'final_exam',\n        weightage: 30\n      }],\n      markDistribution: {\n        gradeA: 4,\n        gradeB: 7,\n        gradeC: 10,\n        gradeD: 5,\n        gradeF: 2\n      },\n      recentActivities: [{\n        title: 'Marks Updated',\n        description: 'You updated marks for Database Systems assignment',\n        time: '2 hours ago',\n        icon: 'fas fa-pen text-primary'\n      }, {\n        title: 'New Assessment Added',\n        description: 'Web Development - Midterm Exam',\n        time: '1 day ago',\n        icon: 'fas fa-plus-circle text-success'\n      }, {\n        title: 'Student Request',\n        description: 'John Smith requested a mark review',\n        time: '2 days ago',\n        icon: 'fas fa-question-circle text-warning'\n      }],\n      newCourse: {\n        code: '',\n        name: '',\n        semester: '',\n        academic_year: ''\n      },\n      editingCourse: null,\n      isEditMode: false,\n      courseToDelete: null\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters(['isLoading'])), mapGetters('auth', ['getUser'])),\n  created: function created() {\n    this.loadData();\n  },\n  methods: {\n    loadData: function loadData() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n        var _t;\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.n) {\n            case 0:\n              _context.p = 0;\n              _context.n = 1;\n              return _this.$store.dispatch('courses/fetchCourses', {\n                lecturerId: _this.getUser.id\n              });\n            case 1:\n              _this.courses = _context.v;\n              _context.n = 2;\n              return _this.loadComponentData();\n            case 2:\n              _context.n = 3;\n              return _this.loadMarkDistribution();\n            case 3:\n              _context.n = 5;\n              break;\n            case 4:\n              _context.p = 4;\n              _t = _context.v;\n              console.error('Error loading dashboard data:', _t);\n            case 5:\n              return _context.a(2);\n          }\n        }, _callee, null, [[0, 4]]);\n      }))();\n    },\n    loadComponentData: function loadComponentData() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n        var _iterator, _step, _loop, _t3;\n        return _regenerator().w(function (_context3) {\n          while (1) switch (_context3.n) {\n            case 0:\n              _this2.courseComponents = [];\n              _iterator = _createForOfIteratorHelper(_this2.courses);\n              _context3.p = 1;\n              _loop = /*#__PURE__*/_regenerator().m(function _loop() {\n                var course, response, data, _t2;\n                return _regenerator().w(function (_context2) {\n                  while (1) switch (_context2.n) {\n                    case 0:\n                      course = _step.value;\n                      _context2.p = 1;\n                      _context2.n = 2;\n                      return fetch(\"http://localhost:8080/breakdown-api.php?action=course_breakdown&course_id=\".concat(course.id));\n                    case 2:\n                      response = _context2.v;\n                      _context2.n = 3;\n                      return response.json();\n                    case 3:\n                      data = _context2.v;\n                      if (!data.error && data.component_breakdown) {\n                        data.component_breakdown.forEach(function (comp) {\n                          var _data$statistics, _data$statistics2;\n                          _this2.courseComponents.push({\n                            course_id: course.id,\n                            type: comp.type,\n                            name: comp.name,\n                            weightage: comp.weightage,\n                            completed: comp.submissions || 0,\n                            total: ((_data$statistics = data.statistics) === null || _data$statistics === void 0 ? void 0 : _data$statistics.total_students) || 0,\n                            completion_rate: ((_data$statistics2 = data.statistics) === null || _data$statistics2 === void 0 ? void 0 : _data$statistics2.total_students) > 0 ? Math.round((comp.submissions || 0) / data.statistics.total_students * 100) : 0,\n                            average: Math.round(comp.average_percentage || 0)\n                          });\n                        });\n                      }\n                      _context2.n = 5;\n                      break;\n                    case 4:\n                      _context2.p = 4;\n                      _t2 = _context2.v;\n                      console.error(\"Error loading component data for course \".concat(course.id, \":\"), _t2);\n                    case 5:\n                      return _context2.a(2);\n                  }\n                }, _loop, null, [[1, 4]]);\n              });\n              _iterator.s();\n            case 2:\n              if ((_step = _iterator.n()).done) {\n                _context3.n = 4;\n                break;\n              }\n              return _context3.d(_regeneratorValues(_loop()), 3);\n            case 3:\n              _context3.n = 2;\n              break;\n            case 4:\n              _context3.n = 6;\n              break;\n            case 5:\n              _context3.p = 5;\n              _t3 = _context3.v;\n              _iterator.e(_t3);\n            case 6:\n              _context3.p = 6;\n              _iterator.f();\n              return _context3.f(6);\n            case 7:\n              return _context3.a(2);\n          }\n        }, _callee2, null, [[1, 5, 6, 7]]);\n      }))();\n    },\n    loadMarkDistribution: function loadMarkDistribution() {\n      var _this3 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {\n        var totalA, totalB, totalC, totalD, totalF, _iterator2, _step2, course, response, data, _t4, _t5;\n        return _regenerator().w(function (_context4) {\n          while (1) switch (_context4.n) {\n            case 0:\n              // This could fetch real grade distribution data\n              // For now, we'll calculate it from the component data\n              totalA = 0, totalB = 0, totalC = 0, totalD = 0, totalF = 0;\n              _iterator2 = _createForOfIteratorHelper(_this3.courses);\n              _context4.p = 1;\n              _iterator2.s();\n            case 2:\n              if ((_step2 = _iterator2.n()).done) {\n                _context4.n = 8;\n                break;\n              }\n              course = _step2.value;\n              _context4.p = 3;\n              _context4.n = 4;\n              return fetch(\"http://localhost:8080/marks-api.php?action=course_students_with_marks&course_id=\".concat(course.id));\n            case 4:\n              response = _context4.v;\n              _context4.n = 5;\n              return response.json();\n            case 5:\n              data = _context4.v;\n              if (data.success && data.students) {\n                data.students.forEach(function (student) {\n                  var grade = student.letter_grade;\n                  if (grade === 'A' || grade === 'A+' || grade === 'A-') totalA++;else if (grade === 'B' || grade === 'B+' || grade === 'B-') totalB++;else if (grade === 'C' || grade === 'C+' || grade === 'C-') totalC++;else if (grade === 'D' || grade === 'D+' || grade === 'D-') totalD++;else totalF++;\n                });\n              }\n              _context4.n = 7;\n              break;\n            case 6:\n              _context4.p = 6;\n              _t4 = _context4.v;\n              console.error(\"Error loading marks for course \".concat(course.id, \":\"), _t4);\n            case 7:\n              _context4.n = 2;\n              break;\n            case 8:\n              _context4.n = 10;\n              break;\n            case 9:\n              _context4.p = 9;\n              _t5 = _context4.v;\n              _iterator2.e(_t5);\n            case 10:\n              _context4.p = 10;\n              _iterator2.f();\n              return _context4.f(10);\n            case 11:\n              _this3.markDistribution = {\n                gradeA: totalA,\n                gradeB: totalB,\n                gradeC: totalC,\n                gradeD: totalD,\n                gradeF: totalF\n              };\n            case 12:\n              return _context4.a(2);\n          }\n        }, _callee3, null, [[3, 6], [1, 9, 10, 11]]);\n      }))();\n    },\n    getComponentTypeBadgeClass: function getComponentTypeBadgeClass(type) {\n      switch (type) {\n        case 'assignment':\n          return 'bg-success';\n        case 'quiz':\n          return 'bg-info';\n        case 'test':\n          return 'bg-warning';\n        case 'final_exam':\n          return 'bg-danger';\n        default:\n          return 'bg-secondary';\n      }\n    },\n    getMarkClass: function getMarkClass(markValue) {\n      if (markValue >= 70) return 'text-success fw-bold';\n      if (markValue >= 50) return 'text-warning';\n      return 'text-danger';\n    },\n    exportMarksToCSV: function exportMarksToCSV() {\n      // Export component marks to CSV\n      this.$store.dispatch('showToast', {\n        message: 'Exporting component marks to CSV...',\n        type: 'info'\n      });\n    },\n    getAssessmentCountForCourse: function getAssessmentCountForCourse(courseId) {\n      return this.assessments.filter(function (a) {\n        return a.course_id === courseId;\n      }).length;\n    },\n    getCourseNameById: function getCourseNameById(courseId) {\n      var course = this.courses.find(function (c) {\n        return c.id === courseId;\n      });\n      return course ? \"\".concat(course.code, \" - \").concat(course.name) : 'Unknown Course';\n    },\n    getAssessmentTypeBadgeClass: function getAssessmentTypeBadgeClass(type) {\n      // Keep this for backward compatibility if needed\n      switch (type) {\n        case 'quiz':\n          return 'bg-info';\n        case 'assignment':\n          return 'bg-primary';\n        case 'midterm':\n          return 'bg-warning';\n        case 'final_exam':\n          return 'bg-danger';\n        default:\n          return 'bg-secondary';\n      }\n    },\n    formatDate: function formatDate(dateString) {\n      if (!dateString) return 'Not scheduled';\n      var date = new Date(dateString);\n      return date.toLocaleDateString('en-GB', {\n        day: 'numeric',\n        month: 'short',\n        year: 'numeric'\n      });\n    },\n    isPending: function isPending() {\n      // Simple logic to determine if an assessment is pending\n      // In a real app, this would check if all students have marks for this assessment\n      return true;\n    },\n    openAddCourseModal: function openAddCourseModal() {\n      // Reset the form for adding new course\n      this.newCourse = {\n        code: '',\n        name: '',\n        semester: '',\n        academic_year: ''\n      };\n      this.isEditMode = false;\n      this.editingCourse = null;\n\n      // Open the modal using Bootstrap's JavaScript\n      var modal = new bootstrap.Modal(document.getElementById('addCourseModal'));\n      modal.show();\n    },\n    editCourse: function editCourse(course) {\n      // Populate the form with course data for editing\n      this.newCourse = {\n        code: course.code,\n        name: course.name,\n        semester: course.semester || '',\n        academic_year: course.academic_year || ''\n      };\n      this.isEditMode = true;\n      this.editingCourse = course;\n\n      // Open the modal using Bootstrap's JavaScript\n      var modal = new bootstrap.Modal(document.getElementById('addCourseModal'));\n      modal.show();\n    },\n    saveCourse: function saveCourse() {\n      var _this4 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4() {\n        var courseData, modalElement, modal, _t6;\n        return _regenerator().w(function (_context5) {\n          while (1) switch (_context5.n) {\n            case 0:\n              _context5.p = 0;\n              if (!_this4.isEditMode) {\n                _context5.n = 2;\n                break;\n              }\n              _context5.n = 1;\n              return _this4.$store.dispatch('courses/updateCourse', {\n                courseId: _this4.editingCourse.id,\n                courseData: _this4.newCourse\n              });\n            case 1:\n              _this4.$store.dispatch('showToast', {\n                message: 'Course updated successfully!',\n                type: 'success'\n              });\n              _context5.n = 4;\n              break;\n            case 2:\n              // Create new course\n              courseData = _objectSpread(_objectSpread({}, _this4.newCourse), {}, {\n                lecturer_id: _this4.getUser.id\n              });\n              _context5.n = 3;\n              return _this4.$store.dispatch('courses/createCourse', courseData);\n            case 3:\n              _this4.$store.dispatch('showToast', {\n                message: 'Course created successfully!',\n                type: 'success'\n              });\n            case 4:\n              // Close the modal\n              modalElement = document.getElementById('addCourseModal');\n              modal = bootstrap.Modal.getInstance(modalElement);\n              modal.hide();\n\n              // Reload courses\n              _this4.loadData();\n              _context5.n = 6;\n              break;\n            case 5:\n              _context5.p = 5;\n              _t6 = _context5.v;\n              console.error('Error saving course:', _t6);\n              _this4.$store.dispatch('showToast', {\n                message: 'Error saving course. Please try again.',\n                type: 'error'\n              });\n            case 6:\n              return _context5.a(2);\n          }\n        }, _callee4, null, [[0, 5]]);\n      }))();\n    },\n    confirmDeleteCourse: function confirmDeleteCourse(course) {\n      this.courseToDelete = course;\n\n      // Open the delete confirmation modal\n      var modal = new bootstrap.Modal(document.getElementById('deleteCourseModal'));\n      modal.show();\n    },\n    deleteCourse: function deleteCourse() {\n      var _this5 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee5() {\n        var modalElement, modal, _t7;\n        return _regenerator().w(function (_context6) {\n          while (1) switch (_context6.n) {\n            case 0:\n              _context6.p = 0;\n              _context6.n = 1;\n              return _this5.$store.dispatch('courses/deleteCourse', _this5.courseToDelete.id);\n            case 1:\n              // Close the modal\n              modalElement = document.getElementById('deleteCourseModal');\n              modal = bootstrap.Modal.getInstance(modalElement);\n              modal.hide();\n              _this5.$store.dispatch('showToast', {\n                message: 'Course deleted successfully!',\n                type: 'success'\n              });\n\n              // Reload courses\n              _this5.loadData();\n\n              // Clear the course to delete\n              _this5.courseToDelete = null;\n              _context6.n = 3;\n              break;\n            case 2:\n              _context6.p = 2;\n              _t7 = _context6.v;\n              console.error('Error deleting course:', _t7);\n              _this5.$store.dispatch('showToast', {\n                message: 'Error deleting course. Please try again.',\n                type: 'error'\n              });\n            case 3:\n              return _context6.a(2);\n          }\n        }, _callee5, null, [[0, 2]]);\n      }))();\n    },\n    addCourse: function addCourse() {\n      var _this6 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee6() {\n        return _regenerator().w(function (_context7) {\n          while (1) switch (_context7.n) {\n            case 0:\n              _context7.n = 1;\n              return _this6.saveCourse();\n            case 1:\n              return _context7.a(2);\n          }\n        }, _callee6);\n      }))();\n    },\n    exportCoursesToCSV: function exportCoursesToCSV() {\n      var _this7 = this;\n      if (!this.courses.length) {\n        alert('No courses to export');\n        return;\n      }\n\n      // Convert courses data to CSV format\n      var headers = ['ID', 'Code', 'Name', 'Semester', 'Academic Year', 'Number of Assessments'];\n      var csvContent = headers.join(',') + '\\n';\n      this.courses.forEach(function (course) {\n        var assessmentCount = _this7.getAssessmentCountForCourse(course.id);\n        var row = [course.id, course.code, \"\\\"\".concat(course.name, \"\\\"\"),\n        // Quotes to handle commas in names\n        course.semester || 'Not specified', course.academic_year || 'Not specified', assessmentCount];\n        csvContent += row.join(',') + '\\n';\n      });\n\n      // Create and trigger download\n      this.downloadCSV(csvContent, 'courses.csv');\n    },\n    exportAssessmentsToCSV: function exportAssessmentsToCSV() {\n      var _this8 = this;\n      if (!this.assessments.length) {\n        alert('No assessments to export');\n        return;\n      }\n\n      // Convert assessments data to CSV format\n      var headers = ['ID', 'Course', 'Name', 'Type', 'Date', 'Max Mark', 'Weightage', 'Status'];\n      var csvContent = headers.join(',') + '\\n';\n      this.assessments.forEach(function (assessment) {\n        var row = [assessment.id, \"\\\"\".concat(_this8.getCourseNameById(assessment.course_id), \"\\\"\"), \"\\\"\".concat(assessment.name, \"\\\"\"), assessment.type, assessment.date || 'Not scheduled', assessment.max_mark, \"\".concat(assessment.weightage, \"%\"), _this8.isPending(assessment) ? 'Pending' : 'Completed'];\n        csvContent += row.join(',') + '\\n';\n      });\n\n      // Create and trigger download\n      this.downloadCSV(csvContent, 'assessments.csv');\n    },\n    downloadCSV: function downloadCSV(csvContent, fileName) {\n      // Create a Blob with the CSV content\n      var blob = new Blob([csvContent], {\n        type: 'text/csv;charset=utf-8;'\n      });\n      var url = URL.createObjectURL(blob);\n\n      // Create a temporary link and trigger download\n      var link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', fileName);\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    },\n    openNotificationModal: function openNotificationModal(component) {\n      // Set the selected component (instead of assessment)\n      this.selectedAssessment = {\n        course_id: component.course_id,\n        name: component.name,\n        type: component.type\n      };\n\n      // Pre-fill notification fields\n      var courseName = this.getCourseNameById(component.course_id);\n      this.notification = {\n        title: \"\".concat(component.name, \" Update\"),\n        message: \"Dear Students,\\n\\nThe marks for \".concat(component.name, \" in \").concat(courseName, \" have been updated. Please login to view your results.\\n\\nRegards,\\n\").concat(this.getUser.name),\n        includeMarks: true\n      };\n\n      // Open the modal\n      var modal = new bootstrap.Modal(document.getElementById('notifyStudentsModal'));\n      modal.show();\n    },\n    sendNotification: function sendNotification() {\n      var _this9 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee7() {\n        var response, data, newActivity, modalElement, modal, _t8;\n        return _regenerator().w(function (_context8) {\n          while (1) switch (_context8.n) {\n            case 0:\n              _context8.p = 0;\n              _context8.n = 1;\n              return fetch('http://localhost:8080/marks-api.php', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                credentials: 'include',\n                body: JSON.stringify({\n                  action: 'send_course_announcement',\n                  course_id: _this9.selectedAssessment.course_id,\n                  lecturer_id: _this9.getUser.id,\n                  title: _this9.notification.title,\n                  message: _this9.notification.message,\n                  include_marks: _this9.notification.includeMarks\n                })\n              });\n            case 1:\n              response = _context8.v;\n              _context8.n = 2;\n              return response.json();\n            case 2:\n              data = _context8.v;\n              if (!data.success) {\n                _context8.n = 3;\n                break;\n              }\n              _this9.$store.dispatch('showToast', {\n                message: \"Notification sent successfully to \".concat(data.notifications_sent, \" students!\"),\n                type: 'success'\n              });\n\n              // Add to recent activities\n              newActivity = {\n                title: 'Students Notified',\n                description: \"\".concat(_this9.notification.title, \" - \").concat(_this9.getCourseNameById(_this9.selectedAssessment.course_id)),\n                time: 'Just now',\n                icon: 'fas fa-bell text-success'\n              };\n              _this9.recentActivities.unshift(newActivity);\n              if (_this9.recentActivities.length > 5) {\n                _this9.recentActivities.pop();\n              }\n\n              // Close the modal\n              modalElement = document.getElementById('notifyStudentsModal');\n              modal = bootstrap.Modal.getInstance(modalElement);\n              modal.hide();\n              _context8.n = 4;\n              break;\n            case 3:\n              throw new Error(data.error || 'Failed to send notification');\n            case 4:\n              _context8.n = 6;\n              break;\n            case 5:\n              _context8.p = 5;\n              _t8 = _context8.v;\n              console.error('Error sending notification:', _t8);\n              _this9.$store.dispatch('showToast', {\n                message: 'Failed to send notification. Please try again.',\n                type: 'error'\n              });\n            case 6:\n              return _context8.a(2);\n          }\n        }, _callee7, null, [[0, 5]]);\n      }))();\n    },\n    logout: function logout() {\n      if (confirm('Are you sure you want to logout?')) {\n        this.$store.dispatch('auth/logout');\n        this.$router.push('/login');\n      }\n    },\n    toggleNotificationPanel: function toggleNotificationPanel() {\n      this.showNotificationPanel = !this.showNotificationPanel;\n      if (this.showNotificationPanel) {\n        this.loadUnreadCount();\n      }\n    },\n    loadUnreadCount: function loadUnreadCount() {\n      var _this0 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee8() {\n        var response, data, _t9;\n        return _regenerator().w(function (_context9) {\n          while (1) switch (_context9.n) {\n            case 0:\n              _context9.p = 0;\n              _context9.n = 1;\n              return fetch(\"http://localhost:8080/marks-api.php?action=unread_notifications&user_id=\".concat(_this0.getUser.id), {\n                credentials: 'include'\n              });\n            case 1:\n              response = _context9.v;\n              _context9.n = 2;\n              return response.json();\n            case 2:\n              data = _context9.v;\n              _this0.unreadNotificationCount = data.unread_count || 0;\n              _context9.n = 4;\n              break;\n            case 3:\n              _context9.p = 3;\n              _t9 = _context9.v;\n              console.error('Error loading unread notification count:', _t9);\n            case 4:\n              return _context9.a(2);\n          }\n        }, _callee8, null, [[0, 3]]);\n      }))();\n    },\n    handleNotificationClick: function handleNotificationClick(notification) {\n      // Handle different notification types\n      switch (notification.type) {\n        case 'mark':\n          // Navigate to course marks if related_id is a course_id\n          if (notification.related_id) {\n            this.$router.push(\"/lecturer/course/\".concat(notification.related_id));\n          }\n          break;\n        case 'course':\n          // Navigate to course details\n          if (notification.related_id) {\n            this.$router.push(\"/lecturer/course/\".concat(notification.related_id));\n          }\n          break;\n        default:\n          // Show notification content as a toast for other types\n          this.$store.dispatch('showToast', {\n            message: notification.content,\n            type: 'info',\n            timeout: 8000\n          });\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","ComponentChart","MarkDistributionChart","NotificationPanel","bootstrap","name","components","data","courses","courseComponents","marks","selectedComponent","notification","title","message","includeMarks","showNotificationPanel","unreadNotificationCount","standardComponents","type","weightage","markDistribution","gradeA","gradeB","gradeC","gradeD","gradeF","recentActivities","description","time","icon","newCourse","code","semester","academic_year","editingCourse","isEditMode","courseToDelete","computed","_objectSpread","created","loadData","methods","_this","_asyncToGenerator","_regenerator","m","_callee","_t","w","_context","n","p","$store","dispatch","lecturerId","getUser","id","v","loadComponentData","loadMarkDistribution","console","error","a","_this2","_callee2","_iterator","_step","_loop","_t3","_context3","_createForOfIteratorHelper","course","response","_t2","_context2","value","fetch","concat","json","component_breakdown","forEach","comp","_data$statistics","_data$statistics2","push","course_id","completed","submissions","total","statistics","total_students","completion_rate","Math","round","average","average_percentage","s","done","d","_regeneratorValues","e","f","_this3","_callee3","totalA","totalB","totalC","totalD","totalF","_iterator2","_step2","_t4","_t5","_context4","success","students","student","grade","letter_grade","getComponentTypeBadgeClass","getMarkClass","markValue","exportMarksToCSV","getAssessmentCountForCourse","courseId","assessments","filter","length","getCourseNameById","find","c","getAssessmentTypeBadgeClass","formatDate","dateString","date","Date","toLocaleDateString","day","month","year","isPending","openAddCourseModal","modal","Modal","document","getElementById","show","editCourse","saveCourse","_this4","_callee4","courseData","modalElement","_t6","_context5","lecturer_id","getInstance","hide","confirmDeleteCourse","deleteCourse","_this5","_callee5","_t7","_context6","addCourse","_this6","_callee6","_context7","exportCoursesToCSV","_this7","alert","headers","csvContent","join","assessmentCount","row","downloadCSV","exportAssessmentsToCSV","_this8","assessment","max_mark","fileName","blob","Blob","url","URL","createObjectURL","link","createElement","href","setAttribute","body","appendChild","click","removeChild","openNotificationModal","component","selectedAssessment","courseName","sendNotification","_this9","_callee7","newActivity","_t8","_context8","method","credentials","JSON","stringify","action","include_marks","notifications_sent","unshift","pop","Error","logout","confirm","$router","toggleNotificationPanel","loadUnreadCount","_this0","_callee8","_t9","_context9","unread_count","handleNotificationClick","related_id","content","timeout"],"sources":["C:\\Users\\ansmu\\Desktop\\Web\\NEW\\course-mark-management\\frontend\\src\\views\\lecturer\\Dashboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"dashboard\">\r\n    <!-- Dashboard Header -->\r\n    <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n      <div>\r\n        <h1 class=\"mb-1\">Lecturer Dashboard</h1>\r\n        <p class=\"text-muted mb-0\">Welcome back, {{ getUser.name }}</p>\r\n      </div>\r\n      <div class=\"d-flex align-items-center gap-3\">\r\n        <router-link \r\n          to=\"/lecturer/marks\" \r\n          class=\"btn btn-success\"\r\n          title=\"Manage Marks\"\r\n        >\r\n          <i class=\"fas fa-graduation-cap me-2\"></i>Manage Marks\r\n        </router-link>\r\n        <router-link \r\n          to=\"/lecturer/feedback\" \r\n          class=\"btn btn-info\"\r\n          title=\"Student Feedback\"\r\n        >\r\n          <i class=\"fas fa-comments me-2\"></i>Student Feedback\r\n        </router-link>\r\n        <div class=\"user-info text-end\">\r\n          <small class=\"text-muted d-block\">{{ getUser.email }}</small>\r\n          <small class=\"badge bg-primary\">{{ getUser.role }}</small>\r\n        </div>\r\n        <div class=\"position-relative\">\r\n          <button \r\n            class=\"btn btn-outline-secondary\"\r\n            @click=\"toggleNotificationPanel\"\r\n            title=\"Notifications\"\r\n          >\r\n            <i class=\"fas fa-bell\"></i>\r\n            <span \r\n              v-if=\"unreadNotificationCount > 0\" \r\n              class=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger\"\r\n            >\r\n              {{ unreadNotificationCount }}\r\n            </span>\r\n          </button>\r\n        </div>\r\n        <button class=\"btn btn-outline-danger\" @click=\"logout\" title=\"Logout\">\r\n          <i class=\"fas fa-sign-out-alt me-2\"></i>Logout\r\n        </button>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Notification Panel (collapsible) -->\r\n    <div v-if=\"showNotificationPanel\" class=\"row mb-4\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n            <NotificationPanel \r\n              :user-id=\"getUser.id\"\r\n              @notification-clicked=\"handleNotificationClick\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"row\">\r\n      <div class=\"col-md-6 mb-4\">\r\n        <div class=\"card h-100\">\r\n          <div class=\"card-body\">\r\n            <div class=\"d-flex justify-content-between align-items-center mb-3\">\r\n              <h5 class=\"card-title mb-0\">My Courses</h5>\r\n              <div class=\"btn-group\">\r\n                <button class=\"btn btn-success btn-sm\" @click=\"openAddCourseModal\">\r\n                  <i class=\"fas fa-plus me-2\"></i>Add Course\r\n                </button>\r\n                <button class=\"btn btn-outline-secondary btn-sm\" @click=\"exportCoursesToCSV\">\r\n                  <i class=\"fas fa-file-export me-2\"></i>Export CSV\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <p class=\"card-text text-muted\">Manage and view courses you are teaching this semester</p>\r\n            \r\n            <div v-if=\"isLoading\" class=\"text-center\">\r\n              <div class=\"spinner-border text-primary\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>\r\n            \r\n            <div v-else-if=\"courses.length === 0\" class=\"text-center py-4\">\r\n              <i class=\"fas fa-book-open text-muted mb-3\" style=\"font-size: 3rem;\"></i>\r\n              <h6 class=\"text-muted\">No courses yet</h6>\r\n              <p class=\"text-muted small\">Start by creating your first course to manage assessments and student marks.</p>\r\n              <button class=\"btn btn-primary\" @click=\"openAddCourseModal\">\r\n                <i class=\"fas fa-plus-circle me-2\"></i> Create Your First Course\r\n              </button>\r\n            </div>\r\n            \r\n            <div v-else class=\"list-group\">\r\n              <div v-for=\"course in courses\" :key=\"course.id\" class=\"list-group-item\">\r\n                <div class=\"d-flex justify-content-between align-items-center\">\r\n                  <div class=\"flex-grow-1\">\r\n                    <router-link \r\n                      :to=\"`/lecturer/course/${course.id}`\" \r\n                      class=\"text-decoration-none\"\r\n                    >\r\n                      <strong>{{ course.code }}</strong> - {{ course.name }}\r\n                      <div class=\"text-muted small\">\r\n                        {{ course.semester || 'No semester' }} | {{ course.academic_year || 'No year' }}\r\n                      </div>\r\n                    </router-link>\r\n                  </div>\r\n                  <div class=\"d-flex align-items-center gap-2\">\r\n                    <span class=\"badge bg-primary rounded-pill\">\r\n                      4 components\r\n                    </span>\r\n                    <div class=\"btn-group\" role=\"group\">\r\n                      <router-link \r\n                        :to=\"`/lecturer/course/${course.id}/enrollments`\" \r\n                        class=\"btn btn-sm btn-outline-info\"\r\n                        title=\"Manage Enrollments\"\r\n                      >\r\n                        <i class=\"fas fa-users\"></i>\r\n                      </router-link>\r\n                      <router-link \r\n                        :to=\"`/lecturer/course/${course.id}/marks`\" \r\n                        class=\"btn btn-sm btn-outline-success\"\r\n                        title=\"Manage Marks\"\r\n                      >\r\n                        <i class=\"fas fa-graduation-cap\"></i>\r\n                      </router-link>\r\n                      <router-link \r\n                        :to=\"`/lecturer/breakdown/${course.id}`\" \r\n                        class=\"btn btn-sm btn-outline-warning\"\r\n                        title=\"View Mark Breakdown\"\r\n                      >\r\n                        <i class=\"fas fa-chart-bar\"></i>\r\n                      </router-link>\r\n                      <button \r\n                        class=\"btn btn-sm btn-outline-primary\" \r\n                        @click=\"editCourse(course)\"\r\n                        title=\"Edit Course\"\r\n                      >\r\n                        <i class=\"fas fa-edit\"></i>\r\n                      </button>\r\n                      <button \r\n                        class=\"btn btn-sm btn-outline-danger\" \r\n                        @click=\"confirmDeleteCourse(course)\"\r\n                        title=\"Delete Course\"\r\n                      >\r\n                        <i class=\"fas fa-trash\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"col-md-6 mb-4\">\r\n        <div class=\"card h-100\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Recent Activity</h5>\r\n            <p class=\"card-text text-muted mb-4\">Latest updates and actions</p>\r\n            \r\n            <div class=\"timeline\">\r\n              <div class=\"timeline-item\" v-for=\"(activity, index) in recentActivities\" :key=\"index\">\r\n                <div class=\"timeline-item-icon\">\r\n                  <i :class=\"activity.icon\"></i>\r\n                </div>\r\n                <div class=\"timeline-item-content\">\r\n                  <h6>{{ activity.title }}</h6>\r\n                  <p class=\"text-muted mb-0\">{{ activity.description }}</p>\r\n                  <small class=\"text-muted\">{{ activity.time }}</small>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Analytics Charts Row -->\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6 mb-4\">\r\n        <div class=\"card h-100\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Component Types</h5>\r\n            <p class=\"card-text text-muted mb-3\">Standard component weightage distribution</p>\r\n            <ComponentChart :components=\"standardComponents\" :height=\"250\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"col-md-6 mb-4\">\r\n        <div class=\"card h-100\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Mark Distribution</h5>\r\n            <p class=\"card-text text-muted mb-3\">Overview of student performance</p>\r\n            <MarkDistributionChart :mark-data=\"markDistribution\" :height=\"250\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 mb-4\">\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n            <div class=\"d-flex justify-content-between align-items-center mb-2\">\r\n              <h5 class=\"card-title mb-0\">Component Overview</h5>\r\n              <button class=\"btn btn-sm btn-success\" @click=\"exportMarksToCSV\">\r\n                <i class=\"fas fa-file-export me-2\"></i>Export Marks\r\n              </button>\r\n            </div>\r\n            <p class=\"card-text text-muted mb-4\">Current status of component marks across all courses</p>\r\n            \r\n            <div v-if=\"isLoading\" class=\"text-center\">\r\n              <div class=\"spinner-border text-primary\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>\r\n            \r\n            <table v-else class=\"table table-hover\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Course</th>\r\n                  <th>Component</th>\r\n                  <th>Weightage</th>\r\n                  <th>Completed</th>\r\n                  <th>Average</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr v-for=\"component in courseComponents\" :key=\"`${component.course_id}-${component.type}`\">\r\n                  <td>{{ getCourseNameById(component.course_id) }}</td>\r\n                  <td>\r\n                    <span class=\"badge\" :class=\"getComponentTypeBadgeClass(component.type)\">\r\n                      {{ component.name }}\r\n                    </span>\r\n                  </td>\r\n                  <td>{{ component.weightage }}%</td>\r\n                  <td>\r\n                    <span class=\"badge\" :class=\"component.completion_rate >= 80 ? 'bg-success' : component.completion_rate >= 50 ? 'bg-warning' : 'bg-danger'\">\r\n                      {{ component.completed }}/{{ component.total }} ({{ component.completion_rate }}%)\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <span :class=\"getMarkClass(component.average)\">\r\n                      {{ component.average }}%\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <div class=\"btn-group btn-group-sm\" role=\"group\">\r\n                      <router-link :to=\"`/lecturer/course/${component.course_id}/marks`\" class=\"btn btn-outline-primary\" :title=\"`Manage ${component.name} marks`\">\r\n                        <i class=\"fas fa-edit\"></i>\r\n                      </router-link>\r\n                      <router-link :to=\"`/lecturer/breakdown/${component.course_id}`\" class=\"btn btn-outline-info\" title=\"View detailed breakdown\">\r\n                        <i class=\"fas fa-chart-bar\"></i>\r\n                      </router-link>\r\n                      <button \r\n                        class=\"btn btn-outline-success\" \r\n                        @click=\"openNotificationModal(component)\"\r\n                        :title=\"`Notify students about ${component.name} marks`\"\r\n                      >\r\n                        <i class=\"fas fa-bell\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                \r\n                <tr v-if=\"courseComponents.length === 0\">\r\n                  <td colspan=\"6\" class=\"text-center\">No component data available</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Add/Edit Course Modal -->\r\n    <div class=\"modal fade\" id=\"addCourseModal\" tabindex=\"-1\" aria-labelledby=\"addCourseModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"addCourseModalLabel\">\r\n              {{ isEditMode ? 'Edit Course' : 'Add New Course' }}\r\n            </h5>\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <form @submit.prevent=\"saveCourse\">\r\n              <div class=\"mb-3\">\r\n                <label for=\"courseCode\" class=\"form-label\">Course Code</label>\r\n                <input \r\n                  type=\"text\" \r\n                  class=\"form-control\" \r\n                  id=\"courseCode\" \r\n                  v-model=\"newCourse.code\" \r\n                  required\r\n                  placeholder=\"e.g., CS101\"\r\n                >\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label for=\"courseName\" class=\"form-label\">Course Name</label>\r\n                <input \r\n                  type=\"text\" \r\n                  class=\"form-control\" \r\n                  id=\"courseName\" \r\n                  v-model=\"newCourse.name\" \r\n                  required\r\n                  placeholder=\"e.g., Introduction to Computer Science\"\r\n                >\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"mb-3\">\r\n                    <label for=\"semester\" class=\"form-label\">Semester</label>\r\n                    <select class=\"form-control\" id=\"semester\" v-model=\"newCourse.semester\">\r\n                      <option value=\"\">Select Semester</option>\r\n                      <option value=\"Fall\">Fall</option>\r\n                      <option value=\"Spring\">Spring</option>\r\n                      <option value=\"Summer\">Summer</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"mb-3\">\r\n                    <label for=\"academicYear\" class=\"form-label\">Academic Year</label>\r\n                    <input \r\n                      type=\"text\" \r\n                      class=\"form-control\" \r\n                      id=\"academicYear\" \r\n                      v-model=\"newCourse.academic_year\"\r\n                      placeholder=\"e.g., 2025-2026\"\r\n                    >\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"d-flex justify-content-end gap-2\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\r\n                <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"isLoading\">\r\n                  <span v-if=\"isLoading\" class=\"spinner-border spinner-border-sm me-2\"></span>\r\n                  {{ isEditMode ? 'Update Course' : 'Save Course' }}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Delete Course Confirmation Modal -->\r\n    <div class=\"modal fade\" id=\"deleteCourseModal\" tabindex=\"-1\" aria-labelledby=\"deleteCourseModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"deleteCourseModalLabel\">Confirm Delete Course</h5>\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div v-if=\"courseToDelete\">\r\n              <div class=\"alert alert-warning\">\r\n                <i class=\"fas fa-exclamation-triangle me-2\"></i>\r\n                <strong>Warning:</strong> This action cannot be undone.\r\n              </div>\r\n              <p>Are you sure you want to delete the following course?</p>\r\n              <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                  <h6 class=\"card-title\">{{ courseToDelete.code }} - {{ courseToDelete.name }}</h6>\r\n                  <p class=\"card-text text-muted small\">\r\n                    {{ courseToDelete.semester || 'No semester' }} | {{ courseToDelete.academic_year || 'No year' }}\r\n                  </p>\r\n                  <p class=\"card-text\">\r\n                    <span class=\"badge bg-primary\">\r\n                      {{ getAssessmentCountForCourse(courseToDelete.id) }} assessments\r\n                    </span>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <p class=\"text-danger mt-3\">\r\n                <strong>Note:</strong> Deleting this course will also remove all associated assessments and marks.\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\r\n            <button \r\n              type=\"button\" \r\n              class=\"btn btn-danger\" \r\n              @click=\"deleteCourse\"\r\n              :disabled=\"isLoading\"\r\n            >\r\n              <span v-if=\"isLoading\" class=\"spinner-border spinner-border-sm me-2\"></span>\r\n              Delete Course\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Notify Students Modal -->\r\n    <div class=\"modal fade\" id=\"notifyStudentsModal\" tabindex=\"-1\" aria-labelledby=\"notifyStudentsModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"notifyStudentsModalLabel\">Notify Students</h5>\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div v-if=\"selectedAssessment\">\r\n              <p><strong>Course:</strong> {{ getCourseNameById(selectedAssessment.course_id) }}</p>\r\n              <p><strong>Assessment:</strong> {{ selectedAssessment.name }} ({{ selectedAssessment.type }})</p>\r\n              \r\n              <form @submit.prevent=\"sendNotification\">\r\n                <div class=\"mb-3\">\r\n                  <label for=\"notificationTitle\" class=\"form-label\">Notification Title</label>\r\n                  <input type=\"text\" class=\"form-control\" id=\"notificationTitle\" v-model=\"notification.title\" required>\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                  <label for=\"notificationMessage\" class=\"form-label\">Message</label>\r\n                  <textarea class=\"form-control\" id=\"notificationMessage\" rows=\"4\" v-model=\"notification.message\" required></textarea>\r\n                </div>\r\n                <div class=\"form-check mb-3\">\r\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"includeMarks\" v-model=\"notification.includeMarks\">\r\n                  <label class=\"form-check-label\" for=\"includeMarks\">\r\n                    Include marks in notification\r\n                  </label>\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-primary\">Send Notification</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex';\r\nimport ComponentChart from '@/components/charts/ComponentChart.vue';\r\nimport MarkDistributionChart from '@/components/charts/MarkDistributionChart.vue';\r\nimport NotificationPanel from '@/components/notifications/NotificationPanel.vue';\r\nimport * as bootstrap from 'bootstrap';\r\n\r\nexport default {\r\n  name: 'LecturerDashboard',\r\n  components: {\r\n    ComponentChart,\r\n    MarkDistributionChart,\r\n    NotificationPanel\r\n  },\r\n  data() {\r\n    return {\r\n      courses: [],\r\n      courseComponents: [],\r\n      marks: [],\r\n      selectedComponent: null,\r\n      notification: {\r\n        title: '',\r\n        message: '',\r\n        includeMarks: true\r\n      },\r\n      showNotificationPanel: false,\r\n      unreadNotificationCount: 0,\r\n      standardComponents: [\r\n        { name: 'Assignment', type: 'assignment', weightage: 25 },\r\n        { name: 'Quiz', type: 'quiz', weightage: 20 },\r\n        { name: 'Test', type: 'test', weightage: 25 },\r\n        { name: 'Final Exam', type: 'final_exam', weightage: 30 }\r\n      ],\r\n      markDistribution: {\r\n        gradeA: 4,\r\n        gradeB: 7,\r\n        gradeC: 10,\r\n        gradeD: 5,\r\n        gradeF: 2\r\n      },\r\n      recentActivities: [\r\n        {\r\n          title: 'Marks Updated',\r\n          description: 'You updated marks for Database Systems assignment',\r\n          time: '2 hours ago',\r\n          icon: 'fas fa-pen text-primary'\r\n        },\r\n        {\r\n          title: 'New Assessment Added',\r\n          description: 'Web Development - Midterm Exam',\r\n          time: '1 day ago',\r\n          icon: 'fas fa-plus-circle text-success'\r\n        },\r\n        {\r\n          title: 'Student Request',\r\n          description: 'John Smith requested a mark review',\r\n          time: '2 days ago',\r\n          icon: 'fas fa-question-circle text-warning'\r\n        }\r\n      ],\r\n      newCourse: {\r\n        code: '',\r\n        name: '',\r\n        semester: '',\r\n        academic_year: ''\r\n      },\r\n      editingCourse: null,\r\n      isEditMode: false,\r\n      courseToDelete: null\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters(['isLoading']),\r\n    ...mapGetters('auth', ['getUser'])\r\n  },\r\n  created() {\r\n    this.loadData();\r\n  },\r\n  methods: {\r\n    async loadData() {\r\n      try {\r\n        // Fetch courses for the current lecturer\r\n        this.courses = await this.$store.dispatch('courses/fetchCourses', {\r\n          lecturerId: this.getUser.id\r\n        });\r\n        \r\n        // Fetch component data for all courses\r\n        await this.loadComponentData();\r\n        \r\n        // Update mark distribution with real data\r\n        await this.loadMarkDistribution();\r\n      } catch (error) {\r\n        console.error('Error loading dashboard data:', error);\r\n      }\r\n    },\r\n    \r\n    async loadComponentData() {\r\n      this.courseComponents = [];\r\n      \r\n      for (const course of this.courses) {\r\n        try {\r\n          const response = await fetch(`http://localhost:8080/breakdown-api.php?action=course_breakdown&course_id=${course.id}`);\r\n          const data = await response.json();\r\n          \r\n          if (!data.error && data.component_breakdown) {\r\n            data.component_breakdown.forEach(comp => {\r\n              this.courseComponents.push({\r\n                course_id: course.id,\r\n                type: comp.type,\r\n                name: comp.name,\r\n                weightage: comp.weightage,\r\n                completed: comp.submissions || 0,\r\n                total: data.statistics?.total_students || 0,\r\n                completion_rate: data.statistics?.total_students > 0 ? \r\n                  Math.round(((comp.submissions || 0) / data.statistics.total_students) * 100) : 0,\r\n                average: Math.round(comp.average_percentage || 0)\r\n              });\r\n            });\r\n          }\r\n        } catch (error) {\r\n          console.error(`Error loading component data for course ${course.id}:`, error);\r\n        }\r\n      }\r\n    },\r\n    \r\n    async loadMarkDistribution() {\r\n      // This could fetch real grade distribution data\r\n      // For now, we'll calculate it from the component data\r\n      let totalA = 0, totalB = 0, totalC = 0, totalD = 0, totalF = 0;\r\n      \r\n      for (const course of this.courses) {\r\n        try {\r\n          const response = await fetch(`http://localhost:8080/marks-api.php?action=course_students_with_marks&course_id=${course.id}`);\r\n          const data = await response.json();\r\n          \r\n          if (data.success && data.students) {\r\n            data.students.forEach(student => {\r\n              const grade = student.letter_grade;\r\n              if (grade === 'A' || grade === 'A+' || grade === 'A-') totalA++;\r\n              else if (grade === 'B' || grade === 'B+' || grade === 'B-') totalB++;\r\n              else if (grade === 'C' || grade === 'C+' || grade === 'C-') totalC++;\r\n              else if (grade === 'D' || grade === 'D+' || grade === 'D-') totalD++;\r\n              else totalF++;\r\n            });\r\n          }\r\n        } catch (error) {\r\n          console.error(`Error loading marks for course ${course.id}:`, error);\r\n        }\r\n      }\r\n      \r\n      this.markDistribution = {\r\n        gradeA: totalA,\r\n        gradeB: totalB,\r\n        gradeC: totalC,\r\n        gradeD: totalD,\r\n        gradeF: totalF\r\n      };\r\n    },\r\n    \r\n    getComponentTypeBadgeClass(type) {\r\n      switch (type) {\r\n        case 'assignment': return 'bg-success';\r\n        case 'quiz': return 'bg-info';\r\n        case 'test': return 'bg-warning';\r\n        case 'final_exam': return 'bg-danger';\r\n        default: return 'bg-secondary';\r\n      }\r\n    },\r\n    \r\n    getMarkClass(markValue) {\r\n      if (markValue >= 70) return 'text-success fw-bold';\r\n      if (markValue >= 50) return 'text-warning';\r\n      return 'text-danger';\r\n    },\r\n    \r\n    exportMarksToCSV() {\r\n      // Export component marks to CSV\r\n      this.$store.dispatch('showToast', {\r\n        message: 'Exporting component marks to CSV...',\r\n        type: 'info'\r\n      });\r\n    },\r\n    \r\n    getAssessmentCountForCourse(courseId) {\r\n      return this.assessments.filter(a => a.course_id === courseId).length;\r\n    },\r\n    \r\n    getCourseNameById(courseId) {\r\n      const course = this.courses.find(c => c.id === courseId);\r\n      return course ? `${course.code} - ${course.name}` : 'Unknown Course';\r\n    },\r\n    \r\n    getAssessmentTypeBadgeClass(type) {\r\n      // Keep this for backward compatibility if needed\r\n      switch (type) {\r\n        case 'quiz': return 'bg-info';\r\n        case 'assignment': return 'bg-primary';\r\n        case 'midterm': return 'bg-warning';\r\n        case 'final_exam': return 'bg-danger';\r\n        default: return 'bg-secondary';\r\n      }\r\n    },\r\n    \r\n    formatDate(dateString) {\r\n      if (!dateString) return 'Not scheduled';\r\n      \r\n      const date = new Date(dateString);\r\n      return date.toLocaleDateString('en-GB', {\r\n        day: 'numeric',\r\n        month: 'short',\r\n        year: 'numeric'\r\n      });\r\n    },\r\n    \r\n    isPending() {\r\n      // Simple logic to determine if an assessment is pending\r\n      // In a real app, this would check if all students have marks for this assessment\r\n      return true;\r\n    },\r\n    \r\n    openAddCourseModal() {\r\n      // Reset the form for adding new course\r\n      this.newCourse = {\r\n        code: '',\r\n        name: '',\r\n        semester: '',\r\n        academic_year: ''\r\n      };\r\n      this.isEditMode = false;\r\n      this.editingCourse = null;\r\n      \r\n      // Open the modal using Bootstrap's JavaScript\r\n      const modal = new bootstrap.Modal(document.getElementById('addCourseModal'));\r\n      modal.show();\r\n    },\r\n\r\n    editCourse(course) {\r\n      // Populate the form with course data for editing\r\n      this.newCourse = {\r\n        code: course.code,\r\n        name: course.name,\r\n        semester: course.semester || '',\r\n        academic_year: course.academic_year || ''\r\n      };\r\n      this.isEditMode = true;\r\n      this.editingCourse = course;\r\n      \r\n      // Open the modal using Bootstrap's JavaScript\r\n      const modal = new bootstrap.Modal(document.getElementById('addCourseModal'));\r\n      modal.show();\r\n    },\r\n\r\n    async saveCourse() {\r\n      try {\r\n        if (this.isEditMode) {\r\n          // Update existing course\r\n          await this.$store.dispatch('courses/updateCourse', {\r\n            courseId: this.editingCourse.id,\r\n            courseData: this.newCourse\r\n          });\r\n          this.$store.dispatch('showToast', { \r\n            message: 'Course updated successfully!', \r\n            type: 'success' \r\n          });\r\n        } else {\r\n          // Create new course\r\n          const courseData = {\r\n            ...this.newCourse,\r\n            lecturer_id: this.getUser.id\r\n          };\r\n          await this.$store.dispatch('courses/createCourse', courseData);\r\n          this.$store.dispatch('showToast', { \r\n            message: 'Course created successfully!', \r\n            type: 'success' \r\n          });\r\n        }\r\n        \r\n        // Close the modal\r\n        const modalElement = document.getElementById('addCourseModal');\r\n        const modal = bootstrap.Modal.getInstance(modalElement);\r\n        modal.hide();\r\n        \r\n        // Reload courses\r\n        this.loadData();\r\n      } catch (error) {\r\n        console.error('Error saving course:', error);\r\n        this.$store.dispatch('showToast', { \r\n          message: 'Error saving course. Please try again.', \r\n          type: 'error' \r\n        });\r\n      }\r\n    },\r\n\r\n    confirmDeleteCourse(course) {\r\n      this.courseToDelete = course;\r\n      \r\n      // Open the delete confirmation modal\r\n      const modal = new bootstrap.Modal(document.getElementById('deleteCourseModal'));\r\n      modal.show();\r\n    },\r\n\r\n    async deleteCourse() {\r\n      try {\r\n        await this.$store.dispatch('courses/deleteCourse', this.courseToDelete.id);\r\n        \r\n        // Close the modal\r\n        const modalElement = document.getElementById('deleteCourseModal');\r\n        const modal = bootstrap.Modal.getInstance(modalElement);\r\n        modal.hide();\r\n        \r\n        this.$store.dispatch('showToast', { \r\n          message: 'Course deleted successfully!', \r\n          type: 'success' \r\n        });\r\n        \r\n        // Reload courses\r\n        this.loadData();\r\n        \r\n        // Clear the course to delete\r\n        this.courseToDelete = null;\r\n      } catch (error) {\r\n        console.error('Error deleting course:', error);\r\n        this.$store.dispatch('showToast', { \r\n          message: 'Error deleting course. Please try again.', \r\n          type: 'error' \r\n        });\r\n      }\r\n    },\r\n\r\n    async addCourse() {\r\n      // This method is deprecated in favor of saveCourse\r\n      await this.saveCourse();\r\n    },\r\n    \r\n    exportCoursesToCSV() {\r\n      if (!this.courses.length) {\r\n        alert('No courses to export');\r\n        return;\r\n      }\r\n      \r\n      // Convert courses data to CSV format\r\n      const headers = ['ID', 'Code', 'Name', 'Semester', 'Academic Year', 'Number of Assessments'];\r\n      let csvContent = headers.join(',') + '\\n';\r\n      \r\n      this.courses.forEach(course => {\r\n        const assessmentCount = this.getAssessmentCountForCourse(course.id);\r\n        const row = [\r\n          course.id,\r\n          course.code,\r\n          `\"${course.name}\"`,  // Quotes to handle commas in names\r\n          course.semester || 'Not specified',\r\n          course.academic_year || 'Not specified',\r\n          assessmentCount\r\n        ];\r\n        csvContent += row.join(',') + '\\n';\r\n      });\r\n      \r\n      // Create and trigger download\r\n      this.downloadCSV(csvContent, 'courses.csv');\r\n    },\r\n    \r\n    exportAssessmentsToCSV() {\r\n      if (!this.assessments.length) {\r\n        alert('No assessments to export');\r\n        return;\r\n      }\r\n      \r\n      // Convert assessments data to CSV format\r\n      const headers = ['ID', 'Course', 'Name', 'Type', 'Date', 'Max Mark', 'Weightage', 'Status'];\r\n      let csvContent = headers.join(',') + '\\n';\r\n      \r\n      this.assessments.forEach(assessment => {\r\n        const row = [\r\n          assessment.id,\r\n          `\"${this.getCourseNameById(assessment.course_id)}\"`,\r\n          `\"${assessment.name}\"`,\r\n          assessment.type,\r\n          assessment.date || 'Not scheduled',\r\n          assessment.max_mark,\r\n          `${assessment.weightage}%`,\r\n          this.isPending(assessment) ? 'Pending' : 'Completed'\r\n        ];\r\n        csvContent += row.join(',') + '\\n';\r\n      });\r\n      \r\n      // Create and trigger download\r\n      this.downloadCSV(csvContent, 'assessments.csv');\r\n    },\r\n    \r\n    downloadCSV(csvContent, fileName) {\r\n      // Create a Blob with the CSV content\r\n      const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n      const url = URL.createObjectURL(blob);\r\n      \r\n      // Create a temporary link and trigger download\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', fileName);\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    },\r\n    \r\n    openNotificationModal(component) {\r\n      // Set the selected component (instead of assessment)\r\n      this.selectedAssessment = {\r\n        course_id: component.course_id,\r\n        name: component.name,\r\n        type: component.type\r\n      };\r\n      \r\n      // Pre-fill notification fields\r\n      const courseName = this.getCourseNameById(component.course_id);\r\n      this.notification = {\r\n        title: `${component.name} Update`,\r\n        message: `Dear Students,\\n\\nThe marks for ${component.name} in ${courseName} have been updated. Please login to view your results.\\n\\nRegards,\\n${this.getUser.name}`,\r\n        includeMarks: true\r\n      };\r\n      \r\n      // Open the modal\r\n      const modal = new bootstrap.Modal(document.getElementById('notifyStudentsModal'));\r\n      modal.show();\r\n    },\r\n    \r\n    async sendNotification() {\r\n      try {\r\n        const response = await fetch('http://localhost:8080/marks-api.php', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          credentials: 'include',\r\n          body: JSON.stringify({\r\n            action: 'send_course_announcement',\r\n            course_id: this.selectedAssessment.course_id,\r\n            lecturer_id: this.getUser.id,\r\n            title: this.notification.title,\r\n            message: this.notification.message,\r\n            include_marks: this.notification.includeMarks\r\n          })\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        if (data.success) {\r\n          this.$store.dispatch('showToast', {\r\n            message: `Notification sent successfully to ${data.notifications_sent} students!`,\r\n            type: 'success'\r\n          });\r\n\r\n          // Add to recent activities\r\n          const newActivity = {\r\n            title: 'Students Notified',\r\n            description: `${this.notification.title} - ${this.getCourseNameById(this.selectedAssessment.course_id)}`,\r\n            time: 'Just now',\r\n            icon: 'fas fa-bell text-success'\r\n          };\r\n          this.recentActivities.unshift(newActivity);\r\n          if (this.recentActivities.length > 5) {\r\n            this.recentActivities.pop();\r\n          }\r\n\r\n          // Close the modal\r\n          const modalElement = document.getElementById('notifyStudentsModal');\r\n          const modal = bootstrap.Modal.getInstance(modalElement);\r\n          modal.hide();\r\n        } else {\r\n          throw new Error(data.error || 'Failed to send notification');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error sending notification:', error);\r\n        this.$store.dispatch('showToast', {\r\n          message: 'Failed to send notification. Please try again.',\r\n          type: 'error'\r\n        });\r\n      }\r\n    },\r\n\r\n    logout() {\r\n      if (confirm('Are you sure you want to logout?')) {\r\n        this.$store.dispatch('auth/logout');\r\n        this.$router.push('/login');\r\n      }\r\n    },\r\n\r\n    toggleNotificationPanel() {\r\n      this.showNotificationPanel = !this.showNotificationPanel;\r\n      if (this.showNotificationPanel) {\r\n        this.loadUnreadCount();\r\n      }\r\n    },\r\n\r\n    async loadUnreadCount() {\r\n      try {\r\n        const response = await fetch(`http://localhost:8080/marks-api.php?action=unread_notifications&user_id=${this.getUser.id}`, {\r\n          credentials: 'include'\r\n        });\r\n        const data = await response.json();\r\n        this.unreadNotificationCount = data.unread_count || 0;\r\n      } catch (error) {\r\n        console.error('Error loading unread notification count:', error);\r\n      }\r\n    },\r\n\r\n    handleNotificationClick(notification) {\r\n      // Handle different notification types\r\n      switch (notification.type) {\r\n        case 'mark':\r\n          // Navigate to course marks if related_id is a course_id\r\n          if (notification.related_id) {\r\n            this.$router.push(`/lecturer/course/${notification.related_id}`);\r\n          }\r\n          break;\r\n        case 'course':\r\n          // Navigate to course details\r\n          if (notification.related_id) {\r\n            this.$router.push(`/lecturer/course/${notification.related_id}`);\r\n          }\r\n          break;\r\n        default:\r\n          // Show notification content as a toast for other types\r\n          this.$store.dispatch('showToast', {\r\n            message: notification.content,\r\n            type: 'info',\r\n            timeout: 8000\r\n          });\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.dashboard h1 {\r\n  color: #2c3e50;\r\n  font-weight: 700;\r\n}\r\n\r\n.card {\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  border: none;\r\n  border-radius: 10px;\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n\r\n.card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 8px 15px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.card-title {\r\n  color: #2c3e50;\r\n  font-weight: 600;\r\n}\r\n\r\n.list-group-item {\r\n  border-left: 0;\r\n  border-right: 0;\r\n  padding: 15px;\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\n.list-group-item:first-child {\r\n  border-top: 0;\r\n}\r\n\r\n.list-group-item:last-child {\r\n  border-bottom: 0;\r\n}\r\n\r\n.timeline {\r\n  position: relative;\r\n  padding-left: 30px;\r\n}\r\n\r\n.timeline-item {\r\n  position: relative;\r\n  margin-bottom: 25px;\r\n}\r\n\r\n.timeline-item:last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.timeline-item:before {\r\n  content: '';\r\n  position: absolute;\r\n  left: -30px;\r\n  top: 0;\r\n  bottom: -25px;\r\n  width: 2px;\r\n  background-color: #e9ecef;\r\n}\r\n\r\n.timeline-item:last-child:before {\r\n  bottom: 0;\r\n}\r\n\r\n.timeline-item-icon {\r\n  position: absolute;\r\n  left: -39px;\r\n  top: 0;\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 50%;\r\n  background-color: #ffffff;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1;\r\n}\r\n\r\n.timeline-item-icon i {\r\n  font-size: 14px;\r\n}\r\n\r\n.timeline-item-content h6 {\r\n  margin-bottom: 5px;\r\n  font-weight: 600;\r\n}\r\n\r\n.badge {\r\n  padding: 6px 10px;\r\n  font-weight: 500;\r\n  text-transform: capitalize;\r\n}\r\n\r\n.table th {\r\n  font-weight: 600;\r\n  color: #2c3e50;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}