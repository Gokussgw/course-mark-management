{"ast":null,"code":"import \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { createRouter, createWebHistory } from 'vue-router';\nimport store from '../store';\n\n// Lazy-loaded components\nvar Login = function Login() {\n  return import('../views/Login.vue');\n};\nvar Register = function Register() {\n  return import('../views/Register.vue');\n};\nvar LecturerDashboard = function LecturerDashboard() {\n  return import('../views/lecturer/Dashboard.vue');\n};\nvar StudentDashboard = function StudentDashboard() {\n  return import('../views/student/Dashboard.vue');\n};\nvar AdvisorDashboard = function AdvisorDashboard() {\n  return import('../views/advisor/Dashboard.vue');\n};\nvar AdminDashboard = function AdminDashboard() {\n  return import('../views/admin/Dashboard.vue');\n};\nvar CourseDetail = function CourseDetail() {\n  return import('../views/lecturer/CourseDetail.vue');\n};\nvar EnrollmentManagement = function EnrollmentManagement() {\n  return import('../views/lecturer/EnrollmentManagement.vue');\n};\nvar StudentDetail = function StudentDetail() {\n  return import('../views/lecturer/StudentDetail.vue');\n};\nvar AssessmentForm = function AssessmentForm() {\n  return import('../views/lecturer/AssessmentForm.vue');\n};\nvar CSVImport = function CSVImport() {\n  return import('../views/lecturer/CSVImport.vue');\n};\nvar MarksManagement = function MarksManagement() {\n  return import('../views/lecturer/MarksManagement.vue');\n};\nvar StudentFeedback = function StudentFeedback() {\n  return import('../views/lecturer/StudentFeedback.vue');\n};\nvar StudentMarksView = function StudentMarksView() {\n  return import('../views/student/CourseMarks.vue');\n};\nvar StudentSimulation = function StudentSimulation() {\n  return import('../views/student/MarkSimulation.vue');\n};\nvar RemarkRequest = function RemarkRequest() {\n  return import('../views/student/RemarkRequest.vue');\n};\nvar StudentFeedbackView = function StudentFeedbackView() {\n  return import('../views/student/FeedbackView.vue');\n};\nvar AdviseeList = function AdviseeList() {\n  return import('../views/advisor/AdviseeList.vue');\n};\nvar AdviseeDetail = function AdviseeDetail() {\n  return import('../views/advisor/AdviseeDetail.vue');\n};\nvar AtRiskStudents = function AtRiskStudents() {\n  return import('../views/advisor/AtRiskStudents.vue');\n};\nvar AdvisorFeedbackView = function AdvisorFeedbackView() {\n  return import('../views/advisor/FeedbackView.vue');\n};\nvar MarkBreakdown = function MarkBreakdown() {\n  return import('../components/MarkBreakdown.vue');\n};\nvar UserManagement = function UserManagement() {\n  return import('../views/admin/UserManagement.vue');\n};\nvar AdminEnrollmentManagement = function AdminEnrollmentManagement() {\n  return import('../views/admin/EnrollmentManagement.vue');\n};\nvar SystemLogs = function SystemLogs() {\n  return import('../views/admin/SystemLogs.vue');\n};\nvar NotFound = function NotFound() {\n  return import('../views/NotFound.vue');\n};\nvar routes = [{\n  path: '/',\n  redirect: function redirect() {\n    var userRole = store.getters['auth/userRole'];\n    if (userRole === 'lecturer') {\n      return '/lecturer/dashboard';\n    } else if (userRole === 'student') {\n      return '/student/dashboard';\n    } else if (userRole === 'advisor') {\n      return '/advisor/dashboard';\n    } else if (userRole === 'admin') {\n      return '/admin/dashboard';\n    } else {\n      return '/login';\n    }\n  }\n}, {\n  path: '/login',\n  name: 'Login',\n  component: Login,\n  meta: {\n    requiresGuest: true\n  }\n}, {\n  path: '/register',\n  name: 'Register',\n  component: Register,\n  meta: {\n    requiresGuest: true\n  }\n},\n// Lecturer routes\n{\n  path: '/lecturer/dashboard',\n  name: 'LecturerDashboard',\n  component: LecturerDashboard,\n  meta: {\n    requiresAuth: true,\n    role: 'lecturer'\n  }\n}, {\n  path: '/lecturer/course/:id',\n  name: 'CourseDetail',\n  component: CourseDetail,\n  meta: {\n    requiresAuth: true,\n    role: 'lecturer'\n  }\n}, {\n  path: '/lecturer/course/:courseId/enrollments',\n  name: 'EnrollmentManagement',\n  component: EnrollmentManagement,\n  meta: {\n    requiresAuth: true,\n    role: 'lecturer'\n  }\n}, {\n  path: '/lecturer/student/:id',\n  name: 'StudentDetail',\n  component: StudentDetail,\n  meta: {\n    requiresAuth: true,\n    role: 'lecturer'\n  }\n}, {\n  path: '/lecturer/assessment/create',\n  name: 'CreateAssessment',\n  component: AssessmentForm,\n  meta: {\n    requiresAuth: true,\n    role: 'lecturer'\n  }\n}, {\n  path: '/lecturer/assessment/edit/:id',\n  name: 'EditAssessment',\n  component: AssessmentForm,\n  meta: {\n    requiresAuth: true,\n    role: 'lecturer'\n  }\n}, {\n  path: '/lecturer/csv-import',\n  name: 'CSVImport',\n  component: CSVImport,\n  meta: {\n    requiresAuth: true,\n    role: 'lecturer'\n  }\n}, {\n  path: '/lecturer/course/:courseId/marks',\n  name: 'MarksManagement',\n  component: MarksManagement,\n  meta: {\n    requiresAuth: true,\n    role: 'lecturer'\n  }\n}, {\n  path: '/lecturer/marks',\n  name: 'MarksManagementGeneral',\n  component: MarksManagement,\n  meta: {\n    requiresAuth: true,\n    role: 'lecturer'\n  }\n}, {\n  path: '/lecturer/feedback',\n  name: 'StudentFeedback',\n  component: StudentFeedback,\n  meta: {\n    requiresAuth: true,\n    role: 'lecturer'\n  }\n}, {\n  path: '/lecturer/breakdown/:courseId',\n  name: 'LecturerMarkBreakdown',\n  component: MarkBreakdown,\n  props: function props(route) {\n    return {\n      courseId: parseInt(route.params.courseId),\n      userRole: 'lecturer'\n    };\n  },\n  meta: {\n    requiresAuth: true,\n    role: 'lecturer'\n  }\n},\n// Student routes\n{\n  path: '/student/dashboard',\n  name: 'StudentDashboard',\n  component: StudentDashboard,\n  meta: {\n    requiresAuth: true,\n    role: 'student'\n  }\n}, {\n  path: '/student/course/:id',\n  name: 'StudentMarksView',\n  component: StudentMarksView,\n  meta: {\n    requiresAuth: true,\n    role: 'student'\n  }\n}, {\n  path: '/student/simulation/:id',\n  name: 'StudentSimulation',\n  component: StudentSimulation,\n  meta: {\n    requiresAuth: true,\n    role: 'student'\n  }\n}, {\n  path: '/student/remark/:markId',\n  name: 'RemarkRequest',\n  component: RemarkRequest,\n  props: function props(route) {\n    return {\n      markId: parseInt(route.params.markId)\n    };\n  },\n  meta: {\n    requiresAuth: true,\n    role: 'student'\n  }\n}, {\n  path: '/student/feedback',\n  name: 'StudentFeedbackView',\n  component: StudentFeedbackView,\n  meta: {\n    requiresAuth: true,\n    role: 'student'\n  }\n},\n// Advisor routes\n{\n  path: '/advisor/dashboard',\n  name: 'AdvisorDashboard',\n  component: AdvisorDashboard,\n  meta: {\n    requiresAuth: true,\n    role: 'advisor'\n  }\n}, {\n  path: '/advisor/advisees',\n  name: 'AdviseeList',\n  component: AdviseeList,\n  meta: {\n    requiresAuth: true,\n    role: 'advisor'\n  }\n}, {\n  path: '/advisor/advisee/:id',\n  name: 'AdviseeDetail',\n  component: AdviseeDetail,\n  meta: {\n    requiresAuth: true,\n    role: 'advisor'\n  }\n}, {\n  path: '/advisor/at-risk',\n  name: 'AtRiskStudents',\n  component: AtRiskStudents,\n  meta: {\n    requiresAuth: true,\n    role: 'advisor'\n  }\n}, {\n  path: '/advisor/feedback',\n  name: 'AdvisorFeedbackView',\n  component: AdvisorFeedbackView,\n  meta: {\n    requiresAuth: true,\n    role: 'advisor'\n  }\n},\n// Admin routes\n{\n  path: '/admin/dashboard',\n  name: 'AdminDashboard',\n  component: AdminDashboard,\n  meta: {\n    requiresAuth: true,\n    role: 'admin'\n  }\n}, {\n  path: '/admin/users',\n  name: 'UserManagement',\n  component: UserManagement,\n  meta: {\n    requiresAuth: true,\n    role: 'admin'\n  }\n}, {\n  path: '/admin/enrollments',\n  name: 'AdminEnrollmentManagement',\n  component: AdminEnrollmentManagement,\n  meta: {\n    requiresAuth: true,\n    role: 'admin'\n  }\n}, {\n  path: '/admin/logs',\n  name: 'SystemLogs',\n  component: SystemLogs,\n  meta: {\n    requiresAuth: true,\n    role: 'admin'\n  }\n},\n// 404 page\n{\n  path: '/:pathMatch(.*)*',\n  name: 'NotFound',\n  component: NotFound\n}];\nvar router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes: routes\n});\n\n// Navigation guards\nrouter.beforeEach(function (to, from, next) {\n  var isAuthenticated = store.getters['auth/isAuthenticated'];\n  var userRole = store.getters['auth/userRole'];\n\n  // Check if the route requires authentication\n  if (to.matched.some(function (record) {\n    return record.meta.requiresAuth;\n  })) {\n    if (!isAuthenticated) {\n      next({\n        name: 'Login'\n      });\n    } else if (to.meta.role && to.meta.role !== userRole) {\n      // Redirect to the appropriate dashboard if role doesn't match\n      next({\n        path: '/'\n      });\n    } else {\n      next();\n    }\n  }\n  // Check if the route requires guest access (like login page)\n  else if (to.matched.some(function (record) {\n    return record.meta.requiresGuest;\n  })) {\n    if (isAuthenticated) {\n      next({\n        path: '/'\n      });\n    } else {\n      next();\n    }\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","store","Login","Register","LecturerDashboard","StudentDashboard","AdvisorDashboard","AdminDashboard","CourseDetail","EnrollmentManagement","StudentDetail","AssessmentForm","CSVImport","MarksManagement","StudentFeedback","StudentMarksView","StudentSimulation","RemarkRequest","StudentFeedbackView","AdviseeList","AdviseeDetail","AtRiskStudents","AdvisorFeedbackView","MarkBreakdown","UserManagement","AdminEnrollmentManagement","SystemLogs","NotFound","routes","path","redirect","userRole","getters","name","component","meta","requiresGuest","requiresAuth","role","props","route","courseId","parseInt","params","markId","router","history","process","env","BASE_URL","beforeEach","to","from","next","isAuthenticated","matched","some","record"],"sources":["C:/Users/ansmu/Desktop/Web/course-mark-management/frontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\r\nimport store from '../store'\r\n\r\n// Lazy-loaded components\r\nconst Login = () => import('../views/Login.vue')\r\nconst Register = () => import('../views/Register.vue')\r\nconst LecturerDashboard = () => import('../views/lecturer/Dashboard.vue')\r\nconst StudentDashboard = () => import('../views/student/Dashboard.vue')\r\nconst AdvisorDashboard = () => import('../views/advisor/Dashboard.vue')\r\nconst AdminDashboard = () => import('../views/admin/Dashboard.vue')\r\nconst CourseDetail = () => import('../views/lecturer/CourseDetail.vue')\r\nconst EnrollmentManagement = () => import('../views/lecturer/EnrollmentManagement.vue')\r\nconst StudentDetail = () => import('../views/lecturer/StudentDetail.vue')\r\nconst AssessmentForm = () => import('../views/lecturer/AssessmentForm.vue')\r\nconst CSVImport = () => import('../views/lecturer/CSVImport.vue')\r\nconst MarksManagement = () => import('../views/lecturer/MarksManagement.vue')\r\nconst StudentFeedback = () => import('../views/lecturer/StudentFeedback.vue')\r\nconst StudentMarksView = () => import('../views/student/CourseMarks.vue')\r\nconst StudentSimulation = () => import('../views/student/MarkSimulation.vue')\r\nconst RemarkRequest = () => import('../views/student/RemarkRequest.vue')\r\nconst StudentFeedbackView = () => import('../views/student/FeedbackView.vue')\r\nconst AdviseeList = () => import('../views/advisor/AdviseeList.vue')\r\nconst AdviseeDetail = () => import('../views/advisor/AdviseeDetail.vue')\r\nconst AtRiskStudents = () => import('../views/advisor/AtRiskStudents.vue')\r\nconst AdvisorFeedbackView = () => import('../views/advisor/FeedbackView.vue')\r\nconst MarkBreakdown = () => import('../components/MarkBreakdown.vue')\r\nconst UserManagement = () => import('../views/admin/UserManagement.vue')\r\nconst AdminEnrollmentManagement = () => import('../views/admin/EnrollmentManagement.vue')\r\nconst SystemLogs = () => import('../views/admin/SystemLogs.vue')\r\nconst NotFound = () => import('../views/NotFound.vue')\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    redirect: () => {\r\n      const userRole = store.getters['auth/userRole'];\r\n      if (userRole === 'lecturer') {\r\n        return '/lecturer/dashboard';\r\n      } else if (userRole === 'student') {\r\n        return '/student/dashboard';\r\n      } else if (userRole === 'advisor') {\r\n        return '/advisor/dashboard';\r\n      } else if (userRole === 'admin') {\r\n        return '/admin/dashboard';\r\n      } else {\r\n        return '/login';\r\n      }\r\n    }\r\n  },\r\n  {\r\n    path: '/login',\r\n    name: 'Login',\r\n    component: Login,\r\n    meta: { requiresGuest: true }\r\n  },\r\n  {\r\n    path: '/register',\r\n    name: 'Register',\r\n    component: Register,\r\n    meta: { requiresGuest: true }\r\n  },\r\n  // Lecturer routes\r\n  {\r\n    path: '/lecturer/dashboard',\r\n    name: 'LecturerDashboard',\r\n    component: LecturerDashboard,\r\n    meta: { requiresAuth: true, role: 'lecturer' }\r\n  },\r\n  {\r\n    path: '/lecturer/course/:id',\r\n    name: 'CourseDetail',\r\n    component: CourseDetail,\r\n    meta: { requiresAuth: true, role: 'lecturer' }\r\n  },\r\n  {\r\n    path: '/lecturer/course/:courseId/enrollments',\r\n    name: 'EnrollmentManagement',\r\n    component: EnrollmentManagement,\r\n    meta: { requiresAuth: true, role: 'lecturer' }\r\n  },\r\n  {\r\n    path: '/lecturer/student/:id',\r\n    name: 'StudentDetail',\r\n    component: StudentDetail,\r\n    meta: { requiresAuth: true, role: 'lecturer' }\r\n  },\r\n  {\r\n    path: '/lecturer/assessment/create',\r\n    name: 'CreateAssessment',\r\n    component: AssessmentForm,\r\n    meta: { requiresAuth: true, role: 'lecturer' }\r\n  },\r\n  {\r\n    path: '/lecturer/assessment/edit/:id',\r\n    name: 'EditAssessment',\r\n    component: AssessmentForm,\r\n    meta: { requiresAuth: true, role: 'lecturer' }\r\n  },\r\n  {\r\n    path: '/lecturer/csv-import',\r\n    name: 'CSVImport',\r\n    component: CSVImport,\r\n    meta: { requiresAuth: true, role: 'lecturer' }\r\n  },\r\n  {\r\n    path: '/lecturer/course/:courseId/marks',\r\n    name: 'MarksManagement',\r\n    component: MarksManagement,\r\n    meta: { requiresAuth: true, role: 'lecturer' }\r\n  },\r\n  {\r\n    path: '/lecturer/marks',\r\n    name: 'MarksManagementGeneral',\r\n    component: MarksManagement,\r\n    meta: { requiresAuth: true, role: 'lecturer' }\r\n  },\r\n  {\r\n    path: '/lecturer/feedback',\r\n    name: 'StudentFeedback',\r\n    component: StudentFeedback,\r\n    meta: { requiresAuth: true, role: 'lecturer' }\r\n  },\r\n  {\r\n    path: '/lecturer/breakdown/:courseId',\r\n    name: 'LecturerMarkBreakdown',\r\n    component: MarkBreakdown,\r\n    props: route => ({ courseId: parseInt(route.params.courseId), userRole: 'lecturer' }),\r\n    meta: { requiresAuth: true, role: 'lecturer' }\r\n  },\r\n  // Student routes\r\n  {\r\n    path: '/student/dashboard',\r\n    name: 'StudentDashboard',\r\n    component: StudentDashboard,\r\n    meta: { requiresAuth: true, role: 'student' }\r\n  },\r\n  {\r\n    path: '/student/course/:id',\r\n    name: 'StudentMarksView',\r\n    component: StudentMarksView,\r\n    meta: { requiresAuth: true, role: 'student' }\r\n  },\r\n  {\r\n    path: '/student/simulation/:id',\r\n    name: 'StudentSimulation',\r\n    component: StudentSimulation,\r\n    meta: { requiresAuth: true, role: 'student' }\r\n  },\r\n  {\r\n    path: '/student/remark/:markId',\r\n    name: 'RemarkRequest',\r\n    component: RemarkRequest,\r\n    props: route => ({ markId: parseInt(route.params.markId) }),\r\n    meta: { requiresAuth: true, role: 'student' }\r\n  },\r\n  {\r\n    path: '/student/feedback',\r\n    name: 'StudentFeedbackView',\r\n    component: StudentFeedbackView,\r\n    meta: { requiresAuth: true, role: 'student' }\r\n  },\r\n  // Advisor routes\r\n  {\r\n    path: '/advisor/dashboard',\r\n    name: 'AdvisorDashboard',\r\n    component: AdvisorDashboard,\r\n    meta: { requiresAuth: true, role: 'advisor' }\r\n  },\r\n  {\r\n    path: '/advisor/advisees',\r\n    name: 'AdviseeList',\r\n    component: AdviseeList,\r\n    meta: { requiresAuth: true, role: 'advisor' }\r\n  },\r\n  {\r\n    path: '/advisor/advisee/:id',\r\n    name: 'AdviseeDetail',\r\n    component: AdviseeDetail,\r\n    meta: { requiresAuth: true, role: 'advisor' }\r\n  },\r\n  {\r\n    path: '/advisor/at-risk',\r\n    name: 'AtRiskStudents',\r\n    component: AtRiskStudents,\r\n    meta: { requiresAuth: true, role: 'advisor' }\r\n  },\r\n  {\r\n    path: '/advisor/feedback',\r\n    name: 'AdvisorFeedbackView',\r\n    component: AdvisorFeedbackView,\r\n    meta: { requiresAuth: true, role: 'advisor' }\r\n  },\r\n  // Admin routes\r\n  {\r\n    path: '/admin/dashboard',\r\n    name: 'AdminDashboard',\r\n    component: AdminDashboard,\r\n    meta: { requiresAuth: true, role: 'admin' }\r\n  },\r\n  {\r\n    path: '/admin/users',\r\n    name: 'UserManagement',\r\n    component: UserManagement,\r\n    meta: { requiresAuth: true, role: 'admin' }\r\n  },\r\n  {\r\n    path: '/admin/enrollments',\r\n    name: 'AdminEnrollmentManagement',\r\n    component: AdminEnrollmentManagement,\r\n    meta: { requiresAuth: true, role: 'admin' }\r\n  },\r\n  {\r\n    path: '/admin/logs',\r\n    name: 'SystemLogs',\r\n    component: SystemLogs,\r\n    meta: { requiresAuth: true, role: 'admin' }\r\n  },\r\n  // 404 page\r\n  {\r\n    path: '/:pathMatch(.*)*',\r\n    name: 'NotFound',\r\n    component: NotFound\r\n  }\r\n]\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(process.env.BASE_URL),\r\n  routes\r\n})\r\n\r\n// Navigation guards\r\nrouter.beforeEach((to, from, next) => {\r\n  const isAuthenticated = store.getters['auth/isAuthenticated'];\r\n  const userRole = store.getters['auth/userRole'];\r\n  \r\n  // Check if the route requires authentication\r\n  if (to.matched.some(record => record.meta.requiresAuth)) {\r\n    if (!isAuthenticated) {\r\n      next({ name: 'Login' });\r\n    } else if (to.meta.role && to.meta.role !== userRole) {\r\n      // Redirect to the appropriate dashboard if role doesn't match\r\n      next({ path: '/' });\r\n    } else {\r\n      next();\r\n    }\r\n  }\r\n  // Check if the route requires guest access (like login page)\r\n  else if (to.matched.some(record => record.meta.requiresGuest)) {\r\n    if (isAuthenticated) {\r\n      next({ path: '/' });\r\n    } else {\r\n      next();\r\n    }\r\n  }\r\n  else {\r\n    next();\r\n  }\r\n});\r\n\r\nexport default router;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}