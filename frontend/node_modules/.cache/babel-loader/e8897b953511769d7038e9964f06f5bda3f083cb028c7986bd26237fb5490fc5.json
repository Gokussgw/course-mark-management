{"ast":null,"code":"import _regenerator from \"C:/Users/ansmu/Desktop/Web/NEW/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _asyncToGenerator from \"C:/Users/ansmu/Desktop/Web/NEW/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.parse-float.js\";\nimport \"core-js/modules/web.timers.js\";\nimport axios from 'axios';\nexport default {\n  name: 'SystemHealthMonitor',\n  data: function data() {\n    return {\n      healthData: {},\n      loading: true,\n      error: null,\n      backupInProgress: false,\n      refreshInterval: null\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n    this.fetchHealthData();\n\n    // Refresh every 5 minutes\n    this.refreshInterval = setInterval(function () {\n      _this.fetchHealthData();\n    }, 300000); // 5 minutes\n  },\n  beforeUnmount: function beforeUnmount() {\n    // Clear the interval when component is destroyed\n    if (this.refreshInterval) {\n      clearInterval(this.refreshInterval);\n    }\n  },\n  methods: {\n    fetchHealthData: function fetchHealthData() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n        var response, _t;\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.n) {\n            case 0:\n              _this2.loading = true;\n              _context.p = 1;\n              _context.n = 2;\n              return axios.get(\"\".concat(process.env.VUE_APP_API_URL, \"/api/admin/system/health\"), {\n                headers: {\n                  Authorization: \"Bearer \".concat(_this2.$store.getters['auth/token'])\n                }\n              });\n            case 2:\n              response = _context.v;\n              _this2.healthData = response.data;\n              _context.n = 4;\n              break;\n            case 3:\n              _context.p = 3;\n              _t = _context.v;\n              console.error('Failed to fetch system health data:', _t);\n              _this2.$store.dispatch('notification/add', {\n                type: 'danger',\n                message: 'Failed to load system health information'\n              });\n              _this2.error = _t;\n            case 4:\n              _context.p = 4;\n              _this2.loading = false;\n              return _context.f(4);\n            case 5:\n              return _context.a(2);\n          }\n        }, _callee, null, [[1, 3, 4, 5]]);\n      }))();\n    },\n    initiateBackup: function initiateBackup() {\n      var _this3 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n        var _t2;\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              _this3.backupInProgress = true;\n              _context2.p = 1;\n              _context2.n = 2;\n              return axios.post(\"\".concat(process.env.VUE_APP_API_URL, \"/api/admin/system/backup\"), {}, {\n                headers: {\n                  Authorization: \"Bearer \".concat(_this3.$store.getters['auth/token'])\n                }\n              });\n            case 2:\n              _this3.$store.dispatch('notification/add', {\n                type: 'success',\n                message: 'Database backup initiated successfully'\n              });\n\n              // Update health data after backup\n              _this3.fetchHealthData();\n              _context2.n = 4;\n              break;\n            case 3:\n              _context2.p = 3;\n              _t2 = _context2.v;\n              console.error('Failed to initiate backup:', _t2);\n              _this3.$store.dispatch('notification/add', {\n                type: 'danger',\n                message: 'Failed to initiate database backup'\n              });\n            case 4:\n              _context2.p = 4;\n              _this3.backupInProgress = false;\n              return _context2.f(4);\n            case 5:\n              return _context2.a(2);\n          }\n        }, _callee2, null, [[1, 3, 4, 5]]);\n      }))();\n    },\n    refreshHealth: function refreshHealth() {\n      this.fetchHealthData();\n    },\n    getStatusClass: function getStatusClass(status) {\n      if (!status) return 'status-unknown';\n      switch (status.toLowerCase()) {\n        case 'ok':\n          return 'status-ok';\n        case 'warning':\n          return 'status-warning';\n        case 'critical':\n          return 'status-critical';\n        default:\n          return 'status-unknown';\n      }\n    },\n    getStatusIcon: function getStatusIcon(status) {\n      if (!status) return 'bi bi-question-circle-fill';\n      switch (status.toLowerCase()) {\n        case 'ok':\n          return 'bi bi-check-circle-fill';\n        case 'warning':\n          return 'bi bi-exclamation-triangle-fill';\n        case 'critical':\n          return 'bi bi-exclamation-circle-fill';\n        default:\n          return 'bi bi-question-circle-fill';\n      }\n    },\n    getDiskUsageClass: function getDiskUsageClass() {\n      var _this$healthData$syst;\n      var usedPercent = ((_this$healthData$syst = this.healthData.system) === null || _this$healthData$syst === void 0 || (_this$healthData$syst = _this$healthData$syst.diskUsage) === null || _this$healthData$syst === void 0 ? void 0 : _this$healthData$syst.usedPercent) || 0;\n      if (usedPercent > 90) {\n        return 'bg-danger';\n      } else if (usedPercent > 80) {\n        return 'bg-warning';\n      } else if (usedPercent > 70) {\n        return 'bg-info';\n      } else {\n        return 'bg-success';\n      }\n    },\n    getBackupAlertClass: function getBackupAlertClass() {\n      if (!this.healthData.lastBackup) {\n        return 'alert-danger';\n      }\n\n      // Check if last backup was more than 24 hours ago\n      var lastBackup = new Date(this.healthData.lastBackup);\n      var now = new Date();\n      var diffHours = (now - lastBackup) / (1000 * 60 * 60);\n      if (diffHours > 72) {\n        return 'alert-danger';\n      } else if (diffHours > 24) {\n        return 'alert-warning';\n      } else {\n        return 'alert-success';\n      }\n    },\n    getBackupButtonClass: function getBackupButtonClass() {\n      if (this.backupInProgress) {\n        return 'btn-secondary';\n      }\n      if (!this.healthData.lastBackup) {\n        return 'btn-danger';\n      }\n\n      // Check if last backup was more than 24 hours ago\n      var lastBackup = new Date(this.healthData.lastBackup);\n      var now = new Date();\n      var diffHours = (now - lastBackup) / (1000 * 60 * 60);\n      if (diffHours > 72) {\n        return 'btn-danger';\n      } else if (diffHours > 24) {\n        return 'btn-warning';\n      } else {\n        return 'btn-success';\n      }\n    },\n    formatBytes: function formatBytes(bytes) {\n      if (bytes === 0) return '0 Bytes';\n      var k = 1024;\n      var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n      var i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n    },\n    formatDate: function formatDate(dateString) {\n      var includeTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (!dateString) return 'N/A';\n      var date = new Date(dateString);\n      if (includeTime) {\n        return new Intl.DateTimeFormat('en-GB', {\n          year: 'numeric',\n          month: 'short',\n          day: 'numeric',\n          hour: '2-digit',\n          minute: '2-digit'\n        }).format(date);\n      }\n      return new Intl.DateTimeFormat('en-GB', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric'\n      }).format(date);\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","healthData","loading","error","backupInProgress","refreshInterval","mounted","_this","fetchHealthData","setInterval","beforeUnmount","clearInterval","methods","_this2","_asyncToGenerator","_regenerator","m","_callee","response","_t","w","_context","n","p","get","concat","process","env","VUE_APP_API_URL","headers","Authorization","$store","getters","v","console","dispatch","type","message","f","a","initiateBackup","_this3","_callee2","_t2","_context2","post","refreshHealth","getStatusClass","status","toLowerCase","getStatusIcon","getDiskUsageClass","_this$healthData$syst","usedPercent","system","diskUsage","getBackupAlertClass","lastBackup","Date","now","diffHours","getBackupButtonClass","formatBytes","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","formatDate","dateString","includeTime","arguments","length","undefined","date","Intl","DateTimeFormat","year","month","day","hour","minute","format"],"sources":["C:\\Users\\ansmu\\Desktop\\Web\\NEW\\course-mark-management\\frontend\\src\\components\\admin\\SystemHealthMonitor.vue"],"sourcesContent":["<template>\r\n  <div class=\"system-health\">\r\n    <div class=\"card mb-4\">\r\n      <div class=\"card-header d-flex justify-content-between align-items-center\">\r\n        <h5 class=\"mb-0\">System Health</h5>\r\n        <div>\r\n          <button \r\n            class=\"btn btn-outline-primary btn-sm me-2\" \r\n            @click=\"refreshHealth\"\r\n            :disabled=\"loading\"\r\n          >\r\n            <i class=\"bi bi-arrow-clockwise\" :class=\"{'spin': loading}\"></i>\r\n            Refresh\r\n          </button>\r\n          <button \r\n            class=\"btn btn-outline-success btn-sm\" \r\n            @click=\"initiateBackup\"\r\n            :disabled=\"backupInProgress\"\r\n          >\r\n            <i class=\"bi bi-cloud-arrow-up\"></i>\r\n            Backup Now\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <div v-if=\"loading\" class=\"text-center my-3\">\r\n          <div class=\"spinner-border text-primary\" role=\"status\">\r\n            <span class=\"visually-hidden\">Loading...</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div v-else class=\"row\">\r\n          <!-- Overall Status -->\r\n          <div class=\"col-md-6 mb-4\">\r\n            <div class=\"health-status-box\" :class=\"getStatusClass(healthData.status)\">\r\n              <h5>Overall Status</h5>\r\n              <div class=\"d-flex align-items-center\">\r\n                <div class=\"status-indicator me-3\" :class=\"getStatusClass(healthData.status)\">\r\n                  <i :class=\"getStatusIcon(healthData.status)\"></i>\r\n                </div>\r\n                <div>\r\n                  <h3 class=\"mb-0 text-capitalize\">{{ healthData.status || 'Unknown' }}</h3>\r\n                  <p class=\"mb-0\">Last checked: {{ formatDate(healthData.timestamp) }}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <!-- Database Status -->\r\n          <div class=\"col-md-6 mb-4\">\r\n            <div class=\"health-status-box\" :class=\"getStatusClass(healthData.database?.status === 'online' ? 'ok' : 'critical')\">\r\n              <h5>Database Status</h5>\r\n              <div class=\"d-flex align-items-center\">\r\n                <div class=\"status-indicator me-3\" :class=\"getStatusClass(healthData.database?.status === 'online' ? 'ok' : 'critical')\">\r\n                  <i :class=\"getStatusIcon(healthData.database?.status === 'online' ? 'ok' : 'critical')\"></i>\r\n                </div>\r\n                <div>\r\n                  <h3 class=\"mb-0 text-capitalize\">{{ healthData.database?.status || 'Unknown' }}</h3>\r\n                  <p class=\"mb-0\">Response time: {{ healthData.database?.responseTime || 0 }}ms</p>\r\n                  <p class=\"mb-0\">{{ healthData.database?.version }}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <!-- Disk Usage -->\r\n          <div class=\"col-md-6 mb-4\">\r\n            <div class=\"health-status-box\">\r\n              <h5>Disk Usage</h5>\r\n              <div class=\"mb-2\">\r\n                <div class=\"progress\" style=\"height: 10px;\">\r\n                  <div \r\n                    class=\"progress-bar\" \r\n                    :class=\"getDiskUsageClass()\"\r\n                    role=\"progressbar\" \r\n                    :style=\"{ width: `${healthData.system?.diskUsage?.usedPercent || 0}%` }\"\r\n                    :aria-valuenow=\"healthData.system?.diskUsage?.usedPercent || 0\" \r\n                    aria-valuemin=\"0\" \r\n                    aria-valuemax=\"100\"\r\n                  ></div>\r\n                </div>\r\n              </div>\r\n              <div class=\"d-flex justify-content-between\">\r\n                <small>{{ formatBytes(healthData.system?.diskUsage?.free || 0) }} free</small>\r\n                <small>{{ healthData.system?.diskUsage?.usedPercent || 0 }}% used</small>\r\n                <small>{{ formatBytes(healthData.system?.diskUsage?.total || 0) }} total</small>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <!-- PHP Info -->\r\n          <div class=\"col-md-6 mb-4\">\r\n            <div class=\"health-status-box\">\r\n              <h5>PHP Info</h5>\r\n              <div>\r\n                <p class=\"mb-1\"><strong>Version:</strong> {{ healthData.system?.phpVersion || 'Unknown' }}</p>\r\n                <p class=\"mb-1\"><strong>Memory Limit:</strong> {{ healthData.system?.memoryLimit || 'Unknown' }}</p>\r\n                <p class=\"mb-1\"><strong>Max Execution Time:</strong> {{ healthData.system?.maxExecutionTime || 'Unknown' }}s</p>\r\n                <p v-if=\"healthData.load && healthData.load.length\" class=\"mb-0\">\r\n                  <strong>Load Average:</strong> \r\n                  {{ healthData.load[0].toFixed(2) }} (1m), \r\n                  {{ healthData.load[1].toFixed(2) }} (5m), \r\n                  {{ healthData.load[2].toFixed(2) }} (15m)\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <!-- Last Backup -->\r\n          <div class=\"col-12\">\r\n            <div class=\"alert\" :class=\"getBackupAlertClass()\">\r\n              <div class=\"d-flex justify-content-between align-items-center\">\r\n                <div>\r\n                  <strong>Last Database Backup:</strong> \r\n                  <span v-if=\"healthData.lastBackup\">{{ formatDate(healthData.lastBackup) }}</span>\r\n                  <span v-else>No recent backups found</span>\r\n                </div>\r\n                <button \r\n                  class=\"btn btn-sm\" \r\n                  :class=\"getBackupButtonClass()\" \r\n                  @click=\"initiateBackup\"\r\n                  :disabled=\"backupInProgress\"\r\n                >\r\n                  <i class=\"bi bi-cloud-arrow-up me-1\"></i>\r\n                  {{ backupInProgress ? 'Backing up...' : 'Backup Now' }}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'SystemHealthMonitor',\r\n  data() {\r\n    return {\r\n      healthData: {},\r\n      loading: true,\r\n      error: null,\r\n      backupInProgress: false,\r\n      refreshInterval: null\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchHealthData();\r\n    \r\n    // Refresh every 5 minutes\r\n    this.refreshInterval = setInterval(() => {\r\n      this.fetchHealthData();\r\n    }, 300000); // 5 minutes\r\n  },\r\n  beforeUnmount() {\r\n    // Clear the interval when component is destroyed\r\n    if (this.refreshInterval) {\r\n      clearInterval(this.refreshInterval);\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchHealthData() {\r\n      this.loading = true;\r\n      try {\r\n        const response = await axios.get(`${process.env.VUE_APP_API_URL}/api/admin/system/health`, {\r\n          headers: {\r\n            Authorization: `Bearer ${this.$store.getters['auth/token']}`\r\n          }\r\n        });\r\n        \r\n        this.healthData = response.data;\r\n      } catch (error) {\r\n        console.error('Failed to fetch system health data:', error);\r\n        this.$store.dispatch('notification/add', {\r\n          type: 'danger',\r\n          message: 'Failed to load system health information'\r\n        });\r\n        this.error = error;\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    async initiateBackup() {\r\n      this.backupInProgress = true;\r\n      try {\r\n        await axios.post(`${process.env.VUE_APP_API_URL}/api/admin/system/backup`, {}, {\r\n          headers: {\r\n            Authorization: `Bearer ${this.$store.getters['auth/token']}`\r\n          }\r\n        });\r\n        \r\n        this.$store.dispatch('notification/add', {\r\n          type: 'success',\r\n          message: 'Database backup initiated successfully'\r\n        });\r\n        \r\n        // Update health data after backup\r\n        this.fetchHealthData();\r\n      } catch (error) {\r\n        console.error('Failed to initiate backup:', error);\r\n        this.$store.dispatch('notification/add', {\r\n          type: 'danger',\r\n          message: 'Failed to initiate database backup'\r\n        });\r\n      } finally {\r\n        this.backupInProgress = false;\r\n      }\r\n    },\r\n    refreshHealth() {\r\n      this.fetchHealthData();\r\n    },\r\n    getStatusClass(status) {\r\n      if (!status) return 'status-unknown';\r\n      \r\n      switch (status.toLowerCase()) {\r\n        case 'ok':\r\n          return 'status-ok';\r\n        case 'warning':\r\n          return 'status-warning';\r\n        case 'critical':\r\n          return 'status-critical';\r\n        default:\r\n          return 'status-unknown';\r\n      }\r\n    },\r\n    getStatusIcon(status) {\r\n      if (!status) return 'bi bi-question-circle-fill';\r\n      \r\n      switch (status.toLowerCase()) {\r\n        case 'ok':\r\n          return 'bi bi-check-circle-fill';\r\n        case 'warning':\r\n          return 'bi bi-exclamation-triangle-fill';\r\n        case 'critical':\r\n          return 'bi bi-exclamation-circle-fill';\r\n        default:\r\n          return 'bi bi-question-circle-fill';\r\n      }\r\n    },\r\n    getDiskUsageClass() {\r\n      const usedPercent = this.healthData.system?.diskUsage?.usedPercent || 0;\r\n      \r\n      if (usedPercent > 90) {\r\n        return 'bg-danger';\r\n      } else if (usedPercent > 80) {\r\n        return 'bg-warning';\r\n      } else if (usedPercent > 70) {\r\n        return 'bg-info';\r\n      } else {\r\n        return 'bg-success';\r\n      }\r\n    },\r\n    getBackupAlertClass() {\r\n      if (!this.healthData.lastBackup) {\r\n        return 'alert-danger';\r\n      }\r\n      \r\n      // Check if last backup was more than 24 hours ago\r\n      const lastBackup = new Date(this.healthData.lastBackup);\r\n      const now = new Date();\r\n      const diffHours = (now - lastBackup) / (1000 * 60 * 60);\r\n      \r\n      if (diffHours > 72) {\r\n        return 'alert-danger';\r\n      } else if (diffHours > 24) {\r\n        return 'alert-warning';\r\n      } else {\r\n        return 'alert-success';\r\n      }\r\n    },\r\n    getBackupButtonClass() {\r\n      if (this.backupInProgress) {\r\n        return 'btn-secondary';\r\n      }\r\n      \r\n      if (!this.healthData.lastBackup) {\r\n        return 'btn-danger';\r\n      }\r\n      \r\n      // Check if last backup was more than 24 hours ago\r\n      const lastBackup = new Date(this.healthData.lastBackup);\r\n      const now = new Date();\r\n      const diffHours = (now - lastBackup) / (1000 * 60 * 60);\r\n      \r\n      if (diffHours > 72) {\r\n        return 'btn-danger';\r\n      } else if (diffHours > 24) {\r\n        return 'btn-warning';\r\n      } else {\r\n        return 'btn-success';\r\n      }\r\n    },\r\n    formatBytes(bytes) {\r\n      if (bytes === 0) return '0 Bytes';\r\n      \r\n      const k = 1024;\r\n      const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n      \r\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n    },\r\n    formatDate(dateString, includeTime = false) {\r\n      if (!dateString) return 'N/A';\r\n      \r\n      const date = new Date(dateString);\r\n      \r\n      if (includeTime) {\r\n        return new Intl.DateTimeFormat('en-GB', {\r\n          year: 'numeric',\r\n          month: 'short',\r\n          day: 'numeric',\r\n          hour: '2-digit',\r\n          minute: '2-digit'\r\n        }).format(date);\r\n      }\r\n      \r\n      return new Intl.DateTimeFormat('en-GB', {\r\n        year: 'numeric',\r\n        month: 'short',\r\n        day: 'numeric'\r\n      }).format(date);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.health-status-box {\r\n  border: 1px solid #dee2e6;\r\n  border-radius: 0.5rem;\r\n  padding: 1rem;\r\n  background-color: #f8f9fa;\r\n  height: 100%;\r\n}\r\n\r\n.status-indicator {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 1.5rem;\r\n  color: white;\r\n}\r\n\r\n.status-ok {\r\n  background-color: #28a745;\r\n  border-color: #28a745;\r\n  color: white;\r\n}\r\n\r\n.status-warning {\r\n  background-color: #ffc107;\r\n  border-color: #ffc107;\r\n  color: #212529;\r\n}\r\n\r\n.status-critical {\r\n  background-color: #dc3545;\r\n  border-color: #dc3545;\r\n  color: white;\r\n}\r\n\r\n.status-unknown {\r\n  background-color: #6c757d;\r\n  border-color: #6c757d;\r\n  color: white;\r\n}\r\n\r\n.spin {\r\n  animation: spin 1s linear infinite;\r\n}\r\n\r\n@keyframes spin {\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}