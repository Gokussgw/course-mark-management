{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"course-marks\"\n};\nvar _hoisted_2 = {\n  \"class\": \"d-flex justify-content-between align-items-center mb-4\"\n};\nvar _hoisted_3 = {\n  \"aria-label\": \"breadcrumb\"\n};\nvar _hoisted_4 = {\n  \"class\": \"breadcrumb\"\n};\nvar _hoisted_5 = {\n  \"class\": \"breadcrumb-item\"\n};\nvar _hoisted_6 = {\n  \"class\": \"breadcrumb-item active\",\n  \"aria-current\": \"page\"\n};\nvar _hoisted_7 = {\n  \"class\": \"mb-2\"\n};\nvar _hoisted_8 = {\n  \"class\": \"text-muted\"\n};\nvar _hoisted_9 = {\n  \"class\": \"btn-group\"\n};\nvar _hoisted_10 = {\n  key: 0,\n  \"class\": \"text-center my-5\"\n};\nvar _hoisted_11 = {\n  key: 1,\n  \"class\": \"alert alert-danger\"\n};\nvar _hoisted_12 = {\n  key: 2,\n  \"class\": \"alert alert-danger\"\n};\nvar _hoisted_13 = {\n  key: 3,\n  \"class\": \"row\"\n};\nvar _hoisted_14 = {\n  \"class\": \"col-md-4 mb-4\"\n};\nvar _hoisted_15 = {\n  \"class\": \"card h-100\"\n};\nvar _hoisted_16 = {\n  \"class\": \"card-body\"\n};\nvar _hoisted_17 = {\n  \"class\": \"mb-4 text-center\"\n};\nvar _hoisted_18 = {\n  \"class\": \"progress-info mb-3\"\n};\nvar _hoisted_19 = {\n  \"class\": \"d-flex justify-content-between align-items-center\"\n};\nvar _hoisted_20 = {\n  \"class\": \"text-muted\"\n};\nvar _hoisted_21 = {\n  \"class\": \"progress\",\n  style: {\n    \"height\": \"8px\"\n  }\n};\nvar _hoisted_22 = [\"aria-valuenow\"];\nvar _hoisted_23 = {\n  \"class\": \"text-muted\"\n};\nvar _hoisted_24 = {\n  \"class\": \"table table-sm\"\n};\nvar _hoisted_25 = {\n  \"class\": \"col-md-8 mb-4\"\n};\nvar _hoisted_26 = {\n  \"class\": \"card mb-4\"\n};\nvar _hoisted_27 = {\n  \"class\": \"card-header bg-light d-flex justify-content-between align-items-center\"\n};\nvar _hoisted_28 = {\n  \"class\": \"dropdown\"\n};\nvar _hoisted_29 = {\n  \"class\": \"dropdown-menu\",\n  \"aria-labelledby\": \"sortDropdown\"\n};\nvar _hoisted_30 = {\n  \"class\": \"card-body\"\n};\nvar _hoisted_31 = {\n  key: 0,\n  \"class\": \"text-center py-4\"\n};\nvar _hoisted_32 = {\n  key: 1\n};\nvar _hoisted_33 = {\n  \"class\": \"mb-4\"\n};\nvar _hoisted_34 = {\n  \"class\": \"progress\",\n  style: {\n    \"height\": \"30px\"\n  }\n};\nvar _hoisted_35 = [\"title\"];\nvar _hoisted_36 = {\n  \"class\": \"table-responsive\"\n};\nvar _hoisted_37 = {\n  \"class\": \"table table-hover\"\n};\nvar _hoisted_38 = {\n  key: 0,\n  \"class\": \"small text-muted\"\n};\nvar _hoisted_39 = {\n  \"class\": \"small text-muted\"\n};\nvar _hoisted_40 = {\n  key: 1,\n  \"class\": \"text-muted\"\n};\nvar _hoisted_41 = {\n  key: 1,\n  \"class\": \"text-muted\"\n};\nvar _hoisted_42 = {\n  key: 0,\n  \"class\": \"remarks-row\"\n};\nvar _hoisted_43 = {\n  colspan: \"6\",\n  \"class\": \"table-light\"\n};\nvar _hoisted_44 = {\n  \"class\": \"card\"\n};\nvar _hoisted_45 = {\n  \"class\": \"card-body\"\n};\nvar _hoisted_46 = {\n  key: 0,\n  \"class\": \"text-center py-4\"\n};\nvar _hoisted_47 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _$data$course, _$data$course2, _$data$course3, _$data$course4, _$data$course5, _$data$course6, _$data$course7, _$data$course8, _$data$course9, _$data$course0;\n  var _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", null, [_createElementVNode(\"nav\", _hoisted_3, [_createElementVNode(\"ol\", _hoisted_4, [_createElementVNode(\"li\", _hoisted_5, [_createVNode(_component_router_link, {\n    to: \"/student/dashboard\"\n  }, {\n    \"default\": _withCtx(function () {\n      return _cache[5] || (_cache[5] = [_createTextVNode(\"Dashboard\")]);\n    }),\n    _: 1 /* STABLE */,\n    __: [5]\n  })]), _createElementVNode(\"li\", _hoisted_6, _toDisplayString((_$data$course = $data.course) === null || _$data$course === void 0 ? void 0 : _$data$course.code) + \" - \" + _toDisplayString((_$data$course2 = $data.course) === null || _$data$course2 === void 0 ? void 0 : _$data$course2.name), 1 /* TEXT */)])]), _createElementVNode(\"h1\", _hoisted_7, _toDisplayString((_$data$course3 = $data.course) === null || _$data$course3 === void 0 ? void 0 : _$data$course3.name), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_8, _toDisplayString((_$data$course4 = $data.course) === null || _$data$course4 === void 0 ? void 0 : _$data$course4.code) + \" | \" + _toDisplayString(((_$data$course5 = $data.course) === null || _$data$course5 === void 0 ? void 0 : _$data$course5.semester) || 'No semester specified'), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"button\", {\n    \"class\": \"btn btn-outline-primary\",\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $options.downloadMarks && $options.downloadMarks.apply($options, arguments);\n    })\n  }, _cache[6] || (_cache[6] = [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-download me-2\"\n  }, null, -1 /* CACHED */), _createTextVNode(\" Download \")])), _createVNode(_component_router_link, {\n    to: \"/student/simulation/\".concat($data.courseId),\n    \"class\": \"btn btn-outline-primary\"\n  }, {\n    \"default\": _withCtx(function () {\n      return _cache[7] || (_cache[7] = [_createElementVNode(\"i\", {\n        \"class\": \"fas fa-calculator me-2\"\n      }, null, -1 /* CACHED */), _createTextVNode(\" Grade Simulator \")]);\n    }),\n    _: 1 /* STABLE */,\n    __: [7]\n  }, 8 /* PROPS */, [\"to\"])])]), $data.isLoading || !_ctx.getUser ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, _cache[8] || (_cache[8] = [_createElementVNode(\"div\", {\n    \"class\": \"spinner-border text-primary\",\n    role: \"status\"\n  }, [_createElementVNode(\"span\", {\n    \"class\": \"visually-hidden\"\n  }, \"Loading...\")], -1 /* CACHED */)]))) : $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, _toDisplayString($data.error), 1 /* TEXT */)) : !$data.course ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, \" Course not found or you don't have access to this course. \")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"div\", _hoisted_15, [_cache[16] || (_cache[16] = _createElementVNode(\"div\", {\n    \"class\": \"card-header bg-light\"\n  }, [_createElementVNode(\"h5\", {\n    \"class\": \"mb-0\"\n  }, \"Course Summary\")], -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"div\", {\n    \"class\": _normalizeClass([\"display-4 fw-bold\", $options.getOverallMarkClass])\n  }, _toDisplayString($options.overallMark) + \"% \", 3 /* TEXT, CLASS */), _cache[9] || (_cache[9] = _createElementVNode(\"p\", {\n    \"class\": \"text-muted\"\n  }, \"Overall Mark\", -1 /* CACHED */)), _createElementVNode(\"div\", {\n    \"class\": _normalizeClass([\"badge\", $options.getOverallGradeBadgeClass])\n  }, _toDisplayString($options.overallGrade), 3 /* TEXT, CLASS */)]), _createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"div\", _hoisted_19, [_cache[10] || (_cache[10] = _createElementVNode(\"span\", null, \"Course Completion\", -1 /* CACHED */)), _createElementVNode(\"span\", _hoisted_20, _toDisplayString($options.completionPercentage) + \"%\", 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_21, [_createElementVNode(\"div\", {\n    \"class\": \"progress-bar bg-info\",\n    role: \"progressbar\",\n    style: _normalizeStyle(\"width: \".concat($options.completionPercentage, \"%\")),\n    \"aria-valuenow\": $options.completionPercentage,\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\"\n  }, null, 12 /* STYLE, PROPS */, _hoisted_22)]), _createElementVNode(\"small\", _hoisted_23, _toDisplayString($options.completedAssessments) + \" of \" + _toDisplayString($options.totalAssessments) + \" assessments completed \", 1 /* TEXT */)]), _createElementVNode(\"table\", _hoisted_24, [_createElementVNode(\"tbody\", null, [_createElementVNode(\"tr\", null, [_cache[11] || (_cache[11] = _createElementVNode(\"th\", null, \"Course:\", -1 /* CACHED */)), _createElementVNode(\"td\", null, _toDisplayString((_$data$course6 = $data.course) === null || _$data$course6 === void 0 ? void 0 : _$data$course6.name), 1 /* TEXT */)]), _createElementVNode(\"tr\", null, [_cache[12] || (_cache[12] = _createElementVNode(\"th\", null, \"Code:\", -1 /* CACHED */)), _createElementVNode(\"td\", null, _toDisplayString((_$data$course7 = $data.course) === null || _$data$course7 === void 0 ? void 0 : _$data$course7.code), 1 /* TEXT */)]), _createElementVNode(\"tr\", null, [_cache[13] || (_cache[13] = _createElementVNode(\"th\", null, \"Semester:\", -1 /* CACHED */)), _createElementVNode(\"td\", null, _toDisplayString(((_$data$course8 = $data.course) === null || _$data$course8 === void 0 ? void 0 : _$data$course8.semester) || 'Not specified'), 1 /* TEXT */)]), _createElementVNode(\"tr\", null, [_cache[14] || (_cache[14] = _createElementVNode(\"th\", null, \"Credits:\", -1 /* CACHED */)), _createElementVNode(\"td\", null, _toDisplayString(((_$data$course9 = $data.course) === null || _$data$course9 === void 0 ? void 0 : _$data$course9.credits) || 'Not specified'), 1 /* TEXT */)]), _createElementVNode(\"tr\", null, [_cache[15] || (_cache[15] = _createElementVNode(\"th\", null, \"Lecturer:\", -1 /* CACHED */)), _createElementVNode(\"td\", null, _toDisplayString(((_$data$course0 = $data.course) === null || _$data$course0 === void 0 ? void 0 : _$data$course0.lecturer_name) || 'Not specified'), 1 /* TEXT */)])])])])])]), _createElementVNode(\"div\", _hoisted_25, [_createElementVNode(\"div\", _hoisted_26, [_createElementVNode(\"div\", _hoisted_27, [_cache[18] || (_cache[18] = _createElementVNode(\"h5\", {\n    \"class\": \"mb-0\"\n  }, \"Mark Breakdown\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_28, [_cache[17] || (_cache[17] = _createElementVNode(\"button\", {\n    \"class\": \"btn btn-sm btn-outline-secondary dropdown-toggle\",\n    type: \"button\",\n    id: \"sortDropdown\",\n    \"data-bs-toggle\": \"dropdown\",\n    \"aria-expanded\": \"false\"\n  }, \" Sort by \", -1 /* CACHED */)), _createElementVNode(\"ul\", _hoisted_29, [_createElementVNode(\"li\", null, [_createElementVNode(\"a\", {\n    \"class\": \"dropdown-item\",\n    href: \"#\",\n    onClick: _cache[1] || (_cache[1] = _withModifiers(function ($event) {\n      return $options.sortMarks('date');\n    }, [\"prevent\"]))\n  }, \"Date\")]), _createElementVNode(\"li\", null, [_createElementVNode(\"a\", {\n    \"class\": \"dropdown-item\",\n    href: \"#\",\n    onClick: _cache[2] || (_cache[2] = _withModifiers(function ($event) {\n      return $options.sortMarks('name');\n    }, [\"prevent\"]))\n  }, \"Name\")]), _createElementVNode(\"li\", null, [_createElementVNode(\"a\", {\n    \"class\": \"dropdown-item\",\n    href: \"#\",\n    onClick: _cache[3] || (_cache[3] = _withModifiers(function ($event) {\n      return $options.sortMarks('weight');\n    }, [\"prevent\"]))\n  }, \"Weightage\")]), _createElementVNode(\"li\", null, [_createElementVNode(\"a\", {\n    \"class\": \"dropdown-item\",\n    href: \"#\",\n    onClick: _cache[4] || (_cache[4] = _withModifiers(function ($event) {\n      return $options.sortMarks('mark');\n    }, [\"prevent\"]))\n  }, \"Mark\")])])])]), _createElementVNode(\"div\", _hoisted_30, [$options.marks.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_31, _cache[19] || (_cache[19] = [_createElementVNode(\"p\", null, \"No marks have been recorded for this course yet.\", -1 /* CACHED */), _createElementVNode(\"div\", {\n    \"class\": \"alert alert-info\"\n  }, [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-info-circle me-2\"\n  }), _createTextVNode(\" Marks will appear here once your assessments have been graded. \")], -1 /* CACHED */)]))) : (_openBlock(), _createElementBlock(\"div\", _hoisted_32, [_createElementVNode(\"div\", _hoisted_33, [_cache[20] || (_cache[20] = _createElementVNode(\"h6\", null, \"Assessment Distribution\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_34, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.sortedAssessments, function (assessment) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: assessment.assessment_id,\n      \"class\": _normalizeClass([\"progress-bar\", $options.getAssessmentTypeClass(assessment.assessment_type)]),\n      style: _normalizeStyle(\"width: \".concat(assessment.weightage, \"%\")),\n      title: \"\".concat(assessment.assessment_name, \" (\").concat(assessment.weightage, \"%)\")\n    }, _toDisplayString(assessment.weightage) + \"% \", 15 /* TEXT, CLASS, STYLE, PROPS */, _hoisted_35);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", _hoisted_36, [_createElementVNode(\"table\", _hoisted_37, [_cache[23] || (_cache[23] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Assessment\"), _createElementVNode(\"th\", null, \"Type\"), _createElementVNode(\"th\", null, \"Weight\"), _createElementVNode(\"th\", null, \"Due Date\"), _createElementVNode(\"th\", null, \"Mark\"), _createElementVNode(\"th\", null, \"Grade\")])], -1 /* CACHED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.sortedAssessments, function (assessment) {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: assessment.assessment_id\n    }, [_createElementVNode(\"tr\", null, [_createElementVNode(\"td\", null, [_createElementVNode(\"strong\", null, _toDisplayString(assessment.assessment_name), 1 /* TEXT */), assessment.description ? (_openBlock(), _createElementBlock(\"div\", _hoisted_38, _toDisplayString(assessment.description), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"td\", null, [_createElementVNode(\"span\", {\n      \"class\": _normalizeClass([\"badge\", $options.getAssessmentTypeBadgeClass(assessment.assessment_type)])\n    }, _toDisplayString(assessment.assessment_type), 3 /* TEXT, CLASS */)]), _createElementVNode(\"td\", null, _toDisplayString(assessment.weightage) + \"%\", 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatDate(assessment.date)), 1 /* TEXT */), _createElementVNode(\"td\", null, [$options.hasMarkForAssessment(assessment.assessment_id) ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 0\n    }, [_createElementVNode(\"strong\", null, _toDisplayString($options.getMarkForAssessment(assessment.assessment_id).mark), 1 /* TEXT */), _createTextVNode(\" / \" + _toDisplayString(assessment.max_mark) + \" \", 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_39, \" (\" + _toDisplayString($options.calculatePercentage($options.getMarkForAssessment(assessment.assessment_id).mark, assessment.max_mark)) + \"%) \", 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(\"span\", _hoisted_40, \"Pending\"))]), _createElementVNode(\"td\", null, [$options.hasMarkForAssessment(assessment.assessment_id) ? (_openBlock(), _createElementBlock(\"span\", {\n      key: 0,\n      \"class\": _normalizeClass($options.getGradeClass($options.calculatePercentage($options.getMarkForAssessment(assessment.assessment_id).mark, assessment.max_mark)))\n    }, _toDisplayString($options.calculateGrade($options.calculatePercentage($options.getMarkForAssessment(assessment.assessment_id).mark, assessment.max_mark))), 3 /* TEXT, CLASS */)) : (_openBlock(), _createElementBlock(\"span\", _hoisted_41, \"-\"))])]), $options.hasMarkForAssessment(assessment.assessment_id) && $options.getMarkForAssessment(assessment.assessment_id).remarks ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_42, [_createElementVNode(\"td\", _hoisted_43, [_cache[21] || (_cache[21] = _createElementVNode(\"i\", {\n      \"class\": \"fas fa-comment-alt me-2 text-muted\"\n    }, null, -1 /* CACHED */)), _cache[22] || (_cache[22] = _createElementVNode(\"span\", {\n      \"class\": \"text-muted\"\n    }, \"Feedback: \", -1 /* CACHED */)), _createTextVNode(\" \" + _toDisplayString($options.getMarkForAssessment(assessment.assessment_id).remarks), 1 /* TEXT */)])])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n  }), 128 /* KEYED_FRAGMENT */))])])])]))])]), _createElementVNode(\"div\", _hoisted_44, [_cache[27] || (_cache[27] = _createElementVNode(\"div\", {\n    \"class\": \"card-header bg-light\"\n  }, [_createElementVNode(\"h5\", {\n    \"class\": \"mb-0\"\n  }, \"Performance Analysis\")], -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_45, [$options.marks.length < 2 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_46, _cache[24] || (_cache[24] = [_createElementVNode(\"p\", null, \"Not enough data to show performance analysis.\", -1 /* CACHED */), _createElementVNode(\"div\", {\n    \"class\": \"alert alert-info\"\n  }, [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-info-circle me-2\"\n  }), _createTextVNode(\" Performance trends will be displayed after more assessments are completed. \")], -1 /* CACHED */)]))) : (_openBlock(), _createElementBlock(\"div\", _hoisted_47, [_createCommentVNode(\" This is where we would integrate a chart.js component \"), _cache[25] || (_cache[25] = _createElementVNode(\"div\", {\n    \"class\": \"chart-container\",\n    style: {\n      \"height\": \"250px\"\n    }\n  }, [_createElementVNode(\"canvas\", {\n    id: \"performanceChart\"\n  })], -1 /* CACHED */)), _cache[26] || (_cache[26] = _createElementVNode(\"div\", {\n    \"class\": \"mt-3 text-center text-muted small\"\n  }, [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-info-circle me-1\"\n  }), _createTextVNode(\" Chart shows your performance relative to class average (when available). \")], -1 /* CACHED */))]))])])])]))]);\n}","map":{"version":3,"names":["style","colspan","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_createVNode","_component_router_link","to","_cache","_hoisted_6","_toDisplayString","_$data$course","$data","course","code","_$data$course2","name","_hoisted_7","_$data$course3","_hoisted_8","_$data$course4","_$data$course5","semester","_hoisted_9","onClick","$options","downloadMarks","apply","arguments","concat","courseId","isLoading","_ctx","getUser","_hoisted_10","role","error","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_normalizeClass","getOverallMarkClass","overallMark","getOverallGradeBadgeClass","overallGrade","_hoisted_18","_hoisted_19","_hoisted_20","completionPercentage","_hoisted_21","_normalizeStyle","_hoisted_23","completedAssessments","totalAssessments","_hoisted_24","_$data$course6","_$data$course7","_$data$course8","_$data$course9","credits","_$data$course0","lecturer_name","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","type","id","_hoisted_29","href","_withModifiers","$event","sortMarks","_hoisted_30","marks","length","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_Fragment","_renderList","sortedAssessments","assessment","key","assessment_id","getAssessmentTypeClass","assessment_type","weightage","title","assessment_name","_hoisted_35","_hoisted_36","_hoisted_37","description","_hoisted_38","getAssessmentTypeBadgeClass","formatDate","date","hasMarkForAssessment","getMarkForAssessment","mark","max_mark","_hoisted_39","calculatePercentage","_hoisted_40","getGradeClass","calculateGrade","_hoisted_41","remarks","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","_createCommentVNode"],"sources":["C:\\Users\\ansmu\\Desktop\\Web\\NEW\\course-mark-management\\frontend\\src\\views\\student\\CourseMarks.vue"],"sourcesContent":["<template>\r\n  <div class=\"course-marks\">\r\n    <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n      <div>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol class=\"breadcrumb\">\r\n            <li class=\"breadcrumb-item\">\r\n              <router-link to=\"/student/dashboard\">Dashboard</router-link>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\" aria-current=\"page\">\r\n              {{ course?.code }} - {{ course?.name }}\r\n            </li>\r\n          </ol>\r\n        </nav>\r\n        <h1 class=\"mb-2\">{{ course?.name }}</h1>\r\n        <p class=\"text-muted\">\r\n          {{ course?.code }} | {{ course?.semester || 'No semester specified' }}\r\n        </p>\r\n      </div>\r\n      <div class=\"btn-group\">\r\n        <button class=\"btn btn-outline-primary\" @click=\"downloadMarks\">\r\n          <i class=\"fas fa-download me-2\"></i> Download\r\n        </button>\r\n        <router-link :to=\"`/student/simulation/${courseId}`\" class=\"btn btn-outline-primary\">\r\n          <i class=\"fas fa-calculator me-2\"></i> Grade Simulator\r\n        </router-link>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"isLoading || !getUser\" class=\"text-center my-5\">\r\n      <div class=\"spinner-border text-primary\" role=\"status\">\r\n        <span class=\"visually-hidden\">Loading...</span>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-else-if=\"error\" class=\"alert alert-danger\">\r\n      {{ error }}\r\n    </div>\r\n\r\n    <div v-else-if=\"!course\" class=\"alert alert-danger\">\r\n      Course not found or you don't have access to this course.\r\n    </div>\r\n\r\n    <div v-else class=\"row\">\r\n      <div class=\"col-md-4 mb-4\">\r\n        <div class=\"card h-100\">\r\n          <div class=\"card-header bg-light\">\r\n            <h5 class=\"mb-0\">Course Summary</h5>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div class=\"mb-4 text-center\">\r\n              <div class=\"display-4 fw-bold\" :class=\"getOverallMarkClass\">\r\n                {{ overallMark }}%\r\n              </div>\r\n              <p class=\"text-muted\">Overall Mark</p>\r\n              <div class=\"badge\" :class=\"getOverallGradeBadgeClass\">\r\n                {{ overallGrade }}\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"progress-info mb-3\">\r\n              <div class=\"d-flex justify-content-between align-items-center\">\r\n                <span>Course Completion</span>\r\n                <span class=\"text-muted\">{{ completionPercentage }}%</span>\r\n              </div>\r\n              <div class=\"progress\" style=\"height: 8px;\">\r\n                <div \r\n                  class=\"progress-bar bg-info\" \r\n                  role=\"progressbar\" \r\n                  :style=\"`width: ${completionPercentage}%`\"\r\n                  :aria-valuenow=\"completionPercentage\" \r\n                  aria-valuemin=\"0\" \r\n                  aria-valuemax=\"100\">\r\n                </div>\r\n              </div>\r\n              <small class=\"text-muted\">\r\n                {{ completedAssessments }} of {{ totalAssessments }} assessments completed\r\n              </small>\r\n            </div>\r\n\r\n            <table class=\"table table-sm\">\r\n              <tbody>\r\n                <tr>\r\n                  <th>Course:</th>\r\n                  <td>{{ course?.name }}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Code:</th>\r\n                  <td>{{ course?.code }}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Semester:</th>\r\n                  <td>{{ course?.semester || 'Not specified' }}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Credits:</th>\r\n                  <td>{{ course?.credits || 'Not specified' }}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Lecturer:</th>\r\n                  <td>{{ course?.lecturer_name || 'Not specified' }}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-md-8 mb-4\">\r\n        <div class=\"card mb-4\">\r\n          <div class=\"card-header bg-light d-flex justify-content-between align-items-center\">\r\n            <h5 class=\"mb-0\">Mark Breakdown</h5>\r\n            <div class=\"dropdown\">\r\n              <button \r\n                class=\"btn btn-sm btn-outline-secondary dropdown-toggle\" \r\n                type=\"button\" \r\n                id=\"sortDropdown\" \r\n                data-bs-toggle=\"dropdown\" \r\n                aria-expanded=\"false\"\r\n              >\r\n                Sort by\r\n              </button>\r\n              <ul class=\"dropdown-menu\" aria-labelledby=\"sortDropdown\">\r\n                <li><a class=\"dropdown-item\" href=\"#\" @click.prevent=\"sortMarks('date')\">Date</a></li>\r\n                <li><a class=\"dropdown-item\" href=\"#\" @click.prevent=\"sortMarks('name')\">Name</a></li>\r\n                <li><a class=\"dropdown-item\" href=\"#\" @click.prevent=\"sortMarks('weight')\">Weightage</a></li>\r\n                <li><a class=\"dropdown-item\" href=\"#\" @click.prevent=\"sortMarks('mark')\">Mark</a></li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div v-if=\"marks.length === 0\" class=\"text-center py-4\">\r\n              <p>No marks have been recorded for this course yet.</p>\r\n              <div class=\"alert alert-info\">\r\n                <i class=\"fas fa-info-circle me-2\"></i>\r\n                Marks will appear here once your assessments have been graded.\r\n              </div>\r\n            </div>\r\n            <div v-else>\r\n              <div class=\"mb-4\">\r\n                <h6>Assessment Distribution</h6>\r\n                <div class=\"progress\" style=\"height: 30px;\">\r\n                  <div v-for=\"assessment in sortedAssessments\" \r\n                       :key=\"assessment.assessment_id\"\r\n                       class=\"progress-bar\" \r\n                       :class=\"getAssessmentTypeClass(assessment.assessment_type)\"\r\n                       :style=\"`width: ${assessment.weightage}%`\"\r\n                       :title=\"`${assessment.assessment_name} (${assessment.weightage}%)`\">\r\n                    {{ assessment.weightage }}%\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table table-hover\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Assessment</th>\r\n                      <th>Type</th>\r\n                      <th>Weight</th>\r\n                      <th>Due Date</th>\r\n                      <th>Mark</th>\r\n                      <th>Grade</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <template v-for=\"assessment in sortedAssessments\" :key=\"assessment.assessment_id\">\r\n                      <tr>\r\n                        <td>\r\n                          <strong>{{ assessment.assessment_name }}</strong>\r\n                          <div v-if=\"assessment.description\" class=\"small text-muted\">\r\n                            {{ assessment.description }}\r\n                          </div>\r\n                        </td>\r\n                        <td>\r\n                          <span class=\"badge\" :class=\"getAssessmentTypeBadgeClass(assessment.assessment_type)\">\r\n                            {{ assessment.assessment_type }}\r\n                          </span>\r\n                        </td>\r\n                        <td>{{ assessment.weightage }}%</td>\r\n                        <td>{{ formatDate(assessment.date) }}</td>\r\n                        <td>\r\n                          <template v-if=\"hasMarkForAssessment(assessment.assessment_id)\">\r\n                            <strong>{{ getMarkForAssessment(assessment.assessment_id).mark }}</strong> / {{ assessment.max_mark }}\r\n                            <div class=\"small text-muted\">\r\n                              ({{ calculatePercentage(getMarkForAssessment(assessment.assessment_id).mark, assessment.max_mark) }}%)\r\n                            </div>\r\n                          </template>\r\n                          <template v-else>\r\n                            <span class=\"text-muted\">Pending</span>\r\n                          </template>\r\n                        </td>\r\n                        <td>\r\n                          <template v-if=\"hasMarkForAssessment(assessment.assessment_id)\">\r\n                            <span :class=\"getGradeClass(calculatePercentage(getMarkForAssessment(assessment.assessment_id).mark, assessment.max_mark))\">\r\n                              {{ calculateGrade(calculatePercentage(getMarkForAssessment(assessment.assessment_id).mark, assessment.max_mark)) }}\r\n                            </span>\r\n                          </template>\r\n                          <template v-else>\r\n                            <span class=\"text-muted\">-</span>\r\n                          </template>\r\n                        </td>\r\n                      </tr>\r\n                      <tr v-if=\"hasMarkForAssessment(assessment.assessment_id) && getMarkForAssessment(assessment.assessment_id).remarks\" class=\"remarks-row\">\r\n                        <td colspan=\"6\" class=\"table-light\">\r\n                          <i class=\"fas fa-comment-alt me-2 text-muted\"></i>\r\n                          <span class=\"text-muted\">Feedback: </span>\r\n                          {{ getMarkForAssessment(assessment.assessment_id).remarks }}\r\n                        </td>\r\n                      </tr>\r\n                    </template>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"card\">\r\n          <div class=\"card-header bg-light\">\r\n            <h5 class=\"mb-0\">Performance Analysis</h5>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div v-if=\"marks.length < 2\" class=\"text-center py-4\">\r\n              <p>Not enough data to show performance analysis.</p>\r\n              <div class=\"alert alert-info\">\r\n                <i class=\"fas fa-info-circle me-2\"></i>\r\n                Performance trends will be displayed after more assessments are completed.\r\n              </div>\r\n            </div>\r\n            <div v-else>\r\n              <!-- This is where we would integrate a chart.js component -->\r\n              <div class=\"chart-container\" style=\"height: 250px;\">\r\n                <canvas id=\"performanceChart\"></canvas>\r\n              </div>\r\n              <div class=\"mt-3 text-center text-muted small\">\r\n                <i class=\"fas fa-info-circle me-1\"></i>\r\n                Chart shows your performance relative to class average (when available).\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\n// Uncomment in real implementation\r\n// import Chart from 'chart.js/auto'\r\n\r\nexport default {\r\n  name: 'CourseMarks',\r\n  data() {\r\n    return {\r\n      courseId: null,\r\n      sortOrder: 'date',\r\n      performanceChart: null,\r\n      isLoading: true,\r\n      course: null,\r\n      assessments: [],\r\n      performance: null,\r\n      ranking: null,\r\n      error: null\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(\"auth\", [\"getUser\"]),\r\n    userId() {\r\n      return this.getUser ? this.getUser.id : null;\r\n    },\r\n    sortedAssessments() {\r\n      const assessments = [...this.assessments];\r\n      \r\n      switch(this.sortOrder) {\r\n        case 'name':\r\n          return assessments.sort((a, b) => a.assessment_name.localeCompare(b.assessment_name));\r\n        case 'weight':\r\n          return assessments.sort((a, b) => b.weightage - a.weightage);\r\n        case 'mark':\r\n          return assessments.sort((a, b) => {\r\n            const markA = this.calculatePercentage(a.mark, a.max_mark);\r\n            const markB = this.calculatePercentage(b.mark, b.max_mark);\r\n            return markB - markA;\r\n          });\r\n        case 'date':\r\n        default:\r\n          return assessments.sort((a, b) => {\r\n            if (!a.date) return 1;\r\n            if (!b.date) return -1;\r\n            return new Date(a.date) - new Date(b.date);\r\n          });\r\n      }\r\n    },\r\n    marks() {\r\n      // Convert assessments to the expected format for backward compatibility\r\n      return this.assessments.map(assessment => ({\r\n        id: assessment.mark_id,\r\n        student_id: this.userId,\r\n        assessment_id: assessment.assessment_id,\r\n        mark: parseFloat(assessment.mark),\r\n        course_id: this.courseId,\r\n        remarks: null // Not available in current API\r\n      }));\r\n    },\r\n    studentMarks() {\r\n      return this.marks.filter(mark => mark.mark > 0);\r\n    },\r\n    courseAssessments() {\r\n      // Convert API assessments to expected format\r\n      return this.assessments.map(assessment => ({\r\n        id: assessment.assessment_id,\r\n        name: assessment.assessment_name,\r\n        type: assessment.assessment_type,\r\n        weightage: parseFloat(assessment.weightage),\r\n        max_mark: parseFloat(assessment.max_mark),\r\n        due_date: assessment.date,\r\n        is_final_exam: assessment.is_final_exam\r\n      }));\r\n    },\r\n    totalAssessments() {\r\n      return this.assessments.length;\r\n    },\r\n    completedAssessments() {\r\n      return this.assessments.filter(a => a.mark > 0).length;\r\n    },\r\n    completionPercentage() {\r\n      if (this.totalAssessments === 0) return 0;\r\n      return Math.round((this.completedAssessments / this.totalAssessments) * 100);\r\n    },\r\n    overallMark() {\r\n      return this.performance ? this.performance.overall_percentage : 0;\r\n    },\r\n    overallGrade() {\r\n      return this.calculateGrade(this.overallMark);\r\n    },\r\n    getOverallMarkClass() {\r\n      if (this.overallMark >= 70) return 'text-success';\r\n      if (this.overallMark >= 50) return 'text-warning';\r\n      return 'text-danger';\r\n    },\r\n    getOverallGradeBadgeClass() {\r\n      if (this.overallMark >= 70) return 'bg-success';\r\n      if (this.overallMark >= 50) return 'bg-warning';\r\n      return 'bg-danger';\r\n    }\r\n  },\r\n  async created() {\r\n    this.courseId = parseInt(this.$route.params.id);\r\n    \r\n    console.log('CourseMarks created, getUser:', this.getUser);\r\n    \r\n    // Wait a bit for authentication to be ready, then try to load data\r\n    setTimeout(() => {\r\n      console.log('After timeout, getUser:', this.getUser);\r\n      if (this.getUser) {\r\n        this.loadCourseData();\r\n      } else {\r\n        this.error = 'Please log in to view course details';\r\n        this.isLoading = false;\r\n      }\r\n    }, 100);\r\n  },\r\n  mounted() {\r\n    // Initialize performance chart once data is loaded\r\n    this.$nextTick(() => {\r\n      if (this.marks.length >= 2) {\r\n        this.initPerformanceChart();\r\n      }\r\n    });\r\n  },\r\n  methods: {\r\n    async loadCourseData() {\r\n      this.isLoading = true;\r\n      this.error = null;\r\n      \r\n      // Debug logging\r\n      console.log('Loading course data with:', {\r\n        userId: this.userId,\r\n        courseId: this.courseId\r\n      });\r\n      \r\n      if (!this.userId) {\r\n        this.error = 'User not authenticated';\r\n        this.isLoading = false;\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        const requestData = {\r\n          student_id: this.userId,\r\n          course_id: this.courseId\r\n        };\r\n        \r\n        console.log('Request data:', requestData);\r\n        \r\n        const response = await fetch('http://localhost:8080/api/marks/student_course_detail', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(requestData)\r\n        });\r\n\r\n        console.log('Response status:', response.status);\r\n\r\n        if (!response.ok) {\r\n          const errorText = await response.text();\r\n          console.log('Error response:', errorText);\r\n          throw new Error(`HTTP error! status: ${response.status}, body: ${errorText}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        \r\n        if (data.success) {\r\n          this.course = data.course;\r\n          this.assessments = data.assessments;\r\n          this.performance = data.performance;\r\n          this.ranking = data.ranking;\r\n        } else {\r\n          this.error = data.error || 'Failed to load course data';\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading course data:', error);\r\n        this.error = 'Failed to load course data. Please try again later.';\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n    formatDate(dateString) {\r\n      if (!dateString) return 'Not set';\r\n      return new Date(dateString).toLocaleDateString();\r\n    },\r\n    hasMarkForAssessment(assessmentId) {\r\n      if (!assessmentId || !this.assessments) return false;\r\n      const assessment = this.assessments.find(a => a.assessment_id === assessmentId);\r\n      // Check if mark_id exists (assessment has been graded), not just if mark > 0\r\n      return assessment && assessment.mark_id !== null;\r\n    },\r\n    getMarkForAssessment(assessmentId) {\r\n      if (!assessmentId || !this.assessments) return null;\r\n      const assessment = this.assessments.find(a => a.assessment_id === assessmentId);\r\n      if (!assessment) return null;\r\n      return {\r\n        mark: parseFloat(assessment.mark) || 0,\r\n        remarks: null // Not available in current API\r\n      };\r\n    },\r\n    calculatePercentage(mark, maxMark) {\r\n      if (!maxMark) return 0;\r\n      return Math.round((mark / maxMark) * 100);\r\n    },\r\n    getAssessmentTypeClass(type) {\r\n      if (!type) return 'bg-secondary';\r\n      const types = {\r\n        'final_exam': 'bg-danger',\r\n        'midterm': 'bg-warning',\r\n        'quiz': 'bg-info',\r\n        'assignment': 'bg-success',\r\n        'project': 'bg-primary',\r\n        'other': 'bg-secondary'\r\n      };\r\n      return types[type.toLowerCase()] || 'bg-secondary';\r\n    },\r\n    getAssessmentTypeBadgeClass(type) {\r\n      if (!type) return 'bg-secondary';\r\n      const types = {\r\n        'final_exam': 'bg-danger',\r\n        'midterm': 'bg-warning',\r\n        'quiz': 'bg-info',\r\n        'assignment': 'bg-success',\r\n        'project': 'bg-primary',\r\n        'other': 'bg-secondary'\r\n      };\r\n      return types[type.toLowerCase()] || 'bg-secondary';\r\n    },\r\n    calculateGrade(percentage) {\r\n      if (percentage >= 90) return 'A+';\r\n      if (percentage >= 80) return 'A';\r\n      if (percentage >= 75) return 'B+';\r\n      if (percentage >= 70) return 'B';\r\n      if (percentage >= 65) return 'C+';\r\n      if (percentage >= 60) return 'C';\r\n      if (percentage >= 55) return 'D+';\r\n      if (percentage >= 50) return 'D';\r\n      return 'F';\r\n    },\r\n    getGradeClass(percentage) {\r\n      if (percentage >= 70) return 'text-success fw-bold';\r\n      if (percentage >= 50) return 'text-warning';\r\n      return 'text-danger';\r\n    },\r\n    sortMarks(order) {\r\n      this.sortOrder = order;\r\n    },\r\n    downloadMarks() {\r\n      // This would initiate a download of marks in CSV format\r\n      // Implementation would need to call an API endpoint\r\n      this.$store.dispatch('showToast', {\r\n        message: 'Downloading marks...',\r\n        type: 'info'\r\n      });\r\n    },\r\n    initPerformanceChart() {\r\n      // This would be implemented with Chart.js in a real application\r\n      /* Uncomment in real implementation\r\n      const ctx = document.getElementById('performanceChart');\r\n      \r\n      // Sort marks by date\r\n      const sortedMarks = [...this.studentMarks].sort((a, b) => {\r\n        const assessmentA = this.courseAssessments.find(assessment => assessment.id === a.assessment_id);\r\n        const assessmentB = this.courseAssessments.find(assessment => assessment.id === b.assessment_id);\r\n        if (!assessmentA || !assessmentA.due_date) return -1;\r\n        if (!assessmentB || !assessmentB.due_date) return 1;\r\n        return new Date(assessmentA.due_date) - new Date(assessmentB.due_date);\r\n      });\r\n      \r\n      const labels = sortedMarks.map(mark => {\r\n        const assessment = this.courseAssessments.find(a => a.id === mark.assessment_id);\r\n        return assessment ? assessment.name : 'Unknown';\r\n      });\r\n      \r\n      const data = sortedMarks.map(mark => {\r\n        const assessment = this.courseAssessments.find(a => a.id === mark.assessment_id);\r\n        if (!assessment) return 0;\r\n        return this.calculatePercentage(mark.mark, assessment.max_mark);\r\n      });\r\n      \r\n      // Sample class averages (would come from API in real implementation)\r\n      const classAverages = sortedMarks.map(() => Math.floor(Math.random() * 30) + 50);\r\n      \r\n      this.performanceChart = new Chart(ctx, {\r\n        type: 'line',\r\n        data: {\r\n          labels: labels,\r\n          datasets: [\r\n            {\r\n              label: 'Your Marks',\r\n              data: data,\r\n              borderColor: '#0d6efd',\r\n              backgroundColor: 'rgba(13, 110, 253, 0.1)',\r\n              borderWidth: 2,\r\n              tension: 0.1,\r\n              fill: true\r\n            },\r\n            {\r\n              label: 'Class Average',\r\n              data: classAverages,\r\n              borderColor: '#6c757d',\r\n              borderWidth: 2,\r\n              borderDash: [5, 5],\r\n              tension: 0.1,\r\n              fill: false\r\n            }\r\n          ]\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          scales: {\r\n            y: {\r\n              beginAtZero: true,\r\n              max: 100,\r\n              title: {\r\n                display: true,\r\n                text: 'Mark (%)'\r\n              }\r\n            }\r\n          },\r\n          plugins: {\r\n            legend: {\r\n              position: 'top',\r\n            },\r\n            tooltip: {\r\n              callbacks: {\r\n                label: function(context) {\r\n                  return `${context.dataset.label}: ${context.raw}%`;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n      */\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.course-marks h1 {\r\n  font-size: 1.75rem;\r\n  font-weight: 600;\r\n}\r\n\r\n.card {\r\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.progress {\r\n  border-radius: 0.25rem;\r\n  overflow: hidden;\r\n}\r\n\r\n.display-4 {\r\n  font-size: 3rem;\r\n}\r\n\r\n.remarks-row {\r\n  font-style: italic;\r\n  font-size: 0.9em;\r\n}\r\n\r\n.chart-container {\r\n  position: relative;\r\n  width: 100%;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .display-4 {\r\n    font-size: 2.5rem;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";;;;;;EACO,SAAM;AAAc;;EAClB,SAAM;AAAwD;;EAE1D,YAAU,EAAC;AAAY;;EACtB,SAAM;AAAY;;EAChB,SAAM;AAAiB;;EAGvB,SAAM,wBAAwB;EAAC,cAAY,EAAC;;;EAKhD,SAAM;AAAM;;EACb,SAAM;AAAY;;EAIlB,SAAM;AAAW;;;EAUU,SAAM;;;;EAMjB,SAAM;;;;EAIJ,SAAM;;;;EAInB,SAAM;;;EACX,SAAM;AAAe;;EACnB,SAAM;AAAY;;EAIhB,SAAM;AAAW;;EACf,SAAM;AAAkB;;EAUxB,SAAM;AAAoB;;EACxB,SAAM;AAAmD;;EAEtD,SAAM;AAAY;;EAErB,SAAM,UAAU;EAACA,KAAoB,EAApB;IAAA;EAAA;;;;EAUf,SAAM;AAAY;;EAKpB,SAAM;AAAgB;;EA4B9B,SAAM;AAAe;;EACnB,SAAM;AAAW;;EACf,SAAM;AAAwE;;EAE5E,SAAM;AAAU;;EAUf,SAAM,eAAe;EAAC,iBAAe,EAAC;;;EAQzC,SAAM;AAAW;;;EACW,SAAM;;;;;;EAQ9B,SAAM;AAAM;;EAEV,SAAM,UAAU;EAACA,KAAqB,EAArB;IAAA;EAAA;;;;EAYnB,SAAM;AAAkB;;EACpB,SAAM;AAAmB;;;EAgBa,SAAM;;;EAclC,SAAM;AAAkB;;;EAKvB,SAAM;;;;EAUN,SAAM;;;;EAIkG,SAAM;;;EACpHC,OAAO,EAAC,GAAG;EAAC,SAAM;;;EAcjC,SAAM;AAAM;;EAIV,SAAM;AAAW;;;EACS,SAAM;;;;;;;;uBA9N7CC,mBAAA,CAmPM,OAnPNC,UAmPM,GAlPJC,mBAAA,CAyBM,OAzBNC,UAyBM,GAxBJD,mBAAA,CAeM,cAdJA,mBAAA,CASM,OATNE,UASM,GARJF,mBAAA,CAOK,MAPLG,UAOK,GANHH,mBAAA,CAEK,MAFLI,UAEK,GADHC,YAAA,CAA4DC,sBAAA;IAA/CC,EAAE,EAAC;EAAoB;wBAAC;MAAA,OAASC,MAAA,QAAAA,MAAA,O,iBAAT,WAAS,E;;;;QAEhDR,mBAAA,CAEK,MAFLS,UAEK,EAAAC,gBAAA,EAAAC,aAAA,GADAC,KAAA,CAAAC,MAAM,cAAAF,aAAA,uBAANA,aAAA,CAAQG,IAAI,IAAG,KAAG,GAAAJ,gBAAA,EAAAK,cAAA,GAAGH,KAAA,CAAAC,MAAM,cAAAE,cAAA,uBAANA,cAAA,CAAQC,IAAI,iB,KAI1ChB,mBAAA,CAAwC,MAAxCiB,UAAwC,EAAAP,gBAAA,EAAAQ,cAAA,GAApBN,KAAA,CAAAC,MAAM,cAAAK,cAAA,uBAANA,cAAA,CAAQF,IAAI,kBAChChB,mBAAA,CAEI,KAFJmB,UAEI,EAAAT,gBAAA,EAAAU,cAAA,GADCR,KAAA,CAAAC,MAAM,cAAAO,cAAA,uBAANA,cAAA,CAAQN,IAAI,IAAG,KAAG,GAAAJ,gBAAA,CAAG,EAAAW,cAAA,GAAAT,KAAA,CAAAC,MAAM,cAAAQ,cAAA,uBAANA,cAAA,CAAQC,QAAQ,6C,GAG5CtB,mBAAA,CAOM,OAPNuB,UAOM,GANJvB,mBAAA,CAES;IAFD,SAAM,yBAAyB;IAAEwB,OAAK,EAAAhB,MAAA,QAAAA,MAAA;MAAA,OAAEiB,QAAA,CAAAC,aAAA,IAAAD,QAAA,CAAAC,aAAA,CAAAC,KAAA,CAAAF,QAAA,EAAAG,SAAA,CAAa;IAAA;gCAC3D5B,mBAAA,CAAoC;IAAjC,SAAM;EAAsB,2B,iBAAK,YACtC,E,IACAK,YAAA,CAEcC,sBAAA;IAFAC,EAAE,yBAAAsB,MAAA,CAAyBjB,KAAA,CAAAkB,QAAQ;IAAI,SAAM;;wBACzD;MAAA,OAAsCtB,MAAA,QAAAA,MAAA,OAAtCR,mBAAA,CAAsC;QAAnC,SAAM;MAAwB,2B,iBAAK,mBACxC,E;;;;iCAIOY,KAAA,CAAAmB,SAAS,KAAKC,IAAA,CAAAC,OAAO,I,cAAhCnC,mBAAA,CAIM,OAJNoC,WAIM,EAAA1B,MAAA,QAAAA,MAAA,OAHJR,mBAAA,CAEM;IAFD,SAAM,6BAA6B;IAACmC,IAAI,EAAC;MAC5CnC,mBAAA,CAA+C;IAAzC,SAAM;EAAiB,GAAC,YAAU,E,yBAI5BY,KAAA,CAAAwB,KAAK,I,cAArBtC,mBAAA,CAEM,OAFNuC,WAEM,EAAA3B,gBAAA,CADDE,KAAA,CAAAwB,KAAK,oB,CAGOxB,KAAA,CAAAC,MAAM,I,cAAvBf,mBAAA,CAEM,OAFNwC,WAEM,EAF8C,6DAEpD,M,cAEAxC,mBAAA,CAwMM,OAxMNyC,WAwMM,GAvMJvC,mBAAA,CA8DM,OA9DNwC,WA8DM,GA7DJxC,mBAAA,CA4DM,OA5DNyC,WA4DM,G,4BA3DJzC,mBAAA,CAEM;IAFD,SAAM;EAAsB,IAC/BA,mBAAA,CAAoC;IAAhC,SAAM;EAAM,GAAC,gBAAc,E,qBAEjCA,mBAAA,CAuDM,OAvDN0C,WAuDM,GAtDJ1C,mBAAA,CAQM,OARN2C,WAQM,GAPJ3C,mBAAA,CAEM;IAFD,SAAK4C,eAAA,EAAC,mBAAmB,EAASnB,QAAA,CAAAoB,mBAAmB;sBACrDpB,QAAA,CAAAqB,WAAW,IAAG,IACnB,wB,0BACA9C,mBAAA,CAAsC;IAAnC,SAAM;EAAY,GAAC,cAAY,qBAClCA,mBAAA,CAEM;IAFD,SAAK4C,eAAA,EAAC,OAAO,EAASnB,QAAA,CAAAsB,yBAAyB;sBAC/CtB,QAAA,CAAAuB,YAAY,wB,GAInBhD,mBAAA,CAkBM,OAlBNiD,WAkBM,GAjBJjD,mBAAA,CAGM,OAHNkD,WAGM,G,4BAFJlD,mBAAA,CAA8B,cAAxB,mBAAiB,qBACvBA,mBAAA,CAA2D,QAA3DmD,WAA2D,EAAAzC,gBAAA,CAA/Be,QAAA,CAAA2B,oBAAoB,IAAG,GAAC,gB,GAEtDpD,mBAAA,CASM,OATNqD,WASM,GARJrD,mBAAA,CAOM;IANJ,SAAM,sBAAsB;IAC5BmC,IAAI,EAAC,aAAa;IACjBvC,KAAK,EAAA0D,eAAA,WAAAzB,MAAA,CAAYJ,QAAA,CAAA2B,oBAAoB;IACrC,eAAa,EAAE3B,QAAA,CAAA2B,oBAAoB;IACpC,eAAa,EAAC,GAAG;IACjB,eAAa,EAAC;kDAGlBpD,mBAAA,CAEQ,SAFRuD,WAEQ,EAAA7C,gBAAA,CADHe,QAAA,CAAA+B,oBAAoB,IAAG,MAAI,GAAA9C,gBAAA,CAAGe,QAAA,CAAAgC,gBAAgB,IAAG,yBACtD,gB,GAGFzD,mBAAA,CAuBQ,SAvBR0D,WAuBQ,GAtBN1D,mBAAA,CAqBQ,gBApBNA,mBAAA,CAGK,a,4BAFHA,mBAAA,CAAgB,YAAZ,SAAO,qBACXA,mBAAA,CAA2B,YAAAU,gBAAA,EAAAiD,cAAA,GAApB/C,KAAA,CAAAC,MAAM,cAAA8C,cAAA,uBAANA,cAAA,CAAQ3C,IAAI,iB,GAErBhB,mBAAA,CAGK,a,4BAFHA,mBAAA,CAAc,YAAV,OAAK,qBACTA,mBAAA,CAA2B,YAAAU,gBAAA,EAAAkD,cAAA,GAApBhD,KAAA,CAAAC,MAAM,cAAA+C,cAAA,uBAANA,cAAA,CAAQ9C,IAAI,iB,GAErBd,mBAAA,CAGK,a,4BAFHA,mBAAA,CAAkB,YAAd,WAAS,qBACbA,mBAAA,CAAkD,YAAAU,gBAAA,CAA3C,EAAAmD,cAAA,GAAAjD,KAAA,CAAAC,MAAM,cAAAgD,cAAA,uBAANA,cAAA,CAAQvC,QAAQ,qC,GAEzBtB,mBAAA,CAGK,a,4BAFHA,mBAAA,CAAiB,YAAb,UAAQ,qBACZA,mBAAA,CAAiD,YAAAU,gBAAA,CAA1C,EAAAoD,cAAA,GAAAlD,KAAA,CAAAC,MAAM,cAAAiD,cAAA,uBAANA,cAAA,CAAQC,OAAO,qC,GAExB/D,mBAAA,CAGK,a,4BAFHA,mBAAA,CAAkB,YAAd,WAAS,qBACbA,mBAAA,CAAuD,YAAAU,gBAAA,CAAhD,EAAAsD,cAAA,GAAApD,KAAA,CAAAC,MAAM,cAAAmD,cAAA,uBAANA,cAAA,CAAQC,aAAa,qC,aAQxCjE,mBAAA,CAsIM,OAtINkE,WAsIM,GArIJlE,mBAAA,CA2GM,OA3GNmE,WA2GM,GA1GJnE,mBAAA,CAmBM,OAnBNoE,WAmBM,G,4BAlBJpE,mBAAA,CAAoC;IAAhC,SAAM;EAAM,GAAC,gBAAc,qBAC/BA,mBAAA,CAgBM,OAhBNqE,WAgBM,G,4BAfJrE,mBAAA,CAQS;IAPP,SAAM,kDAAkD;IACxDsE,IAAI,EAAC,QAAQ;IACbC,EAAE,EAAC,cAAc;IACjB,gBAAc,EAAC,UAAU;IACzB,eAAa,EAAC;KACf,WAED,qBACAvE,mBAAA,CAKK,MALLwE,WAKK,GAJHxE,mBAAA,CAAsF,aAAlFA,mBAAA,CAA6E;IAA1E,SAAM,eAAe;IAACyE,IAAI,EAAC,GAAG;IAAEjD,OAAK,EAAAhB,MAAA,QAAAA,MAAA,MAAAkE,cAAA,WAAAC,MAAA;MAAA,OAAUlD,QAAA,CAAAmD,SAAS;IAAA;KAAU,MAAI,E,GAC7E5E,mBAAA,CAAsF,aAAlFA,mBAAA,CAA6E;IAA1E,SAAM,eAAe;IAACyE,IAAI,EAAC,GAAG;IAAEjD,OAAK,EAAAhB,MAAA,QAAAA,MAAA,MAAAkE,cAAA,WAAAC,MAAA;MAAA,OAAUlD,QAAA,CAAAmD,SAAS;IAAA;KAAU,MAAI,E,GAC7E5E,mBAAA,CAA6F,aAAzFA,mBAAA,CAAoF;IAAjF,SAAM,eAAe;IAACyE,IAAI,EAAC,GAAG;IAAEjD,OAAK,EAAAhB,MAAA,QAAAA,MAAA,MAAAkE,cAAA,WAAAC,MAAA;MAAA,OAAUlD,QAAA,CAAAmD,SAAS;IAAA;KAAY,WAAS,E,GACpF5E,mBAAA,CAAsF,aAAlFA,mBAAA,CAA6E;IAA1E,SAAM,eAAe;IAACyE,IAAI,EAAC,GAAG;IAAEjD,OAAK,EAAAhB,MAAA,QAAAA,MAAA,MAAAkE,cAAA,WAAAC,MAAA;MAAA,OAAUlD,QAAA,CAAAmD,SAAS;IAAA;KAAU,MAAI,E,SAInF5E,mBAAA,CAqFM,OArFN6E,WAqFM,GApFOpD,QAAA,CAAAqD,KAAK,CAACC,MAAM,U,cAAvBjF,mBAAA,CAMM,OANNkF,WAMM,EAAAxE,MAAA,SAAAA,MAAA,QALJR,mBAAA,CAAuD,WAApD,kDAAgD,oBACnDA,mBAAA,CAGM;IAHD,SAAM;EAAkB,IAC3BA,mBAAA,CAAuC;IAApC,SAAM;EAAyB,I,iBAAK,kEAEzC,E,wCAEFF,mBAAA,CA4EM,OAAAmF,WAAA,GA3EJjF,mBAAA,CAYM,OAZNkF,WAYM,G,4BAXJlF,mBAAA,CAAgC,YAA5B,yBAAuB,qBAC3BA,mBAAA,CASM,OATNmF,WASM,I,kBARJrF,mBAAA,CAOMsF,SAAA,QAAAC,WAAA,CAPoB5D,QAAA,CAAA6D,iBAAiB,YAA/BC,UAAU;yBAAtBzF,mBAAA,CAOM;MANA0F,GAAG,EAAED,UAAU,CAACE,aAAa;MAC9B,SAAK7C,eAAA,EAAC,cAAc,EACZnB,QAAA,CAAAiE,sBAAsB,CAACH,UAAU,CAACI,eAAe;MACxD/F,KAAK,EAAA0D,eAAA,WAAAzB,MAAA,CAAY0D,UAAU,CAACK,SAAS;MACrCC,KAAK,KAAAhE,MAAA,CAAK0D,UAAU,CAACO,eAAe,QAAAjE,MAAA,CAAK0D,UAAU,CAACK,SAAS;wBAC9DL,UAAU,CAACK,SAAS,IAAG,IAC5B,sCAAAG,WAAA;sCAIJ/F,mBAAA,CA4DM,OA5DNgG,WA4DM,GA3DJhG,mBAAA,CA0DQ,SA1DRiG,WA0DQ,G,4BAzDNjG,mBAAA,CASQ,gBARNA,mBAAA,CAOK,aANHA,mBAAA,CAAmB,YAAf,YAAU,GACdA,mBAAA,CAAa,YAAT,MAAI,GACRA,mBAAA,CAAe,YAAX,QAAM,GACVA,mBAAA,CAAiB,YAAb,UAAQ,GACZA,mBAAA,CAAa,YAAT,MAAI,GACRA,mBAAA,CAAc,YAAV,OAAK,E,uBAGbA,mBAAA,CA8CQ,iB,kBA7CNF,mBAAA,CA4CWsF,SAAA,QAAAC,WAAA,CA5CoB5D,QAAA,CAAA6D,iBAAiB,YAA/BC,UAAU;;WAA6BA,UAAU,CAACE;QACjEzF,mBAAA,CAmCK,aAlCHA,mBAAA,CAKK,aAJHA,mBAAA,CAAiD,gBAAAU,gBAAA,CAAtC6E,UAAU,CAACO,eAAe,kBAC1BP,UAAU,CAACW,WAAW,I,cAAjCpG,mBAAA,CAEM,OAFNqG,WAEM,EAAAzF,gBAAA,CADD6E,UAAU,CAACW,WAAW,oB,qCAG7BlG,mBAAA,CAIK,aAHHA,mBAAA,CAEO;MAFD,SAAK4C,eAAA,EAAC,OAAO,EAASnB,QAAA,CAAA2E,2BAA2B,CAACb,UAAU,CAACI,eAAe;wBAC7EJ,UAAU,CAACI,eAAe,wB,GAGjC3F,mBAAA,CAAoC,YAAAU,gBAAA,CAA7B6E,UAAU,CAACK,SAAS,IAAG,GAAC,iBAC/B5F,mBAAA,CAA0C,YAAAU,gBAAA,CAAnCe,QAAA,CAAA4E,UAAU,CAACd,UAAU,CAACe,IAAI,mBACjCtG,mBAAA,CAUK,aATayB,QAAA,CAAA8E,oBAAoB,CAAChB,UAAU,CAACE,aAAa,K,cAA7D3F,mBAAA,CAKWsF,SAAA;MAAAI,GAAA;IAAA,IAJTxF,mBAAA,CAA0E,gBAAAU,gBAAA,CAA/De,QAAA,CAAA+E,oBAAoB,CAACjB,UAAU,CAACE,aAAa,EAAEgB,IAAI,kB,iBAAY,KAAG,GAAA/F,gBAAA,CAAG6E,UAAU,CAACmB,QAAQ,IAAG,GACtG,iBAAA1G,mBAAA,CAEM,OAFN2G,WAEM,EAFwB,IAC3B,GAAAjG,gBAAA,CAAGe,QAAA,CAAAmF,mBAAmB,CAACnF,QAAA,CAAA+E,oBAAoB,CAACjB,UAAU,CAACE,aAAa,EAAEgB,IAAI,EAAElB,UAAU,CAACmB,QAAQ,KAAI,KACtG,gB,8CAGA5G,mBAAA,CAAuC,QAAvC+G,WAAuC,EAAd,SAAO,G,GAGpC7G,mBAAA,CASK,aARayB,QAAA,CAAA8E,oBAAoB,CAAChB,UAAU,CAACE,aAAa,K,cAC3D3F,mBAAA,CAEO;;MAFA,SAAK8C,eAAA,CAAEnB,QAAA,CAAAqF,aAAa,CAACrF,QAAA,CAAAmF,mBAAmB,CAACnF,QAAA,CAAA+E,oBAAoB,CAACjB,UAAU,CAACE,aAAa,EAAEgB,IAAI,EAAElB,UAAU,CAACmB,QAAQ;wBACnHjF,QAAA,CAAAsF,cAAc,CAACtF,QAAA,CAAAmF,mBAAmB,CAACnF,QAAA,CAAA+E,oBAAoB,CAACjB,UAAU,CAACE,aAAa,EAAEgB,IAAI,EAAElB,UAAU,CAACmB,QAAQ,8B,cAIhH5G,mBAAA,CAAiC,QAAjCkH,WAAiC,EAAR,GAAC,G,KAItBvF,QAAA,CAAA8E,oBAAoB,CAAChB,UAAU,CAACE,aAAa,KAAKhE,QAAA,CAAA+E,oBAAoB,CAACjB,UAAU,CAACE,aAAa,EAAEwB,OAAO,I,cAAlHnH,mBAAA,CAMK,MANLoH,WAMK,GALHlH,mBAAA,CAIK,MAJLmH,WAIK,G,4BAHHnH,mBAAA,CAAkD;MAA/C,SAAM;IAAoC,4B,4BAC7CA,mBAAA,CAA0C;MAApC,SAAM;IAAY,GAAC,YAAU,qB,iBAAO,GAC1C,GAAAU,gBAAA,CAAGe,QAAA,CAAA+E,oBAAoB,CAACjB,UAAU,CAACE,aAAa,EAAEwB,OAAO,iB;+CAW3EjH,mBAAA,CAuBM,OAvBNoH,WAuBM,G,4BAtBJpH,mBAAA,CAEM;IAFD,SAAM;EAAsB,IAC/BA,mBAAA,CAA0C;IAAtC,SAAM;EAAM,GAAC,sBAAoB,E,qBAEvCA,mBAAA,CAkBM,OAlBNqH,WAkBM,GAjBO5F,QAAA,CAAAqD,KAAK,CAACC,MAAM,Q,cAAvBjF,mBAAA,CAMM,OANNwH,WAMM,EAAA9G,MAAA,SAAAA,MAAA,QALJR,mBAAA,CAAoD,WAAjD,+CAA6C,oBAChDA,mBAAA,CAGM;IAHD,SAAM;EAAkB,IAC3BA,mBAAA,CAAuC;IAApC,SAAM;EAAyB,I,iBAAK,8EAEzC,E,wCAEFF,mBAAA,CASM,OAAAyH,WAAA,GARJC,mBAAA,2DAA8D,E,4BAC9DxH,mBAAA,CAEM;IAFD,SAAM,iBAAiB;IAACJ,KAAsB,EAAtB;MAAA;IAAA;MAC3BI,mBAAA,CAAuC;IAA/BuE,EAAE,EAAC;EAAkB,G,iDAE/BvE,mBAAA,CAGM;IAHD,SAAM;EAAmC,IAC5CA,mBAAA,CAAuC;IAApC,SAAM;EAAyB,I,iBAAK,4EAEzC,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}