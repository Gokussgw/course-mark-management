{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass, withModifiers as _withModifiers, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"notifications-dropdown\"\n};\nvar _hoisted_2 = {\n  \"class\": \"dropdown\"\n};\nvar _hoisted_3 = {\n  \"class\": \"btn btn-link nav-link position-relative\",\n  id: \"notificationsDropdown\",\n  \"data-bs-toggle\": \"dropdown\",\n  \"aria-expanded\": \"false\"\n};\nvar _hoisted_4 = {\n  key: 0,\n  \"class\": \"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger\"\n};\nvar _hoisted_5 = {\n  \"class\": \"dropdown-menu dropdown-menu-end notifications-list\",\n  \"aria-labelledby\": \"notificationsDropdown\"\n};\nvar _hoisted_6 = {\n  \"class\": \"dropdown-header d-flex justify-content-between align-items-center\"\n};\nvar _hoisted_7 = {\n  key: 0,\n  \"class\": \"text-center py-3\"\n};\nvar _hoisted_8 = {\n  key: 1,\n  \"class\": \"dropdown-item-text text-center text-muted py-3\"\n};\nvar _hoisted_9 = [\"onClick\"];\nvar _hoisted_10 = {\n  \"class\": \"d-flex\"\n};\nvar _hoisted_11 = {\n  \"class\": \"notification-icon me-2\"\n};\nvar _hoisted_12 = {\n  \"class\": \"notification-content\"\n};\nvar _hoisted_13 = {\n  \"class\": \"notification-message\"\n};\nvar _hoisted_14 = {\n  \"class\": \"notification-time\"\n};\nvar _hoisted_15 = {\n  \"class\": \"text-center\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", _hoisted_3, [_cache[2] || (_cache[2] = _createElementVNode(\"i\", {\n    \"class\": \"bi bi-bell\"\n  }, null, -1 /* CACHED */)), $options.unreadCount > 0 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, [_createTextVNode(_toDisplayString($options.unreadCount > 99 ? '99+' : $options.unreadCount) + \" \", 1 /* TEXT */), _cache[1] || (_cache[1] = _createElementVNode(\"span\", {\n    \"class\": \"visually-hidden\"\n  }, \"unread notifications\", -1 /* CACHED */))])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"ul\", _hoisted_5, [_createElementVNode(\"li\", _hoisted_6, [_cache[3] || (_cache[3] = _createElementVNode(\"span\", null, \"Notifications\", -1 /* CACHED */)), $options.unreadCount > 0 ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    \"class\": \"btn btn-sm btn-link p-0 text-decoration-none\",\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $options.markAllAsRead && $options.markAllAsRead.apply($options, arguments);\n    })\n  }, \" Mark all as read \")) : _createCommentVNode(\"v-if\", true)]), $data.loading ? (_openBlock(), _createElementBlock(\"li\", _hoisted_7, _cache[4] || (_cache[4] = [_createElementVNode(\"div\", {\n    \"class\": \"spinner-border spinner-border-sm text-primary\",\n    role: \"status\"\n  }, [_createElementVNode(\"span\", {\n    \"class\": \"visually-hidden\"\n  }, \"Loading...\")], -1 /* CACHED */)]))) : $data.notifications.length === 0 ? (_openBlock(), _createElementBlock(\"li\", _hoisted_8, \" No new notifications \")) : (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 2\n  }, _renderList($data.notifications, function (notification) {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: notification.id\n    }, [_createElementVNode(\"a\", {\n      \"class\": _normalizeClass([\"dropdown-item notification-item\", {\n        'unread': !notification.is_read\n      }]),\n      href: \"#\",\n      onClick: _withModifiers(function ($event) {\n        return $options.handleNotificationClick(notification);\n      }, [\"prevent\"])\n    }, [_createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"i\", {\n      \"class\": _normalizeClass($options.getNotificationIcon(notification.type))\n    }, null, 2 /* CLASS */)]), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, _toDisplayString(notification.content), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_14, _toDisplayString($options.formatDate(notification.created_at)), 1 /* TEXT */)])])], 10 /* CLASS, PROPS */, _hoisted_9)]);\n  }), 128 /* KEYED_FRAGMENT */)), _cache[6] || (_cache[6] = _createElementVNode(\"li\", null, [_createElementVNode(\"hr\", {\n    \"class\": \"dropdown-divider\"\n  })], -1 /* CACHED */)), _createElementVNode(\"li\", _hoisted_15, [_createVNode(_component_router_link, {\n    \"class\": \"dropdown-item text-primary\",\n    to: \"/notifications\"\n  }, {\n    \"default\": _withCtx(function () {\n      return _cache[5] || (_cache[5] = [_createTextVNode(\" View all notifications \")]);\n    }),\n    _: 1 /* STABLE */,\n    __: [5]\n  })])])])]);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","$options","unreadCount","_hoisted_4","_hoisted_5","_hoisted_6","onClick","_cache","markAllAsRead","apply","arguments","$data","loading","_hoisted_7","role","notifications","length","_hoisted_8","_Fragment","key","_renderList","notification","_normalizeClass","is_read","href","_withModifiers","$event","handleNotificationClick","_hoisted_10","_hoisted_11","getNotificationIcon","type","_hoisted_12","_hoisted_13","_toDisplayString","content","_hoisted_14","formatDate","created_at","_hoisted_15","_createVNode","_component_router_link","to"],"sources":["C:\\Users\\ansmu\\Desktop\\Web\\course-mark-management\\frontend\\src\\components\\notifications\\NotificationsDropdown.vue"],"sourcesContent":["<template>\r\n  <div class=\"notifications-dropdown\">\r\n    <div class=\"dropdown\">\r\n      <button class=\"btn btn-link nav-link position-relative\" id=\"notificationsDropdown\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n        <i class=\"bi bi-bell\"></i>\r\n        <span v-if=\"unreadCount > 0\" class=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger\">\r\n          {{ unreadCount > 99 ? '99+' : unreadCount }}\r\n          <span class=\"visually-hidden\">unread notifications</span>\r\n        </span>\r\n      </button>\r\n      <ul class=\"dropdown-menu dropdown-menu-end notifications-list\" aria-labelledby=\"notificationsDropdown\">\r\n        <li class=\"dropdown-header d-flex justify-content-between align-items-center\">\r\n          <span>Notifications</span>\r\n          <button \r\n            v-if=\"unreadCount > 0\" \r\n            class=\"btn btn-sm btn-link p-0 text-decoration-none\" \r\n            @click=\"markAllAsRead\"\r\n          >\r\n            Mark all as read\r\n          </button>\r\n        </li>\r\n        <li v-if=\"loading\" class=\"text-center py-3\">\r\n          <div class=\"spinner-border spinner-border-sm text-primary\" role=\"status\">\r\n            <span class=\"visually-hidden\">Loading...</span>\r\n          </div>\r\n        </li>\r\n        <li v-else-if=\"notifications.length === 0\" class=\"dropdown-item-text text-center text-muted py-3\">\r\n          No new notifications\r\n        </li>\r\n        <template v-else>\r\n          <li v-for=\"notification in notifications\" :key=\"notification.id\">\r\n            <a \r\n              class=\"dropdown-item notification-item\" \r\n              :class=\"{ 'unread': !notification.is_read }\"\r\n              href=\"#\"\r\n              @click.prevent=\"handleNotificationClick(notification)\"\r\n            >\r\n              <div class=\"d-flex\">\r\n                <div class=\"notification-icon me-2\">\r\n                  <i :class=\"getNotificationIcon(notification.type)\"></i>\r\n                </div>\r\n                <div class=\"notification-content\">\r\n                  <div class=\"notification-message\">{{ notification.content }}</div>\r\n                  <div class=\"notification-time\">{{ formatDate(notification.created_at) }}</div>\r\n                </div>\r\n              </div>\r\n            </a>\r\n          </li>\r\n        </template>\r\n        <li><hr class=\"dropdown-divider\"></li>\r\n        <li class=\"text-center\">\r\n          <router-link class=\"dropdown-item text-primary\" to=\"/notifications\">\r\n            View all notifications\r\n          </router-link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'NotificationsDropdown',\r\n  data() {\r\n    return {\r\n      notifications: [],\r\n      loading: false,\r\n      refreshInterval: null,\r\n      notificationModal: null\r\n    };\r\n  },\r\n  computed: {\r\n    unreadCount() {\r\n      return this.notifications.filter(notification => !notification.is_read).length;\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchNotifications();\r\n    \r\n    // Refresh notifications every 60 seconds\r\n    this.refreshInterval = setInterval(() => {\r\n      this.fetchNotifications();\r\n    }, 60000);\r\n  },\r\n  beforeUnmount() {\r\n    if (this.refreshInterval) {\r\n      clearInterval(this.refreshInterval);\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchNotifications() {\r\n      this.loading = true;\r\n      try {\r\n        const response = await axios.get(`${process.env.VUE_APP_API_URL}/api/notifications`, {\r\n          headers: {\r\n            Authorization: `Bearer ${this.$store.getters['auth/token']}`\r\n          }\r\n        });\r\n        this.notifications = response.data;\r\n      } catch (error) {\r\n        console.error('Failed to fetch notifications:', error);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    async markAsRead(notificationId) {\r\n      try {\r\n        await axios.put(`${process.env.VUE_APP_API_URL}/api/notifications/${notificationId}`, {}, {\r\n          headers: {\r\n            Authorization: `Bearer ${this.$store.getters['auth/token']}`\r\n          }\r\n        });\r\n        \r\n        // Update the notification in the local state\r\n        const notification = this.notifications.find(n => n.id === notificationId);\r\n        if (notification) {\r\n          notification.is_read = 1;\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to mark notification as read:', error);\r\n      }\r\n    },\r\n    async markAllAsRead() {\r\n      try {\r\n        await axios.put(`${process.env.VUE_APP_API_URL}/api/notifications/read/all`, {}, {\r\n          headers: {\r\n            Authorization: `Bearer ${this.$store.getters['auth/token']}`\r\n          }\r\n        });\r\n        \r\n        // Update all notifications in the local state\r\n        this.notifications.forEach(notification => {\r\n          notification.is_read = 1;\r\n        });\r\n      } catch (error) {\r\n        console.error('Failed to mark all notifications as read:', error);\r\n      }\r\n    },\r\n    handleNotificationClick(notification) {\r\n      // Mark as read\r\n      if (!notification.is_read) {\r\n        this.markAsRead(notification.id);\r\n      }\r\n      \r\n      // Handle different notification types\r\n      switch(notification.type) {\r\n        case 'assessment':\r\n          // Navigate to assessment details\r\n          if (notification.related_id) {\r\n            this.$router.push(`/assessment/${notification.related_id}`);\r\n          }\r\n          break;\r\n        case 'mark':\r\n          // Navigate to mark details\r\n          if (notification.related_id) {\r\n            this.$router.push(`/mark/${notification.related_id}`);\r\n          }\r\n          break;\r\n        case 'course':\r\n          // Navigate to course details\r\n          if (notification.related_id) {\r\n            this.$router.push(`/course/${notification.related_id}`);\r\n          }\r\n          break;\r\n        default:\r\n          // Show modal for general notifications\r\n          this.$store.dispatch('notification/add', {\r\n            type: 'info',\r\n            message: notification.content\r\n          });\r\n      }\r\n    },\r\n    getNotificationIcon(type) {\r\n      switch(type) {\r\n        case 'assessment':\r\n          return 'bi bi-clipboard-check';\r\n        case 'mark':\r\n          return 'bi bi-percent';\r\n        case 'course':\r\n          return 'bi bi-book';\r\n        case 'warning':\r\n          return 'bi bi-exclamation-triangle';\r\n        case 'system':\r\n          return 'bi bi-gear';\r\n        default:\r\n          return 'bi bi-envelope';\r\n      }\r\n    },\r\n    formatDate(dateString) {\r\n      if (!dateString) return '';\r\n      \r\n      const date = new Date(dateString);\r\n      const now = new Date();\r\n      const diffMs = now - date;\r\n      const diffSec = Math.round(diffMs / 1000);\r\n      const diffMin = Math.round(diffSec / 60);\r\n      const diffHour = Math.round(diffMin / 60);\r\n      const diffDay = Math.round(diffHour / 24);\r\n      \r\n      if (diffSec < 60) {\r\n        return 'Just now';\r\n      } else if (diffMin < 60) {\r\n        return `${diffMin}m ago`;\r\n      } else if (diffHour < 24) {\r\n        return `${diffHour}h ago`;\r\n      } else if (diffDay < 7) {\r\n        return `${diffDay}d ago`;\r\n      } else {\r\n        return new Intl.DateTimeFormat('en-GB', {\r\n          year: 'numeric',\r\n          month: 'short',\r\n          day: 'numeric'\r\n        }).format(date);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.notifications-dropdown .dropdown-menu {\r\n  width: 320px;\r\n  max-height: 500px;\r\n  overflow-y: auto;\r\n  padding: 0;\r\n}\r\n\r\n.notifications-list {\r\n  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.dropdown-header {\r\n  background-color: #f8f9fa;\r\n  padding: 0.75rem 1rem;\r\n  font-weight: 600;\r\n  border-bottom: 1px solid #dee2e6;\r\n}\r\n\r\n.notification-item {\r\n  padding: 0.75rem 1rem;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.05);\r\n  white-space: normal;\r\n}\r\n\r\n.notification-item:hover {\r\n  background-color: #f8f9fa;\r\n}\r\n\r\n.notification-item.unread {\r\n  background-color: rgba(13, 110, 253, 0.05);\r\n}\r\n\r\n.notification-icon {\r\n  width: 24px;\r\n  height: 24px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 50%;\r\n  background-color: #e9ecef;\r\n  color: #495057;\r\n}\r\n\r\n.notification-content {\r\n  flex: 1;\r\n  min-width: 0;\r\n}\r\n\r\n.notification-message {\r\n  font-size: 0.875rem;\r\n  margin-bottom: 0.25rem;\r\n  white-space: normal;\r\n  word-break: break-word;\r\n}\r\n\r\n.notification-time {\r\n  font-size: 0.75rem;\r\n  color: #6c757d;\r\n}\r\n\r\n.dropdown-item-text {\r\n  padding: 0.5rem 1rem;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}