{"ast":null,"code":"import _regenerator from \"C:/Users/ansmu/Desktop/Web/NEW/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _asyncToGenerator from \"C:/Users/ansmu/Desktop/Web/NEW/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"C:/Users/ansmu/Desktop/Web/NEW/course-mark-management/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { mapGetters } from \"vuex\";\nimport Chart from \"chart.js/auto\";\nimport StudentRanking from '@/components/rankings/StudentRanking.vue';\nexport default {\n  name: \"StudentDashboard\",\n  components: {\n    StudentRanking: StudentRanking\n  },\n  data: function data() {\n    return {\n      courses: [],\n      assessments: [],\n      performanceChart: null,\n      // Sample data for demonstration - in a real app, this would come from the API\n      coursesData: [{\n        id: 1,\n        code: \"CS101\",\n        name: \"Introduction to Programming\",\n        lecturer_name: \"Dr. Smith\",\n        semester: \"Fall 2023\",\n        progress: 75,\n        average: 82,\n        rank: \"3/30\"\n      }, {\n        id: 2,\n        code: \"CS202\",\n        name: \"Database Systems\",\n        lecturer_name: \"Prof. Johnson\",\n        semester: \"Fall 2023\",\n        progress: 60,\n        average: 78,\n        rank: \"5/25\"\n      }, {\n        id: 3,\n        code: \"MATH201\",\n        name: \"Discrete Mathematics\",\n        lecturer_name: \"Dr. Wilson\",\n        semester: \"Fall 2023\",\n        progress: 90,\n        average: 85,\n        rank: \"2/28\"\n      }],\n      assessmentsData: [{\n        id: 1,\n        name: \"Midterm Exam\",\n        course_id: 1,\n        type: \"midterm\",\n        date: \"2023-10-15\",\n        weightage: 30\n      }, {\n        id: 2,\n        name: \"Assignment 2\",\n        course_id: 2,\n        type: \"assignment\",\n        date: \"2023-10-10\",\n        weightage: 15\n      }, {\n        id: 3,\n        name: \"Quiz 3\",\n        course_id: 3,\n        type: \"quiz\",\n        date: \"2023-10-05\",\n        weightage: 10\n      }]\n    };\n  },\n  computed: _objectSpread(_objectSpread(_objectSpread({}, mapGetters([\"isLoading\"])), mapGetters(\"auth\", [\"getUser\"])), {}, {\n    upcomingAssessments: function upcomingAssessments() {\n      var today = new Date();\n      return this.assessmentsData.filter(function (a) {\n        return new Date(a.date) >= today;\n      }).sort(function (a, b) {\n        return new Date(a.date) - new Date(b.date);\n      }).slice(0, 5);\n    }\n  }),\n  watch: {\n    isLoading: function isLoading(newVal, oldVal) {\n      var _this = this;\n      // When loading changes from true to false, initialize chart\n      if (oldVal && !newVal) {\n        this.$nextTick(function () {\n          setTimeout(function () {\n            _this.initChart();\n          }, 300);\n        });\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.loadData();\n  },\n  methods: {\n    loadData: function loadData() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.n) {\n            case 0:\n              try {\n                // In a real app, we would fetch the student's courses and assessments from the API\n                // For now, using sample data\n                _this2.courses = _this2.coursesData;\n                _this2.assessments = _this2.assessmentsData;\n\n                // Set loading to false - this will trigger the watcher to init the chart\n                _this2.$store.dispatch('setLoading', false);\n              } catch (error) {\n                console.error(\"Error loading dashboard data:\", error);\n              }\n            case 1:\n              return _context.a(2);\n          }\n        }, _callee);\n      }))();\n    },\n    getCourseNameById: function getCourseNameById(courseId) {\n      var course = this.courses.find(function (c) {\n        return c.id === courseId;\n      });\n      return course ? \"\".concat(course.code, \" - \").concat(course.name) : \"Unknown Course\";\n    },\n    getCourseProgressBarClass: function getCourseProgressBarClass(progress) {\n      if (progress >= 80) return \"bg-success\";\n      if (progress >= 60) return \"bg-info\";\n      if (progress >= 40) return \"bg-warning\";\n      return \"bg-danger\";\n    },\n    getAssessmentTypeBadgeClass: function getAssessmentTypeBadgeClass(type) {\n      switch (type) {\n        case \"quiz\":\n          return \"bg-info\";\n        case \"assignment\":\n          return \"bg-primary\";\n        case \"midterm\":\n          return \"bg-warning\";\n        case \"final_exam\":\n          return \"bg-danger\";\n        default:\n          return \"bg-secondary\";\n      }\n    },\n    formatDate: function formatDate(dateString) {\n      if (!dateString) return \"Not scheduled\";\n      var date = new Date(dateString);\n      return date.toLocaleDateString(\"en-GB\", {\n        day: \"numeric\",\n        month: \"short\",\n        year: \"numeric\"\n      });\n    },\n    initChart: function initChart() {\n      var ctx = document.getElementById(\"performanceChart\");\n\n      // Check if canvas element exists\n      if (!ctx) {\n        console.warn(\"Performance chart canvas not found, skipping chart initialization\");\n        return;\n      }\n      if (this.performanceChart) {\n        this.performanceChart.destroy();\n      }\n      try {\n        // Sample data for the chart\n        this.performanceChart = new Chart(ctx, {\n          type: \"line\",\n          data: {\n            labels: [\"Quiz 1\", \"Assignment 1\", \"Quiz 2\", \"Midterm\", \"Assignment 2\", \"Quiz 3\"],\n            datasets: [{\n              label: \"CS101\",\n              data: [75, 82, 80, 85, 90, 88],\n              borderColor: \"rgba(52, 152, 219, 1)\",\n              backgroundColor: \"rgba(52, 152, 219, 0.1)\",\n              tension: 0.4\n            }, {\n              label: \"CS202\",\n              data: [65, 70, 75, 78, 80, 82],\n              borderColor: \"rgba(46, 204, 113, 1)\",\n              backgroundColor: \"rgba(46, 204, 113, 0.1)\",\n              tension: 0.4\n            }, {\n              label: \"MATH201\",\n              data: [80, 85, 82, 90, 88, 92],\n              borderColor: \"rgba(231, 76, 60, 1)\",\n              backgroundColor: \"rgba(231, 76, 60, 0.1)\",\n              tension: 0.4\n            }]\n          },\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            plugins: {\n              legend: {\n                position: \"top\"\n              },\n              tooltip: {\n                mode: \"index\",\n                intersect: false\n              }\n            },\n            scales: {\n              y: {\n                min: 0,\n                max: 100,\n                ticks: {\n                  callback: function callback(value) {\n                    return value + \"%\";\n                  }\n                }\n              }\n            }\n          }\n        });\n      } catch (error) {\n        console.error(\"Error initializing performance chart:\", error);\n      }\n    },\n    logout: function logout() {\n      if (confirm(\"Are you sure you want to logout?\")) {\n        this.$store.dispatch(\"auth/logout\");\n        this.$router.push(\"/login\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","Chart","StudentRanking","name","components","data","courses","assessments","performanceChart","coursesData","id","code","lecturer_name","semester","progress","average","rank","assessmentsData","course_id","type","date","weightage","computed","_objectSpread","upcomingAssessments","today","Date","filter","a","sort","b","slice","watch","isLoading","newVal","oldVal","_this","$nextTick","setTimeout","initChart","mounted","loadData","methods","_this2","_asyncToGenerator","_regenerator","m","_callee","w","_context","n","$store","dispatch","error","console","getCourseNameById","courseId","course","find","c","concat","getCourseProgressBarClass","getAssessmentTypeBadgeClass","formatDate","dateString","toLocaleDateString","day","month","year","ctx","document","getElementById","warn","destroy","labels","datasets","label","borderColor","backgroundColor","tension","options","responsive","maintainAspectRatio","plugins","legend","position","tooltip","mode","intersect","scales","y","min","max","ticks","callback","value","logout","confirm","$router","push"],"sources":["C:\\Users\\ansmu\\Desktop\\Web\\NEW\\course-mark-management\\frontend\\src\\views\\student\\Dashboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"dashboard\">\r\n    <!-- Dashboard Header -->\r\n    <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n      <div>\r\n        <h1 class=\"mb-1\">Student Dashboard</h1>\r\n        <p class=\"text-muted mb-0\">Welcome back, {{ getUser.name }}</p>\r\n      </div>\r\n      <div class=\"d-flex align-items-center gap-3\">\r\n        <router-link\r\n          to=\"/student/feedback\"\r\n          class=\"btn btn-info\"\r\n          title=\"My Feedback\"\r\n        >\r\n          <i class=\"fas fa-comments me-2\"></i>My Feedback\r\n        </router-link>\r\n        <div class=\"user-info text-end\">\r\n          <small class=\"text-muted d-block\">{{ getUser.email }}</small>\r\n          <small class=\"badge bg-success\">{{ getUser.role }}</small>\r\n        </div>\r\n        <button class=\"btn btn-outline-danger\" @click=\"logout\" title=\"Logout\">\r\n          <i class=\"fas fa-sign-out-alt me-2\"></i>Logout\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <!-- My Academic Ranking -->\r\n      <div class=\"col-md-12 mb-4\">\r\n        <student-ranking \r\n          :show-individual-ranking=\"true\"\r\n          :show-class-rankings=\"true\"\r\n          :is-own-ranking=\"true\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-7 mb-4\">\r\n        <div class=\"card h-100\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">My Courses</h5>\r\n            <p class=\"card-text text-muted mb-4\">\r\n              Your current courses and progress\r\n            </p>\r\n\r\n            <div v-if=\"isLoading\" class=\"text-center py-4\">\r\n              <div class=\"spinner-border text-primary\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>\r\n\r\n            <div v-else-if=\"courses.length === 0\" class=\"text-center py-4\">\r\n              <p>You are not enrolled in any courses yet.</p>\r\n              <i class=\"fas fa-book-open fa-3x text-muted mb-3\"></i>\r\n            </div>\r\n\r\n            <div v-else>\r\n              <div\r\n                v-for=\"course in courses\"\r\n                :key=\"course.id\"\r\n                class=\"course-card mb-3\"\r\n              >\r\n                <div class=\"d-flex justify-content-between align-items-start\">\r\n                  <div>\r\n                    <h6>\r\n                      {{ course.code }} - {{ course.name }}\r\n                      <span class=\"badge bg-primary ms-2\">{{\r\n                        course.semester\r\n                      }}</span>\r\n                    </h6>\r\n                    <p class=\"text-muted\">\r\n                      Lecturer: {{ course.lecturer_name || \"Not assigned\" }}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div class=\"text-end\">\r\n                    <router-link\r\n                      :to=\"`/student/course/${course.id}`\"\r\n                      class=\"btn btn-sm btn-outline-primary me-1\"\r\n                    >\r\n                      <i class=\"fas fa-chart-bar me-1\"></i> View Marks\r\n                    </router-link>\r\n                    <router-link\r\n                      :to=\"`/student/breakdown/${course.id}`\"\r\n                      class=\"btn btn-sm btn-outline-warning me-1\"\r\n                    >\r\n                      <i class=\"fas fa-chart-pie me-1\"></i> Breakdown\r\n                    </router-link>\r\n                    <router-link\r\n                      :to=\"`/student/simulation/${course.id}`\"\r\n                      class=\"btn btn-sm btn-outline-info me-1\"\r\n                    >\r\n                      <i class=\"fas fa-calculator me-1\"></i> Simulate\r\n                    </router-link>\r\n                    <router-link\r\n                      to=\"/student/comparison\"\r\n                      class=\"btn btn-sm btn-outline-success\"\r\n                    >\r\n                      <i class=\"fas fa-users me-1\"></i> Compare\r\n                    </router-link>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"progress mt-2\" style=\"height: 10px\">\r\n                  <div\r\n                    class=\"progress-bar\"\r\n                    :class=\"getCourseProgressBarClass(course.progress)\"\r\n                    role=\"progressbar\"\r\n                    :style=\"`width: ${course.progress}%`\"\r\n                    :aria-valuenow=\"course.progress\"\r\n                    aria-valuemin=\"0\"\r\n                    aria-valuemax=\"100\"\r\n                  >\r\n                    {{ course.progress }}%\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"d-flex justify-content-between mt-1\">\r\n                  <small class=\"text-muted\"\r\n                    >Current Average: {{ course.average }}%</small\r\n                  >\r\n                  <small class=\"text-muted\"\r\n                    >Rank: {{ course.rank || \"N/A\" }}</small\r\n                  >\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-md-5 mb-4\">\r\n        <div class=\"card h-100\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Upcoming Assessments</h5>\r\n            <p class=\"card-text text-muted mb-4\">\r\n              Your next scheduled assessments\r\n            </p>\r\n\r\n            <div v-if=\"isLoading\" class=\"text-center py-4\">\r\n              <div class=\"spinner-border text-primary\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              v-else-if=\"upcomingAssessments.length === 0\"\r\n              class=\"text-center py-4\"\r\n            >\r\n              <p>No upcoming assessments.</p>\r\n              <i class=\"fas fa-calendar-check fa-3x text-muted mb-3\"></i>\r\n            </div>\r\n\r\n            <ul v-else class=\"list-group list-group-flush\">\r\n              <li\r\n                v-for=\"assessment in upcomingAssessments\"\r\n                :key=\"assessment.id\"\r\n                class=\"list-group-item\"\r\n              >\r\n                <div class=\"d-flex w-100 justify-content-between\">\r\n                  <h6 class=\"mb-1\">{{ assessment.name }}</h6>\r\n                  <span\r\n                    class=\"badge\"\r\n                    :class=\"getAssessmentTypeBadgeClass(assessment.type)\"\r\n                  >\r\n                    {{ assessment.type }}\r\n                  </span>\r\n                </div>\r\n                <p class=\"mb-1\">\r\n                  {{ getCourseNameById(assessment.course_id) }}\r\n                </p>\r\n                <div class=\"d-flex w-100 justify-content-between\">\r\n                  <small class=\"text-muted\">\r\n                    <i class=\"fas fa-weight me-1\"></i>\r\n                    {{ assessment.weightage }}% of total\r\n                  </small>\r\n                  <small class=\"text-muted\">\r\n                    <i class=\"far fa-calendar-alt me-1\"></i>\r\n                    {{ formatDate(assessment.date) }}\r\n                  </small>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 mb-4\">\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Performance Overview</h5>\r\n            <p class=\"card-text text-muted mb-4\">\r\n              Your academic performance across all courses\r\n            </p>\r\n\r\n            <div v-if=\"isLoading\" class=\"text-center py-4\">\r\n              <div class=\"spinner-border text-primary\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>\r\n\r\n            <div v-else class=\"chart-container\">\r\n              <!-- Placeholder for Chart.js integration -->\r\n              <canvas id=\"performanceChart\" width=\"400\" height=\"200\"></canvas>\r\n              <p class=\"text-center text-muted mt-3\">\r\n                <i class=\"fas fa-info-circle me-1\"></i>\r\n                Chart shows your performance trend over time across all courses\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from \"vuex\";\r\nimport Chart from \"chart.js/auto\";\r\nimport StudentRanking from '@/components/rankings/StudentRanking.vue';\r\n\r\nexport default {\r\n  name: \"StudentDashboard\",\r\n  components: {\r\n    StudentRanking\r\n  },\r\n  data() {\r\n    return {\r\n      courses: [],\r\n      assessments: [],\r\n      performanceChart: null,\r\n      // Sample data for demonstration - in a real app, this would come from the API\r\n      coursesData: [\r\n        {\r\n          id: 1,\r\n          code: \"CS101\",\r\n          name: \"Introduction to Programming\",\r\n          lecturer_name: \"Dr. Smith\",\r\n          semester: \"Fall 2023\",\r\n          progress: 75,\r\n          average: 82,\r\n          rank: \"3/30\",\r\n        },\r\n        {\r\n          id: 2,\r\n          code: \"CS202\",\r\n          name: \"Database Systems\",\r\n          lecturer_name: \"Prof. Johnson\",\r\n          semester: \"Fall 2023\",\r\n          progress: 60,\r\n          average: 78,\r\n          rank: \"5/25\",\r\n        },\r\n        {\r\n          id: 3,\r\n          code: \"MATH201\",\r\n          name: \"Discrete Mathematics\",\r\n          lecturer_name: \"Dr. Wilson\",\r\n          semester: \"Fall 2023\",\r\n          progress: 90,\r\n          average: 85,\r\n          rank: \"2/28\",\r\n        },\r\n      ],\r\n      assessmentsData: [\r\n        {\r\n          id: 1,\r\n          name: \"Midterm Exam\",\r\n          course_id: 1,\r\n          type: \"midterm\",\r\n          date: \"2023-10-15\",\r\n          weightage: 30,\r\n        },\r\n        {\r\n          id: 2,\r\n          name: \"Assignment 2\",\r\n          course_id: 2,\r\n          type: \"assignment\",\r\n          date: \"2023-10-10\",\r\n          weightage: 15,\r\n        },\r\n        {\r\n          id: 3,\r\n          name: \"Quiz 3\",\r\n          course_id: 3,\r\n          type: \"quiz\",\r\n          date: \"2023-10-05\",\r\n          weightage: 10,\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"isLoading\"]),\r\n    ...mapGetters(\"auth\", [\"getUser\"]),\r\n\r\n    upcomingAssessments() {\r\n      const today = new Date();\r\n\r\n      return this.assessmentsData\r\n        .filter((a) => new Date(a.date) >= today)\r\n        .sort((a, b) => new Date(a.date) - new Date(b.date))\r\n        .slice(0, 5);\r\n    },\r\n  },\r\n  watch: {\r\n    isLoading(newVal, oldVal) {\r\n      // When loading changes from true to false, initialize chart\r\n      if (oldVal && !newVal) {\r\n        this.$nextTick(() => {\r\n          setTimeout(() => {\r\n            this.initChart();\r\n          }, 300);\r\n        });\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.loadData();\r\n  },\r\n  methods: {\r\n    async loadData() {\r\n      try {\r\n        // In a real app, we would fetch the student's courses and assessments from the API\r\n        // For now, using sample data\r\n        this.courses = this.coursesData;\r\n        this.assessments = this.assessmentsData;\r\n\r\n        // Set loading to false - this will trigger the watcher to init the chart\r\n        this.$store.dispatch('setLoading', false);\r\n      } catch (error) {\r\n        console.error(\"Error loading dashboard data:\", error);\r\n      }\r\n    },\r\n\r\n    getCourseNameById(courseId) {\r\n      const course = this.courses.find((c) => c.id === courseId);\r\n      return course ? `${course.code} - ${course.name}` : \"Unknown Course\";\r\n    },\r\n\r\n    getCourseProgressBarClass(progress) {\r\n      if (progress >= 80) return \"bg-success\";\r\n      if (progress >= 60) return \"bg-info\";\r\n      if (progress >= 40) return \"bg-warning\";\r\n      return \"bg-danger\";\r\n    },\r\n\r\n    getAssessmentTypeBadgeClass(type) {\r\n      switch (type) {\r\n        case \"quiz\":\r\n          return \"bg-info\";\r\n        case \"assignment\":\r\n          return \"bg-primary\";\r\n        case \"midterm\":\r\n          return \"bg-warning\";\r\n        case \"final_exam\":\r\n          return \"bg-danger\";\r\n        default:\r\n          return \"bg-secondary\";\r\n      }\r\n    },\r\n\r\n    formatDate(dateString) {\r\n      if (!dateString) return \"Not scheduled\";\r\n\r\n      const date = new Date(dateString);\r\n      return date.toLocaleDateString(\"en-GB\", {\r\n        day: \"numeric\",\r\n        month: \"short\",\r\n        year: \"numeric\",\r\n      });\r\n    },\r\n\r\n    initChart() {\r\n      const ctx = document.getElementById(\"performanceChart\");\r\n      \r\n      // Check if canvas element exists\r\n      if (!ctx) {\r\n        console.warn(\"Performance chart canvas not found, skipping chart initialization\");\r\n        return;\r\n      }\r\n\r\n      if (this.performanceChart) {\r\n        this.performanceChart.destroy();\r\n      }\r\n\r\n      try {\r\n        // Sample data for the chart\r\n        this.performanceChart = new Chart(ctx, {\r\n        type: \"line\",\r\n        data: {\r\n          labels: [\r\n            \"Quiz 1\",\r\n            \"Assignment 1\",\r\n            \"Quiz 2\",\r\n            \"Midterm\",\r\n            \"Assignment 2\",\r\n            \"Quiz 3\",\r\n          ],\r\n          datasets: [\r\n            {\r\n              label: \"CS101\",\r\n              data: [75, 82, 80, 85, 90, 88],\r\n              borderColor: \"rgba(52, 152, 219, 1)\",\r\n              backgroundColor: \"rgba(52, 152, 219, 0.1)\",\r\n              tension: 0.4,\r\n            },\r\n            {\r\n              label: \"CS202\",\r\n              data: [65, 70, 75, 78, 80, 82],\r\n              borderColor: \"rgba(46, 204, 113, 1)\",\r\n              backgroundColor: \"rgba(46, 204, 113, 0.1)\",\r\n              tension: 0.4,\r\n            },\r\n            {\r\n              label: \"MATH201\",\r\n              data: [80, 85, 82, 90, 88, 92],\r\n              borderColor: \"rgba(231, 76, 60, 1)\",\r\n              backgroundColor: \"rgba(231, 76, 60, 0.1)\",\r\n              tension: 0.4,\r\n            },\r\n          ],\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          plugins: {\r\n            legend: {\r\n              position: \"top\",\r\n            },\r\n            tooltip: {\r\n              mode: \"index\",\r\n              intersect: false,\r\n            },\r\n          },\r\n          scales: {\r\n            y: {\r\n              min: 0,\r\n              max: 100,\r\n              ticks: {\r\n                callback: function (value) {\r\n                  return value + \"%\";\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n      });\r\n      } catch (error) {\r\n        console.error(\"Error initializing performance chart:\", error);\r\n      }\r\n    },\r\n\r\n    logout() {\r\n      if (confirm(\"Are you sure you want to logout?\")) {\r\n        this.$store.dispatch(\"auth/logout\");\r\n        this.$router.push(\"/login\");\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.dashboard h1 {\r\n  color: #2c3e50;\r\n  font-weight: 700;\r\n}\r\n\r\n.card {\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  border: none;\r\n  border-radius: 10px;\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n\r\n.card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 8px 15px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.card-title {\r\n  color: #2c3e50;\r\n  font-weight: 600;\r\n}\r\n\r\n.course-card {\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n  background-color: #f8f9fa;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.course-card:hover {\r\n  background-color: #e9ecef;\r\n}\r\n\r\n.progress {\r\n  border-radius: 5px;\r\n  background-color: #e9ecef;\r\n}\r\n\r\n.progress-bar {\r\n  border-radius: 5px;\r\n  font-size: 0.6rem;\r\n  line-height: 10px;\r\n  font-weight: bold;\r\n}\r\n\r\n.list-group-item {\r\n  padding: 15px;\r\n  border-left: 0;\r\n  border-right: 0;\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\n.list-group-item:first-child {\r\n  border-top: 0;\r\n}\r\n\r\n.list-group-item:last-child {\r\n  border-bottom: 0;\r\n}\r\n\r\n.badge {\r\n  padding: 6px 10px;\r\n  font-weight: 500;\r\n  text-transform: capitalize;\r\n}\r\n\r\n.chart-container {\r\n  position: relative;\r\n  height: 300px;\r\n  width: 100%;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}